{"pageProps":{"data":{"component":"DoubleNavbar","slug":"double-navbar","code":[{"fileName":"DoubleNavbar.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { UnstyledButton, Tooltip, Title, rem } from '@mantine/core';\nimport {\n  IconHome2,\n  IconGauge,\n  IconDeviceDesktopAnalytics,\n  IconFingerprint,\n  IconCalendarStats,\n  IconUser,\n  IconSettings,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './DoubleNavbar.module.css';\n\nconst mainLinksMockdata = [\n  { icon: IconHome2, label: 'Home' },\n  { icon: IconGauge, label: 'Dashboard' },\n  { icon: IconDeviceDesktopAnalytics, label: 'Analytics' },\n  { icon: IconCalendarStats, label: 'Releases' },\n  { icon: IconUser, label: 'Account' },\n  { icon: IconFingerprint, label: 'Security' },\n  { icon: IconSettings, label: 'Settings' },\n];\n\nconst linksMockdata = [\n  'Security',\n  'Settings',\n  'Dashboard',\n  'Releases',\n  'Account',\n  'Orders',\n  'Clients',\n  'Databases',\n  'Pull Requests',\n  'Open Issues',\n  'Wiki pages',\n];\n\nexport function DoubleNavbar() {\n  const [active, setActive] = useState('Releases');\n  const [activeLink, setActiveLink] = useState('Settings');\n\n  const mainLinks = mainLinksMockdata.map((link) => (\n    <Tooltip\n      label={link.label}\n      position=\"right\"\n      withArrow\n      transitionProps={{ duration: 0 }}\n      key={link.label}\n    >\n      <UnstyledButton\n        onClick={() => setActive(link.label)}\n        className={classes.mainLink}\n        data-active={link.label === active || undefined}\n      >\n        <link.icon style={{ width: rem(22), height: rem(22) }} stroke={1.5} />\n      </UnstyledButton>\n    </Tooltip>\n  ));\n\n  const links = linksMockdata.map((link) => (\n    <a\n      className={classes.link}\n      data-active={activeLink === link || undefined}\n      href=\"#\"\n      onClick={(event) => {\n        event.preventDefault();\n        setActiveLink(link);\n      }}\n      key={link}\n    >\n      {link}\n    </a>\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.wrapper}>\n        <div className={classes.aside}>\n          <div className={classes.logo}>\n            <MantineLogo type=\"mark\" size={30} />\n          </div>\n          {mainLinks}\n        </div>\n        <div className={classes.main}>\n          <Title order={4} className={classes.title}>\n            {active}\n          </Title>\n\n          {links}\n        </div>\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"DoubleNavbar.module.css","language":"css","code":".navbar {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-6));\n  height: rem(750px);\n  width: rem(300px);\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.wrapper {\n  display: flex;\n  flex: 1;\n}\n\n.aside {\n  flex: 0 0 rem(60px);\n  background-color: var(--mantine-color-body);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n}\n\n.main {\n  flex: 1;\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n}\n\n.mainLink {\n  width: rem(44px);\n  height: rem(44px);\n  border-radius: var(--mantine-radius-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-5));\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      background-color: var(--mantine-color-blue-light);\n      color: var(--mantine-color-blue-light-color);\n    }\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  margin-bottom: var(--mantine-spacing-xl);\n  background-color: var(--mantine-color-body);\n  padding: var(--mantine-spacing-md);\n  padding-top: rem(18px);\n  height: rem(60px);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n}\n\n.logo {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  height: rem(60px);\n  padding-top: var(--mantine-spacing-md);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n  margin-bottom: var(--mantine-spacing-xl);\n}\n\n.link {\n  display: block;\n  text-decoration: none;\n  border-top-right-radius: var(--mantine-radius-md);\n  border-bottom-right-radius: var(--mantine-radius-md);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  padding: 0 var(--mantine-spacing-md);\n  font-size: var(--mantine-font-size-sm);\n  margin-right: var(--mantine-spacing-md);\n  font-weight: 500;\n  height: rem(44px);\n  line-height: rem(44px);\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-5));\n    color: light-dark(var(--mantine-color-dark), var(--mantine-color-light));\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      border-left-color: var(--mantine-color-blue-filled);\n      background-color: var(--mantine-color-blue-filled);\n      color: var(--mantine-color-white);\n    }\n  }\n}\n"}],"attributes":{"title":"Navbar with 2 sections","category":"navbars","canvas":{"center":false}}},"allComponents":[{"component":"ActionToggle","slug":"action-toggle","code":[{"fileName":"ActionToggle.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { ActionIcon, useMantineColorScheme, useComputedColorScheme, Group } from '@mantine/core';\nimport { IconSun, IconMoon } from '@tabler/icons-react';\nimport classes from './ActionToggle.module.css';\n\nexport function ActionToggle() {\n  const { setColorScheme } = useMantineColorScheme();\n  const computedColorScheme = useComputedColorScheme('light', { getInitialValueInEffect: true });\n\n  return (\n    <Group justify=\"center\">\n      <ActionIcon\n        onClick={() => setColorScheme(computedColorScheme === 'light' ? 'dark' : 'light')}\n        variant=\"default\"\n        size=\"xl\"\n        aria-label=\"Toggle color scheme\"\n      >\n        <IconSun className={cx(classes.icon, classes.light)} stroke={1.5} />\n        <IconMoon className={cx(classes.icon, classes.dark)} stroke={1.5} />\n      </ActionIcon>\n    </Group>\n  );\n}\n"},{"fileName":"ActionToggle.module.css","language":"css","code":".icon {\n  width: rem(22px);\n  height: rem(22px);\n}\n\n.dark {\n  @mixin dark {\n    display: none;\n  }\n\n  @mixin light {\n    display: block;\n  }\n}\n\n.light {\n  @mixin light {\n    display: none;\n  }\n\n  @mixin dark {\n    display: block;\n  }\n}\n"}],"attributes":{"title":"Color scheme toggle","category":"buttons","canvas":{"center":true}}},{"component":"ActionsGrid","slug":"actions-grid","code":[{"fileName":"ActionsGrid.tsx","language":"tsx","code":"import {\n  Card,\n  Text,\n  SimpleGrid,\n  UnstyledButton,\n  Anchor,\n  Group,\n  useMantineTheme,\n} from '@mantine/core';\nimport {\n  IconCreditCard,\n  IconBuildingBank,\n  IconRepeat,\n  IconReceiptRefund,\n  IconReceipt,\n  IconReceiptTax,\n  IconReport,\n  IconCashBanknote,\n  IconCoin,\n} from '@tabler/icons-react';\nimport classes from './ActionsGrid.module.css';\n\nconst mockdata = [\n  { title: 'Credit cards', icon: IconCreditCard, color: 'violet' },\n  { title: 'Banks nearby', icon: IconBuildingBank, color: 'indigo' },\n  { title: 'Transfers', icon: IconRepeat, color: 'blue' },\n  { title: 'Refunds', icon: IconReceiptRefund, color: 'green' },\n  { title: 'Receipts', icon: IconReceipt, color: 'teal' },\n  { title: 'Taxes', icon: IconReceiptTax, color: 'cyan' },\n  { title: 'Reports', icon: IconReport, color: 'pink' },\n  { title: 'Payments', icon: IconCoin, color: 'red' },\n  { title: 'Cashback', icon: IconCashBanknote, color: 'orange' },\n];\n\nexport function ActionsGrid() {\n  const theme = useMantineTheme();\n\n  const items = mockdata.map((item) => (\n    <UnstyledButton key={item.title} className={classes.item}>\n      <item.icon color={theme.colors[item.color][6]} size=\"2rem\" />\n      <Text size=\"xs\" mt={7}>\n        {item.title}\n      </Text>\n    </UnstyledButton>\n  ));\n\n  return (\n    <Card withBorder radius=\"md\" className={classes.card}>\n      <Group justify=\"space-between\">\n        <Text className={classes.title}>Services</Text>\n        <Anchor size=\"xs\" c=\"dimmed\" style={{ lineHeight: 1 }}>\n          + 21 other services\n        </Anchor>\n      </Group>\n      <SimpleGrid cols={3} mt=\"md\">\n        {items}\n      </SimpleGrid>\n    </Card>\n  );\n}\n"},{"fileName":"ActionsGrid.module.css","language":"css","code":"/* const useStyles = createStyles((theme) => ({\n  card: {\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n  },\n\n  title: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontWeight: 700,\n  },\n\n  item: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: theme.radius.md,\n    height: rem(90),\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    transition: 'box-shadow 150ms ease, transform 100ms ease',\n\n    '&:hover': {\n      boxShadow: theme.shadows.md,\n      transform: 'scale(1.05)',\n    },\n  },\n})); */\n\n.card {\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 700;\n}\n\n.item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border-radius: var(--mantine-radius-md);\n  height: rem(90px);\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-7));\n  transition: box-shadow 150ms ease, transform 100ms ease;\n\n  @mixin hover {\n    box-shadow: var(--mantine-shadows-md);\n    transform: scale(1.05);\n  }\n}\n"}],"attributes":{"title":"Card with actions grid","category":"app-cards","canvas":{"center":true,"maxWidth":420}}},{"component":"ArticleCard","slug":"article-card","code":[{"fileName":"ArticleCard.tsx","language":"tsx","code":"import { IconBookmark, IconHeart, IconShare } from '@tabler/icons-react';\nimport {\n  Card,\n  Image,\n  Text,\n  ActionIcon,\n  Badge,\n  Group,\n  Center,\n  Avatar,\n  useMantineTheme,\n  rem,\n} from '@mantine/core';\nimport classes from './ArticleCard.module.css';\n\nexport function ArticleCard() {\n  const linkProps = { href: 'https://mantine.dev', target: '_blank', rel: 'noopener noreferrer' };\n  const theme = useMantineTheme();\n\n  return (\n    <Card withBorder radius=\"md\" className={classes.card}>\n      <Card.Section>\n        <a {...linkProps}>\n          <Image src=\"https://i.imgur.com/Cij5vdL.png\" height={180} />\n        </a>\n      </Card.Section>\n\n      <Badge className={classes.rating} variant=\"gradient\" gradient={{ from: 'yellow', to: 'red' }}>\n        outstanding\n      </Badge>\n\n      <Text className={classes.title} fw={500} component=\"a\" {...linkProps}>\n        Resident Evil Village review\n      </Text>\n\n      <Text fz=\"sm\" c=\"dimmed\" lineClamp={4}>\n        Resident Evil Village is a direct sequel to 2017’s Resident Evil 7, but takes a very\n        different direction to its predecessor, namely the fact that this time round instead of\n        fighting against various mutated zombies, you’re now dealing with more occult enemies like\n        werewolves and vampires.\n      </Text>\n\n      <Group justify=\"space-between\" className={classes.footer}>\n        <Center>\n          <Avatar\n            src=\"https://images.unsplash.com/photo-1593229874334-90d965f27c42?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=200&q=80\"\n            size={24}\n            radius=\"xl\"\n            mr=\"xs\"\n          />\n          <Text fz=\"sm\" inline>\n            Bill Wormeater\n          </Text>\n        </Center>\n\n        <Group gap={8} mr={0}>\n          <ActionIcon className={classes.action}>\n            <IconHeart style={{ width: rem(16), height: rem(16) }} color={theme.colors.red[6]} />\n          </ActionIcon>\n          <ActionIcon className={classes.action}>\n            <IconBookmark\n              style={{ width: rem(16), height: rem(16) }}\n              color={theme.colors.yellow[7]}\n            />\n          </ActionIcon>\n          <ActionIcon className={classes.action}>\n            <IconShare style={{ width: rem(16), height: rem(16) }} color={theme.colors.blue[6]} />\n          </ActionIcon>\n        </Group>\n      </Group>\n    </Card>\n  );\n}\n"},{"fileName":"ArticleCard.module.css","language":"css","code":".card {\n  position: relative;\n  background-color: var(--mantine-color-body);\n}\n\n.rating {\n  position: absolute;\n  top: var(--mantine-spacing-xs);\n  right: rem(12px);\n  pointer-events: none;\n}\n\n.title {\n  display: block;\n  margin-top: var(--mantine-spacing-md);\n  margin-bottom: rem(5px);\n}\n\n.action {\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-5));\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-6));\n  }\n}\n\n.footer {\n  margin-top: var(--mantine-spacing-md);\n}\n"}],"attributes":{"title":"Article card with image","category":"article-cards","dimmed":true,"canvas":{"center":true,"maxWidth":320}}},{"component":"ArticleCardFooter","slug":"article-card-footer","code":[{"fileName":"ArticleCardFooter.tsx","language":"tsx","code":"import {\n  Card,\n  Image,\n  ActionIcon,\n  Group,\n  Text,\n  Avatar,\n  Badge,\n  useMantineTheme,\n  rem,\n} from '@mantine/core';\nimport { IconHeart, IconBookmark, IconShare } from '@tabler/icons-react';\nimport classes from './ArticleCardFooter.module.css';\n\nexport function ArticleCardFooter() {\n  const theme = useMantineTheme();\n\n  return (\n    <Card withBorder padding=\"lg\" radius=\"md\" className={classes.card}>\n      <Card.Section mb=\"sm\">\n        <Image\n          src=\"https://images.unsplash.com/photo-1477554193778-9562c28588c0?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=80\"\n          alt=\"Top 50 underrated plants for house decoration\"\n          height={180}\n        />\n      </Card.Section>\n\n      <Badge w=\"fit-content\" variant=\"light\">\n        decorations\n      </Badge>\n\n      <Text fw={700} className={classes.title} mt=\"xs\">\n        Top 50 underrated plants for house decoration\n      </Text>\n\n      <Group mt=\"lg\">\n        <Avatar\n          src=\"https://images.unsplash.com/photo-1628890923662-2cb23c2e0cfe?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=200&q=80\"\n          radius=\"sm\"\n        />\n        <div>\n          <Text fw={500}>Elsa Gardenowl</Text>\n          <Text fz=\"xs\" c=\"dimmed\">\n            posted 34 minutes ago\n          </Text>\n        </div>\n      </Group>\n\n      <Card.Section className={classes.footer}>\n        <Group justify=\"space-between\">\n          <Text fz=\"xs\" c=\"dimmed\">\n            733 people liked this\n          </Text>\n          <Group gap={0}>\n            <ActionIcon variant=\"subtle\" color=\"gray\">\n              <IconHeart\n                style={{ width: rem(20), height: rem(20) }}\n                color={theme.colors.red[6]}\n                stroke={1.5}\n              />\n            </ActionIcon>\n            <ActionIcon variant=\"subtle\" color=\"gray\">\n              <IconBookmark\n                style={{ width: rem(20), height: rem(20) }}\n                color={theme.colors.yellow[6]}\n                stroke={1.5}\n              />\n            </ActionIcon>\n            <ActionIcon variant=\"subtle\" color=\"gray\">\n              <IconShare\n                style={{ width: rem(20), height: rem(20) }}\n                color={theme.colors.blue[6]}\n                stroke={1.5}\n              />\n            </ActionIcon>\n          </Group>\n        </Group>\n      </Card.Section>\n    </Card>\n  );\n}\n"},{"fileName":"ArticleCardFooter.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n\n.footer {\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-lg);\n  margin-top: var(--mantine-spacing-md);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n}\n"}],"attributes":{"title":"Article card with footer","category":"article-cards","withColor":true,"dimmed":true,"canvas":{"center":true,"maxWidth":320}}},{"component":"ArticleCardImage","slug":"article-card-image","code":[{"fileName":"ArticleCardImage.tsx","language":"tsx","code":"import { Paper, Text, Title, Button } from '@mantine/core';\nimport classes from './ArticleCardImage.module.css';\n\nexport function ArticleCardImage() {\n  return (\n    <Paper shadow=\"md\" p=\"xl\" radius=\"md\" className={classes.card}>\n      <div>\n        <Text className={classes.category} size=\"xs\">\n          nature\n        </Text>\n        <Title order={3} className={classes.title}>\n          Best forests to visit in North America\n        </Title>\n      </div>\n      <Button variant=\"white\" color=\"dark\">\n        Read article\n      </Button>\n    </Paper>\n  );\n}\n"},{"fileName":"ArticleCardImage.module.css","language":"css","code":".card {\n  height: rem(440px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  background-size: cover;\n  background-position: center;\n  background-image: url(https://images.unsplash.com/photo-1508193638397-1c4234db14d8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80);\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 900;\n  color: var(--mantine-color-white);\n  line-height: 1.2;\n  font-size: rem(32px);\n  margin-top: var(--mantine-spacing-xs);\n}\n\n.category {\n  color: var(--mantine-color-white);\n  opacity: 0.7;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n"}],"attributes":{"title":"Card with background image","category":"article-cards","canvas":{"center":true,"maxWidth":320}}},{"component":"ArticleCardVertical","slug":"article-card-vertical","code":[{"fileName":"ArticleCardVertical.tsx","language":"tsx","code":"import { Card, Image, Avatar, Text, Group } from '@mantine/core';\nimport classes from './ArticleCardVertical.module.css';\n\nexport function ArticleCardVertical() {\n  return (\n    <Card withBorder radius=\"md\" p={0} className={classes.card}>\n      <Group wrap=\"nowrap\" gap={0}>\n        <Image\n          src=\"https://images.unsplash.com/photo-1602080858428-57174f9431cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80\"\n          height={160}\n        />\n        <div className={classes.body}>\n          <Text tt=\"uppercase\" c=\"dimmed\" fw={700} size=\"xs\">\n            technology\n          </Text>\n          <Text className={classes.title} mt=\"xs\" mb=\"md\">\n            The best laptop for Frontend engineers in 2022\n          </Text>\n          <Group wrap=\"nowrap\" gap=\"xs\">\n            <Group gap=\"xs\" wrap=\"nowrap\">\n              <Avatar\n                size={20}\n                src=\"https://images.unsplash.com/photo-1628890923662-2cb23c2e0cfe?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=200&q=80\"\n              />\n              <Text size=\"xs\">Elsa Typechecker</Text>\n            </Group>\n            <Text size=\"xs\" c=\"dimmed\">\n              •\n            </Text>\n            <Text size=\"xs\" c=\"dimmed\">\n              Feb 6th\n            </Text>\n          </Group>\n        </div>\n      </Group>\n    </Card>\n  );\n}\n"},{"fileName":"ArticleCardVertical.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.title {\n  font-weight: bold;\n  font-family: Greycliff CF, var(--mantine-font-family);\n  line-height: 1.2;\n}\n\n.body {\n  padding: var(--mantine-spacing-md);\n}\n"}],"attributes":{"title":"Vertical article card","category":"article-cards","dimmed":true,"canvas":{"center":true,"maxWidth":520}}},{"component":"ArticlesCardsGrid","slug":"articles-cards-grid","code":[{"fileName":"ArticlesCardsGrid.tsx","language":"tsx","code":"import { SimpleGrid, Card, Image, Text, Container, AspectRatio } from '@mantine/core';\nimport classes from './ArticlesCardsGrid.module.css';\n\nconst mockdata = [\n  {\n    title: 'Top 10 places to visit in Norway this summer',\n    image:\n      'https://images.unsplash.com/photo-1527004013197-933c4bb611b3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n    date: 'August 18, 2022',\n  },\n  {\n    title: 'Best forests to visit in North America',\n    image:\n      'https://images.unsplash.com/photo-1448375240586-882707db888b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n    date: 'August 27, 2022',\n  },\n  {\n    title: 'Hawaii beaches review: better than you think',\n    image:\n      'https://images.unsplash.com/photo-1507525428034-b723cf961d3e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n    date: 'September 9, 2022',\n  },\n  {\n    title: 'Mountains at night: 12 best locations to enjoy the view',\n    image:\n      'https://images.unsplash.com/photo-1519681393784-d120267933ba?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n    date: 'September 12, 2022',\n  },\n];\n\nexport function ArticlesCardsGrid() {\n  const cards = mockdata.map((article) => (\n    <Card key={article.title} p=\"md\" radius=\"md\" component=\"a\" href=\"#\" className={classes.card}>\n      <AspectRatio ratio={1920 / 1080}>\n        <Image src={article.image} />\n      </AspectRatio>\n      <Text c=\"dimmed\" size=\"xs\" tt=\"uppercase\" fw={700} mt=\"md\">\n        {article.date}\n      </Text>\n      <Text className={classes.title} mt={5}>\n        {article.title}\n      </Text>\n    </Card>\n  ));\n\n  return (\n    <Container py=\"xl\">\n      <SimpleGrid cols={{ base: 1, sm: 2 }}>{cards}</SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"ArticlesCardsGrid.module.css","language":"css","code":".card {\n  transition: transform 150ms ease, box-shadow 150ms ease;\n\n  &:hover {\n    transform: scale(1.01);\n    box-shadow: var(--mantine-shadow-md);\n  }\n}\n\n.title {\n  font-family: 'Greycliff CF', var(--mantine-font-family);\n  font-weight: bold;\n}\n"}],"attributes":{"title":"Articles cards grid","category":"article-cards","changelog":"september-2022","responsive":true,"canvas":{"center":false}}},{"component":"AuthenticationForm","slug":"authentication-form","code":[{"fileName":"AuthenticationForm.tsx","language":"tsx","code":"import { useToggle, upperFirst } from '@mantine/hooks';\nimport { useForm } from '@mantine/form';\nimport {\n  TextInput,\n  PasswordInput,\n  Text,\n  Paper,\n  Group,\n  PaperProps,\n  Button,\n  Divider,\n  Checkbox,\n  Anchor,\n  Stack,\n} from '@mantine/core';\nimport { GoogleButton } from './GoogleButton';\nimport { TwitterButton } from './TwitterButton';\n\nexport function AuthenticationForm(props: PaperProps) {\n  const [type, toggle] = useToggle(['login', 'register']);\n  const form = useForm({\n    initialValues: {\n      email: '',\n      name: '',\n      password: '',\n      terms: true,\n    },\n\n    validate: {\n      email: (val) => (/^\\S+@\\S+$/.test(val) ? null : 'Invalid email'),\n      password: (val) => (val.length <= 6 ? 'Password should include at least 6 characters' : null),\n    },\n  });\n\n  return (\n    <Paper radius=\"md\" p=\"xl\" withBorder {...props}>\n      <Text size=\"lg\" fw={500}>\n        Welcome to Mantine, {type} with\n      </Text>\n\n      <Group grow mb=\"md\" mt=\"md\">\n        <GoogleButton radius=\"xl\">Google</GoogleButton>\n        <TwitterButton radius=\"xl\">Twitter</TwitterButton>\n      </Group>\n\n      <Divider label=\"Or continue with email\" labelPosition=\"center\" my=\"lg\" />\n\n      <form onSubmit={form.onSubmit(() => {})}>\n        <Stack>\n          {type === 'register' && (\n            <TextInput\n              label=\"Name\"\n              placeholder=\"Your name\"\n              value={form.values.name}\n              onChange={(event) => form.setFieldValue('name', event.currentTarget.value)}\n              radius=\"md\"\n            />\n          )}\n\n          <TextInput\n            required\n            label=\"Email\"\n            placeholder=\"hello@mantine.dev\"\n            value={form.values.email}\n            onChange={(event) => form.setFieldValue('email', event.currentTarget.value)}\n            error={form.errors.email && 'Invalid email'}\n            radius=\"md\"\n          />\n\n          <PasswordInput\n            required\n            label=\"Password\"\n            placeholder=\"Your password\"\n            value={form.values.password}\n            onChange={(event) => form.setFieldValue('password', event.currentTarget.value)}\n            error={form.errors.password && 'Password should include at least 6 characters'}\n            radius=\"md\"\n          />\n\n          {type === 'register' && (\n            <Checkbox\n              label=\"I accept terms and conditions\"\n              checked={form.values.terms}\n              onChange={(event) => form.setFieldValue('terms', event.currentTarget.checked)}\n            />\n          )}\n        </Stack>\n\n        <Group justify=\"space-between\" mt=\"xl\">\n          <Anchor component=\"button\" type=\"button\" c=\"dimmed\" onClick={() => toggle()} size=\"xs\">\n            {type === 'register'\n              ? 'Already have an account? Login'\n              : \"Don't have an account? Register\"}\n          </Anchor>\n          <Button type=\"submit\" radius=\"xl\">\n            {upperFirst(type)}\n          </Button>\n        </Group>\n      </form>\n    </Paper>\n  );\n}\n"},{"fileName":"GoogleButton.tsx","language":"tsx","code":"import { Button, ButtonProps } from '@mantine/core';\n\nfunction GoogleIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMidYMid\"\n      viewBox=\"0 0 256 262\"\n      style={{ width: '0.9rem', height: '0.9rem' }}\n      {...props}\n    >\n      <path\n        fill=\"#4285F4\"\n        d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\"\n      />\n      <path\n        fill=\"#34A853\"\n        d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\"\n      />\n      <path\n        fill=\"#FBBC05\"\n        d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\"\n      />\n      <path\n        fill=\"#EB4335\"\n        d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\"\n      />\n    </svg>\n  );\n}\n\nexport function GoogleButton(props: ButtonProps & React.ComponentPropsWithoutRef<'button'>) {\n  return <Button leftSection={<GoogleIcon />} variant=\"default\" {...props} />;\n}\n"},{"fileName":"TwitterButton.tsx","language":"tsx","code":"import { Button, ButtonProps } from '@mantine/core';\nimport { TwitterIcon } from '@mantine/ds';\n\nexport function TwitterButton(props: ButtonProps & React.ComponentPropsWithoutRef<'button'>) {\n  return (\n    <Button\n      leftSection={<TwitterIcon style={{ width: '1rem', height: '1rem' }} color=\"#00ACEE\" />}\n      variant=\"default\"\n      {...props}\n    />\n  );\n}\n"}],"attributes":{"title":"Authentication form","category":"authentication","withColor":true,"dimmed":true,"canvas":{"center":true,"maxWidth":420}}},{"component":"AuthenticationImage","slug":"authentication-image","code":[{"fileName":"AuthenticationImage.tsx","language":"tsx","code":"import {\n  Paper,\n  TextInput,\n  PasswordInput,\n  Checkbox,\n  Button,\n  Title,\n  Text,\n  Anchor,\n} from '@mantine/core';\nimport classes from './AuthenticationImage.module.css';\n\nexport function AuthenticationImage() {\n  return (\n    <div className={classes.wrapper}>\n      <Paper className={classes.form} radius={0} p={30}>\n        <Title order={2} className={classes.title} ta=\"center\" mt=\"md\" mb={50}>\n          Welcome back to Mantine!\n        </Title>\n\n        <TextInput label=\"Email address\" placeholder=\"hello@gmail.com\" size=\"md\" />\n        <PasswordInput label=\"Password\" placeholder=\"Your password\" mt=\"md\" size=\"md\" />\n        <Checkbox label=\"Keep me logged in\" mt=\"xl\" size=\"md\" />\n        <Button fullWidth mt=\"xl\" size=\"md\">\n          Login\n        </Button>\n\n        <Text ta=\"center\" mt=\"md\">\n          Don&apos;t have an account?{' '}\n          <Anchor<'a'> href=\"#\" fw={700} onClick={(event) => event.preventDefault()}>\n            Register\n          </Anchor>\n        </Text>\n      </Paper>\n    </div>\n  );\n}\n"},{"fileName":"AuthenticationImage.module.css","language":"css","code":".wrapper {\n  min-height: rem(900px);\n  background-size: cover;\n  background-image: url(https://images.unsplash.com/photo-1484242857719-4b9144542727?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1280&q=80);\n}\n\n.form {\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n  min-height: rem(900px);\n  max-width: rem(450px);\n  padding-top: rem(80px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    max-width: 100%;\n  }\n}\n\n.title {\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n"}],"attributes":{"title":"Authentication page with image","category":"authentication","withColor":true,"responsive":true,"canvas":{"center":false}}},{"component":"AuthenticationTitle","slug":"authentication-title","code":[{"fileName":"AuthenticationTitle.tsx","language":"tsx","code":"import {\n  TextInput,\n  PasswordInput,\n  Checkbox,\n  Anchor,\n  Paper,\n  Title,\n  Text,\n  Container,\n  Group,\n  Button,\n} from '@mantine/core';\nimport classes from './AuthenticationTitle.module.css';\n\nexport function AuthenticationTitle() {\n  return (\n    <Container size={420} my={40}>\n      <Title ta=\"center\" className={classes.title}>\n        Welcome back!\n      </Title>\n      <Text c=\"dimmed\" size=\"sm\" ta=\"center\" mt={5}>\n        Do not have an account yet?{' '}\n        <Anchor size=\"sm\" component=\"button\">\n          Create account\n        </Anchor>\n      </Text>\n\n      <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n        <TextInput label=\"Email\" placeholder=\"you@mantine.dev\" required />\n        <PasswordInput label=\"Password\" placeholder=\"Your password\" required mt=\"md\" />\n        <Group justify=\"space-between\" mt=\"lg\">\n          <Checkbox label=\"Remember me\" />\n          <Anchor component=\"button\" size=\"sm\">\n            Forgot password?\n          </Anchor>\n        </Group>\n        <Button fullWidth mt=\"xl\">\n          Sign in\n        </Button>\n      </Paper>\n    </Container>\n  );\n}\n"},{"fileName":"AuthenticationTitle.module.css","language":"css","code":".title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 900;\n}\n"}],"attributes":{"title":"Authentication form with title","category":"authentication","withColor":true,"dimmed":true,"canvas":{"center":false}}},{"component":"AutocompleteLoading","slug":"autocomplete-loading","code":[{"fileName":"AutocompleteLoading.tsx","language":"tsx","code":"import { useState, useRef } from 'react';\nimport { Autocomplete, Loader } from '@mantine/core';\n\nexport function AutocompleteLoading() {\n  const timeoutRef = useRef<number>(-1);\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<string[]>([]);\n\n  const handleChange = (val: string) => {\n    window.clearTimeout(timeoutRef.current);\n    setValue(val);\n    setData([]);\n\n    if (val.trim().length === 0 || val.includes('@')) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n      timeoutRef.current = window.setTimeout(() => {\n        setLoading(false);\n        setData(['gmail.com', 'outlook.com', 'yahoo.com'].map((provider) => `${val}@${provider}`));\n      }, 1000);\n    }\n  };\n  return (\n    <Autocomplete\n      value={value}\n      data={data}\n      onChange={handleChange}\n      rightSection={loading ? <Loader size=\"1rem\" /> : null}\n      label=\"Async Autocomplete data\"\n      placeholder=\"Your email\"\n    />\n  );\n}\n"}],"attributes":{"title":"Autocomplete async data","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"BadgeCard","slug":"badge-card","code":[{"fileName":"BadgeCard.tsx","language":"tsx","code":"import { IconHeart } from '@tabler/icons-react';\nimport { Card, Image, Text, Group, Badge, Button, ActionIcon } from '@mantine/core';\nimport classes from './BadgeCard.module.css';\n\nconst mockdata = {\n  image:\n    'https://images.unsplash.com/photo-1437719417032-8595fd9e9dc6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80',\n  title: 'Verudela Beach',\n  country: 'Croatia',\n  description:\n    'Completely renovated for the season 2020, Arena Verudela Bech Apartments are fully equipped and modernly furnished 4-star self-service apartments located on the Adriatic coastline by one of the most beautiful beaches in Pula.',\n  badges: [\n    { emoji: '☀️', label: 'Sunny weather' },\n    { emoji: '🦓', label: 'Onsite zoo' },\n    { emoji: '🌊', label: 'Sea' },\n    { emoji: '🌲', label: 'Nature' },\n    { emoji: '🤽', label: 'Water sports' },\n  ],\n};\n\nexport function BadgeCard() {\n  const { image, title, description, country, badges } = mockdata;\n  const features = badges.map((badge) => (\n    <Badge variant=\"light\" key={badge.label} leftSection={badge.emoji}>\n      {badge.label}\n    </Badge>\n  ));\n\n  return (\n    <Card withBorder radius=\"md\" p=\"md\" className={classes.card}>\n      <Card.Section>\n        <Image src={image} alt={title} height={180} />\n      </Card.Section>\n\n      <Card.Section className={classes.section} mt=\"md\">\n        <Group justify=\"apart\">\n          <Text fz=\"lg\" fw={500}>\n            {title}\n          </Text>\n          <Badge size=\"sm\" variant=\"light\">\n            {country}\n          </Badge>\n        </Group>\n        <Text fz=\"sm\" mt=\"xs\">\n          {description}\n        </Text>\n      </Card.Section>\n\n      <Card.Section className={classes.section}>\n        <Text mt=\"md\" className={classes.label} c=\"dimmed\">\n          Perfect for you, if you enjoy\n        </Text>\n        <Group gap={7} mt={5}>\n          {features}\n        </Group>\n      </Card.Section>\n\n      <Group mt=\"xs\">\n        <Button radius=\"md\" style={{ flex: 1 }}>\n          Show details\n        </Button>\n        <ActionIcon variant=\"default\" radius=\"md\" size={36}>\n          <IconHeart className={classes.like} stroke={1.5} />\n        </ActionIcon>\n      </Group>\n    </Card>\n  );\n}\n"},{"fileName":"BadgeCard.module.css","language":"css","code":".card {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-7));\n}\n\n.section {\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n  padding-bottom: var(--mantine-spacing-md);\n}\n\n.like {\n  color: var(--mantine-color-red-6);\n  width: rem(20px);\n  height: rem(20px);\n}\n\n.label {\n  text-transform: uppercase;\n  font-size: var(--mantine-font-size-xs);\n  font-weight: 700;\n}\n"}],"attributes":{"title":"Card with badges","category":"app-cards","withColor":true,"dimmed":true,"props":{"image":"https://images.unsplash.com/photo-1437719417032-8595fd9e9dc6?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80","title":"Verudela Beach","country":"Croatia","description":"Completely renovated for the season 2020, Arena Verudela Bech Apartments are fully equipped and modernly furnished 4-star self-service apartments located on the Adriatic coastline by one of the most beautiful beaches in Pula.","badges":[{"emoji":"☀️","label":"Sunny weather"},{"emoji":"🦓","label":"Onsite zoo"},{"emoji":"🌊","label":"Sea"},{"emoji":"🌲","label":"Nature"},{"emoji":"🤽","label":"Water sports"}]},"canvas":{"center":true,"maxWidth":370}}},{"component":"ButtonCopy","slug":"button-copy","code":[{"fileName":"ButtonCopy.tsx","language":"tsx","code":"import { Button, rem, Tooltip } from '@mantine/core';\nimport { useClipboard } from '@mantine/hooks';\nimport { IconCopy, IconCheck } from '@tabler/icons-react';\n\nexport function ButtonCopy() {\n  const clipboard = useClipboard();\n  return (\n    <Tooltip\n      label=\"Link copied!\"\n      offset={5}\n      position=\"bottom\"\n      radius=\"xl\"\n      transitionProps={{ duration: 100, transition: 'slide-down' }}\n      opened={clipboard.copied}\n    >\n      <Button\n        variant=\"light\"\n        rightSection={\n          clipboard.copied ? (\n            <IconCheck style={{ width: rem(20), height: rem(20) }} stroke={1.5} />\n          ) : (\n            <IconCopy style={{ width: rem(20), height: rem(20) }} stroke={1.5} />\n          )\n        }\n        radius=\"xl\"\n        size=\"md\"\n        styles={{\n          root: { paddingRight: rem(14), height: rem(48) },\n          section: { marginLeft: rem(22) },\n        }}\n        onClick={() => clipboard.copy('https://www.youtube.com/watch?v=dQw4w9WgXcQ')}\n      >\n        Copy link to clipboard\n      </Button>\n    </Tooltip>\n  );\n}\n"}],"attributes":{"title":"Copy to clipboard button","category":"buttons","withColor":true,"canvas":{"center":true,"maxWidth":240}}},{"component":"ButtonMenu","slug":"button-menu","code":[{"fileName":"ButtonMenu.tsx","language":"tsx","code":"import { Button, Menu, Text, rem, useMantineTheme } from '@mantine/core';\nimport {\n  IconSquareCheck,\n  IconPackage,\n  IconUsers,\n  IconCalendar,\n  IconChevronDown,\n} from '@tabler/icons-react';\n\nexport function ButtonMenu() {\n  const theme = useMantineTheme();\n  return (\n    <Menu\n      transitionProps={{ transition: 'pop-top-right' }}\n      position=\"top-end\"\n      width={220}\n      withinPortal\n    >\n      <Menu.Target>\n        <Button\n          rightSection={\n            <IconChevronDown style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          }\n          pr={12}\n        >\n          Create new\n        </Button>\n      </Menu.Target>\n      <Menu.Dropdown>\n        <Menu.Item\n          leftSection={\n            <IconPackage\n              style={{ width: rem(16), height: rem(16) }}\n              color={theme.colors.blue[6]}\n              stroke={1.5}\n            />\n          }\n          rightSection={\n            <Text size=\"xs\" tt=\"uppercase\" fw={700} c=\"dimmed\">\n              Ctrl + P\n            </Text>\n          }\n        >\n          Project\n        </Menu.Item>\n        <Menu.Item\n          leftSection={\n            <IconSquareCheck\n              style={{ width: rem(16), height: rem(16) }}\n              color={theme.colors.pink[6]}\n              stroke={1.5}\n            />\n          }\n          rightSection={\n            <Text size=\"xs\" tt=\"uppercase\" fw={700} c=\"dimmed\">\n              Ctrl + T\n            </Text>\n          }\n        >\n          Task\n        </Menu.Item>\n        <Menu.Item\n          leftSection={\n            <IconUsers\n              style={{ width: rem(16), height: rem(16) }}\n              color={theme.colors.cyan[6]}\n              stroke={1.5}\n            />\n          }\n          rightSection={\n            <Text size=\"xs\" tt=\"uppercase\" fw={700} c=\"dimmed\">\n              Ctrl + U\n            </Text>\n          }\n        >\n          Team\n        </Menu.Item>\n        <Menu.Item\n          leftSection={\n            <IconCalendar\n              style={{ width: rem(16), height: rem(16) }}\n              color={theme.colors.violet[6]}\n              stroke={1.5}\n            />\n          }\n          rightSection={\n            <Text size=\"xs\" tt=\"uppercase\" fw={700} c=\"dimmed\">\n              Ctrl + E\n            </Text>\n          }\n        >\n          Event\n        </Menu.Item>\n      </Menu.Dropdown>\n    </Menu>\n  );\n}\n"}],"attributes":{"title":"Button with menu","category":"buttons","withColor":true,"canvas":{"center":true,"maxWidth":120}}},{"component":"ButtonProgress","slug":"button-progress","code":[{"fileName":"ButtonProgress.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { useInterval } from '@mantine/hooks';\nimport { Button, Progress, useMantineTheme, rgba } from '@mantine/core';\nimport classes from './ButtonProgress.module.css';\n\nexport function ButtonProgress() {\n  const theme = useMantineTheme();\n  const [progress, setProgress] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n\n  const interval = useInterval(\n    () =>\n      setProgress((current) => {\n        if (current < 100) {\n          return current + 1;\n        }\n\n        interval.stop();\n        setLoaded(true);\n        return 0;\n      }),\n    20\n  );\n\n  return (\n    <Button\n      fullWidth\n      className={classes.button}\n      onClick={() => (loaded ? setLoaded(false) : !interval.active && interval.start())}\n      color={loaded ? 'teal' : theme.primaryColor}\n    >\n      <div className={classes.label}>\n        {progress !== 0 ? 'Uploading files' : loaded ? 'Files uploaded' : 'Upload files'}\n      </div>\n      {progress !== 0 && (\n        <Progress\n          value={progress}\n          className={classes.progress}\n          color={rgba(theme.colors.blue[2], 0.35)}\n          radius=\"sm\"\n        />\n      )}\n    </Button>\n  );\n}\n"},{"fileName":"ButtonProgress.module.css","language":"css","code":".button {\n  position: relative;\n  transition: background-color 150ms ease;\n}\n\n.progress {\n  position: absolute;\n  top: rem(-1px);\n  left: rem(-1px);\n  right: rem(-1px);\n  bottom: rem(-1px);\n  height: auto;\n  background-color: transparent;\n  z-index: 0;\n}\n\n.label {\n  position: relative;\n  z-index: 1;\n}\n"}],"attributes":{"title":"Button with loading progress","category":"buttons","canvas":{"center":true,"maxWidth":220}}},{"component":"CardGradient","slug":"card-gradient","code":[{"fileName":"CardGradient.tsx","language":"tsx","code":"import { Paper, Text, ThemeIcon, rem } from '@mantine/core';\nimport { IconColorSwatch } from '@tabler/icons-react';\nimport classes from './CardGradient.module.css';\n\nexport function CardGradient() {\n  return (\n    <Paper withBorder radius=\"md\" className={classes.card}>\n      <ThemeIcon\n        size=\"xl\"\n        radius=\"md\"\n        variant=\"gradient\"\n        gradient={{ deg: 0, from: 'pink', to: 'orange' }}\n      >\n        <IconColorSwatch style={{ width: rem(28), height: rem(28) }} stroke={1.5} />\n      </ThemeIcon>\n      <Text size=\"xl\" fw={500} mt=\"md\">\n        Theming documentation\n      </Text>\n      <Text size=\"sm\" mt=\"sm\" c=\"dimmed\">\n        Extend default theme with any amount of additional colors, replace shadows, radius, spacing,\n        fonts and many other properties to match your design requirements. Mantine theme is just an\n        object, you can subscribe to it in any part of application via context and use it to build\n        your own components.\n      </Text>\n    </Paper>\n  );\n}\n"},{"fileName":"CardGradient.module.css","language":"css","code":".card {\n  position: relative;\n  cursor: pointer;\n  overflow: hidden;\n  transition: transform 150ms ease, box-shadow 100ms ease;\n  padding: var(--mantine-spacing-xl);\n  padding-left: calc(var(--mantine-spacing-xl) * 2);\n\n  @mixin hover {\n    box-shadow: var(--mantine-shadow-md);\n    transform: scale(1.02);\n  }\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: rem(6px);\n    background-image: linear-gradient(\n      0,\n      var(--mantine-color-pink-6),\n      var(--mantine-color-orange-6)\n    );\n  }\n}\n"}],"attributes":{"title":"Card with gradient border","category":"article-cards","dimmed":true,"canvas":{"center":true,"maxWidth":360}}},{"component":"CardWithStats","slug":"card-with-stats","code":[{"fileName":"CardWithStats.tsx","language":"tsx","code":"import { Card, Image, Text, Group, RingProgress } from '@mantine/core';\nimport classes from './CardWithStats.module.css';\n\nconst stats = [\n  { title: 'Distance', value: '27.4 km' },\n  { title: 'Avg. speed', value: '9.6 km/h' },\n  { title: 'Score', value: '88/100' },\n];\n\nexport function CardWithStats() {\n  const items = stats.map((stat) => (\n    <div key={stat.title}>\n      <Text size=\"xs\" color=\"dimmed\">\n        {stat.title}\n      </Text>\n      <Text fw={500} size=\"sm\">\n        {stat.value}\n      </Text>\n    </div>\n  ));\n\n  return (\n    <Card withBorder padding=\"lg\" className={classes.card}>\n      <Card.Section>\n        <Image\n          src=\"https://images.unsplash.com/photo-1581889470536-467bdbe30cd0?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80\"\n          alt=\"Running challenge\"\n          height={100}\n        />\n      </Card.Section>\n\n      <Group justify=\"space-between\" mt=\"xl\">\n        <Text fz=\"sm\" fw={700} className={classes.title}>\n          Running challenge\n        </Text>\n        <Group gap={5}>\n          <Text fz=\"xs\" c=\"dimmed\">\n            80% completed\n          </Text>\n          <RingProgress size={18} thickness={2} sections={[{ value: 80, color: 'blue' }]} />\n        </Group>\n      </Group>\n      <Text mt=\"sm\" mb=\"md\" c=\"dimmed\" fz=\"xs\">\n        56 km this month • 17% improvement compared to last month • 443 place in global scoreboard\n      </Text>\n      <Card.Section className={classes.footer}>{items}</Card.Section>\n    </Card>\n  );\n}\n"},{"fileName":"CardWithStats.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  padding: var(--mantine-spacing-sm) var(--mantine-spacing-lg);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  line-height: 1;\n}\n"}],"attributes":{"title":"Card with stats","category":"app-cards","dimmed":true,"canvas":{"center":true,"maxWidth":320}}},{"component":"CardsCarousel","slug":"cards-carousel","code":[{"fileName":"CardsCarousel.tsx","language":"tsx","code":"import { Carousel } from '@mantine/carousel';\nimport { useMediaQuery } from '@mantine/hooks';\nimport { Paper, Text, Title, Button, useMantineTheme, rem } from '@mantine/core';\nimport classes from './CardsCarousel.module.css';\n\ninterface CardProps {\n  image: string;\n  title: string;\n  category: string;\n}\n\nfunction Card({ image, title, category }: CardProps) {\n  return (\n    <Paper\n      shadow=\"md\"\n      p=\"xl\"\n      radius=\"md\"\n      style={{ backgroundImage: `url(${image})` }}\n      className={classes.card}\n    >\n      <div>\n        <Text className={classes.category} size=\"xs\">\n          {category}\n        </Text>\n        <Title order={3} className={classes.title}>\n          {title}\n        </Title>\n      </div>\n      <Button variant=\"white\" color=\"dark\">\n        Read article\n      </Button>\n    </Paper>\n  );\n}\n\nconst data = [\n  {\n    image:\n      'https://images.unsplash.com/photo-1508193638397-1c4234db14d8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80',\n    title: 'Best forests to visit in North America',\n    category: 'nature',\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1559494007-9f5847c49d94?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80',\n    title: 'Hawaii beaches review: better than you think',\n    category: 'beach',\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1608481337062-4093bf3ed404?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80',\n    title: 'Mountains at night: 12 best locations to enjoy the view',\n    category: 'nature',\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1507272931001-fc06c17e4f43?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80',\n    title: 'Aurora in Norway: when to visit for best experience',\n    category: 'nature',\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1510798831971-661eb04b3739?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80',\n    title: 'Best places to visit this winter',\n    category: 'tourism',\n  },\n  {\n    image:\n      'https://images.unsplash.com/photo-1582721478779-0ae163c05a60?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=400&q=80',\n    title: 'Active volcanos reviews: travel at your own risk',\n    category: 'nature',\n  },\n];\n\nexport function CardsCarousel() {\n  const theme = useMantineTheme();\n  const mobile = useMediaQuery(`(max-width: ${theme.breakpoints.sm})`);\n  const slides = data.map((item) => (\n    <Carousel.Slide key={item.title}>\n      <Card {...item} />\n    </Carousel.Slide>\n  ));\n\n  return (\n    <Carousel\n      slideSize={{ base: '100%', sm: '50%' }}\n      slideGap={{ base: rem(2), sm: 'xl' }}\n      align=\"start\"\n      slidesToScroll={mobile ? 1 : 2}\n    >\n      {slides}\n    </Carousel>\n  );\n}\n"},{"fileName":"CardsCarousel.module.css","language":"css","code":".card {\n  height: rem(440px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: flex-start;\n  background-size: cover;\n  background-position: center;\n}\n\n.title {\n  font-family: Greycliff CF, sans-serif;\n  font-weight: 900;\n  color: var(--mantine-color-white);\n  line-height: 1.2;\n  font-size: rem(32px);\n  margin-top: var(--mantine-spacing-xs);\n}\n\n.category {\n  color: var(--mantine-color-white);\n  opacity: 0.7;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n"}],"attributes":{"title":"Carousel with cards","category":"carousels","changelog":"september-2022","responsive":true,"canvas":{"center":true,"maxWidth":820}}},{"component":"CarouselCard","slug":"carousel-card","code":[{"fileName":"CarouselCard.tsx","language":"tsx","code":"import { Image, Card, Text, Group, Button, rem } from '@mantine/core';\nimport { Carousel } from '@mantine/carousel';\nimport { IconStar } from '@tabler/icons-react';\nimport classes from './CarouselCard.module.css';\n\nconst images = [\n  'https://images.unsplash.com/photo-1598928506311-c55ded91a20c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n  'https://images.unsplash.com/photo-1567767292278-a4f21aa2d36e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n  'https://images.unsplash.com/photo-1605774337664-7a846e9cdf17?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n  'https://images.unsplash.com/photo-1554995207-c18c203602cb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n  'https://images.unsplash.com/photo-1616486029423-aaa4789e8c9a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=720&q=80',\n];\n\nexport function CarouselCard() {\n  const slides = images.map((image) => (\n    <Carousel.Slide key={image}>\n      <Image src={image} height={220} />\n    </Carousel.Slide>\n  ));\n\n  return (\n    <Card radius=\"md\" withBorder padding=\"xl\">\n      <Card.Section>\n        <Carousel\n          withIndicators\n          loop\n          classNames={{\n            root: classes.carousel,\n            controls: classes.carouselControls,\n            indicator: classes.carouselIndicator,\n          }}\n        >\n          {slides}\n        </Carousel>\n      </Card.Section>\n\n      <Group justify=\"space-between\" mt=\"lg\">\n        <Text fw={500} fz=\"lg\">\n          Forde, Norway\n        </Text>\n\n        <Group gap={5}>\n          <IconStar style={{ width: rem(16), height: rem(16) }} />\n          <Text fz=\"xs\" fw={500}>\n            4.78\n          </Text>\n        </Group>\n      </Group>\n\n      <Text fz=\"sm\" c=\"dimmed\" mt=\"sm\">\n        Relax, rejuvenate and unplug in this unique contemporary Birdbox. Feel close to nature in\n        ultimate comfort. Enjoy the view of the epic mountain range of Blegja and the Førdefjord.\n      </Text>\n\n      <Group justify=\"space-between\" mt=\"md\">\n        <div>\n          <Text fz=\"xl\" span fw={500} className={classes.price}>\n            397$\n          </Text>\n          <Text span fz=\"sm\" c=\"dimmed\">\n            {' '}\n            / night\n          </Text>\n        </div>\n\n        <Button radius=\"md\">Book now</Button>\n      </Group>\n    </Card>\n  );\n}\n"},{"fileName":"CarouselCard.module.css","language":"css","code":".price {\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n}\n\n.carousel {\n  @mixin hover {\n    .carouselControls {\n      opacity: 1;\n    }\n  }\n}\n\n.carouselControls {\n  transition: opacity 150ms ease;\n  opacity: 0;\n}\n\n.carouselIndicator {\n  width: rem(4px);\n  height: rem(4px);\n  transition: width 250ms ease;\n\n  &[data-active] {\n    width: rem(16px);\n  }\n}\n"}],"attributes":{"title":"Card with carousel","category":"carousels","changelog":"september-2022","canvas":{"center":true,"maxWidth":350}}},{"component":"CheckboxCard","slug":"checkbox-card","code":[{"fileName":"CheckboxCard.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { UnstyledButton, Checkbox, Text } from '@mantine/core';\nimport classes from './CheckboxCard.module.css';\n\nexport function CheckboxCard() {\n  const [value, onChange] = useState(true);\n\n  return (\n    <UnstyledButton onClick={() => onChange(!value)} className={classes.button}>\n      <Checkbox\n        checked={value}\n        onChange={() => {}}\n        tabIndex={-1}\n        size=\"md\"\n        mr=\"xl\"\n        styles={{ input: { cursor: 'pointer' } }}\n        aria-hidden\n      />\n\n      <div>\n        <Text fw={500} mb={7} lh={1}>\n          @mantine/core\n        </Text>\n        <Text fz=\"sm\" c=\"dimmed\">\n          Core components library: inputs, buttons, overlays, etc.\n        </Text>\n      </div>\n    </UnstyledButton>\n  );\n}\n"},{"fileName":"CheckboxCard.module.css","language":"css","code":".button {\n  display: flex;\n  width: 100%;\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-8));\n  border-radius: var(--mantine-radius-sm);\n  padding: var(--mantine-spacing-lg);\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-9));\n  }\n}\n"}],"attributes":{"title":"Card with checkbox","category":"inputs","withColor":true,"canvas":{"center":true,"maxWidth":400}}},{"component":"CommentHtml","slug":"comment-html","code":[{"fileName":"CommentHtml.tsx","language":"tsx","code":"import { Text, Avatar, Group, TypographyStylesProvider, Paper } from '@mantine/core';\nimport classes from './CommentHtml.module.css';\n\nexport function CommentHtml() {\n  return (\n    <Paper withBorder radius=\"md\" className={classes.comment}>\n      <Group>\n        <Avatar\n          src=\"https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80\"\n          alt=\"Jacob Warnhalter\"\n          radius=\"xl\"\n        />\n        <div>\n          <Text fz=\"sm\">Jacob Warnhalter</Text>\n          <Text fz=\"xs\" c=\"dimmed\">\n            10 minutes ago\n          </Text>\n        </div>\n      </Group>\n      <TypographyStylesProvider className={classes.body}>\n        <div\n          className={classes.content}\n          dangerouslySetInnerHTML={{\n            __html:\n              '<p>I use <a href=\"https://heroku.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Heroku</a> to host my Node.js application, but MongoDB add-on appears to be too <strong>expensive</strong>. I consider switching to <a href=\"https://www.digitalocean.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Digital Ocean</a> VPS to save some cash.</p>',\n          }}\n        />\n      </TypographyStylesProvider>\n    </Paper>\n  );\n}\n"},{"fileName":"CommentHtml.module.css","language":"css","code":".comment {\n  padding: var(--mantine-spacing-lg) var(--mantine-spacing-xl);\n}\n\n.body {\n  padding-left: rem(54px);\n  padding-top: var(--mantine-spacing-sm);\n  font-size: var(--mantine-font-size-sm);\n}\n\n.content {\n  & > p:last-child {\n    margin-bottom: 0;\n  }\n}\n"}],"attributes":{"title":"Comment with html content","category":"comments","canvas":{"center":true,"maxWidth":380}}},{"component":"CommentSimple","slug":"comment-simple","code":[{"fileName":"CommentSimple.tsx","language":"tsx","code":"import { Text, Avatar, Group } from '@mantine/core';\n\nexport function CommentSimple() {\n  return (\n    <div>\n      <Group>\n        <Avatar\n          src=\"https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80\"\n          alt=\"Jacob Warnhalter\"\n          radius=\"xl\"\n        />\n        <div>\n          <Text size=\"sm\">Jacob Warnhalter</Text>\n          <Text size=\"xs\" c=\"dimmed\">\n            10 minutes ago\n          </Text>\n        </div>\n      </Group>\n      <Text pl={54} pt=\"sm\" size=\"sm\">\n        This Pokémon likes to lick its palms that are sweetened by being soaked in honey. Teddiursa\n        concocts its own honey by blending fruits and pollen collected by Beedrill. Blastoise has\n        water spouts that protrude from its shell. The water spouts are very accurate.\n      </Text>\n    </div>\n  );\n}\n"}],"attributes":{"title":"Comment","category":"comments","canvas":{"center":true,"maxWidth":380}}},{"component":"ContactUs","slug":"contact-us","code":[{"fileName":"ContactUs.tsx","language":"tsx","code":"import {\n  Text,\n  Title,\n  SimpleGrid,\n  TextInput,\n  Textarea,\n  Button,\n  Group,\n  ActionIcon,\n} from '@mantine/core';\nimport { IconBrandTwitter, IconBrandYoutube, IconBrandInstagram } from '@tabler/icons-react';\nimport { ContactIconsList } from './ContactIcons';\nimport classes from './ContactUs.module.css';\n\nconst social = [IconBrandTwitter, IconBrandYoutube, IconBrandInstagram];\n\nexport function ContactUs() {\n  const icons = social.map((Icon, index) => (\n    <ActionIcon key={index} size={28} className={classes.social} variant=\"transparent\">\n      <Icon size=\"1.4rem\" stroke={1.5} />\n    </ActionIcon>\n  ));\n\n  return (\n    <div className={classes.wrapper}>\n      <SimpleGrid cols={{ base: 1, sm: 2 }} spacing={50}>\n        <div>\n          <Title className={classes.title}>Contact us</Title>\n          <Text className={classes.description} mt=\"sm\" mb={30}>\n            Leave your email and we will get back to you within 24 hours\n          </Text>\n\n          <ContactIconsList />\n\n          <Group mt=\"xl\">{icons}</Group>\n        </div>\n        <div className={classes.form}>\n          <TextInput\n            label=\"Email\"\n            placeholder=\"your@email.com\"\n            required\n            classNames={{ input: classes.input, label: classes.inputLabel }}\n          />\n          <TextInput\n            label=\"Name\"\n            placeholder=\"John Doe\"\n            mt=\"md\"\n            classNames={{ input: classes.input, label: classes.inputLabel }}\n          />\n          <Textarea\n            required\n            label=\"Your message\"\n            placeholder=\"I want to order your goods\"\n            minRows={4}\n            mt=\"md\"\n            classNames={{ input: classes.input, label: classes.inputLabel }}\n          />\n\n          <Group justify=\"flex-end\" mt=\"md\">\n            <Button className={classes.control}>Send message</Button>\n          </Group>\n        </div>\n      </SimpleGrid>\n    </div>\n  );\n}\n"},{"fileName":"ContactIcons.module.css","language":"css","code":".wrapper {\n  display: flex;\n  align-items: center;\n  color: var(--mantine-color-white);\n}\n\n.icon {\n  margin-right: var(--mantine-spacing-md);\n  background-color: transparent;\n}\n\n.title {\n  color: var(--mantine-color-blue-0);\n}\n\n.description {\n  color: var(--mantine-color-white);\n}\n"},{"fileName":"ContactIcons.tsx","language":"tsx","code":"import { Text, Box, Stack, rem } from '@mantine/core';\nimport { IconSun, IconPhone, IconMapPin, IconAt } from '@tabler/icons-react';\nimport classes from './ContactIcons.module.css';\n\ninterface ContactIconProps extends Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  icon: typeof IconSun;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nfunction ContactIcon({ icon: Icon, title, description, ...others }: ContactIconProps) {\n  return (\n    <div className={classes.wrapper} {...others}>\n      <Box mr=\"md\">\n        <Icon style={{ width: rem(24), height: rem(24) }} />\n      </Box>\n\n      <div>\n        <Text size=\"xs\" className={classes.title}>\n          {title}\n        </Text>\n        <Text className={classes.description}>{description}</Text>\n      </div>\n    </div>\n  );\n}\n\nconst MOCKDATA = [\n  { title: 'Email', description: 'hello@mantine.dev', icon: IconAt },\n  { title: 'Phone', description: '+49 (800) 335 35 35', icon: IconPhone },\n  { title: 'Address', description: '844 Morris Park avenue', icon: IconMapPin },\n  { title: 'Working hours', description: '8 a.m. – 11 p.m.', icon: IconSun },\n];\n\nexport function ContactIconsList() {\n  const items = MOCKDATA.map((item, index) => <ContactIcon key={index} {...item} />);\n  return <Stack>{items}</Stack>;\n}\n"},{"fileName":"ContactUs.module.css","language":"css","code":".wrapper {\n  min-height: rem(400px);\n  background-image: linear-gradient(\n    -60deg,\n    var(--mantine-color-blue-4) 0%,\n    var(--mantine-color-blue-7) 100%\n  );\n  border-radius: var(--mantine-radius-md);\n  padding: calc(var(--mantine-spacing-xl) * 2.5);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding: calc(var(--mantine-spacing-xl) * 1.5);\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  color: var(--mantine-color-white);\n  line-height: 1;\n}\n\n.description {\n  color: var(--mantine-color-blue-0);\n  max-width: rem(300px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    max-width: 100%;\n  }\n}\n\n.form {\n  background-color: var(--mantine-color-white);\n  padding: var(--mantine-spacing-xl);\n  border-radius: var(--mantine-radius-md);\n  box-shadow: var(--mantine-shadow-lg);\n}\n\n.social {\n  color: var(--mantine-color-white);\n\n  @mixin hover {\n    color: var(--mantine-color-blue-1);\n  }\n}\n\n.input {\n  background-color: var(--mantine-color-white);\n  border-color: var(--mantine-color-gray-4);\n  color: var(--mantine-color-black);\n\n  &::placeholder {\n    color: var(--mantine-color-gray-5);\n  }\n}\n\n.inputLabel {\n  color: var(--mantine-color-black);\n}\n\n.control {\n  background-color: var(--mantine-color-blue-6);\n}\n"}],"attributes":{"title":"Contact us form","category":"contact","responsive":true,"canvas":{"center":true,"maxWidth":1000}}},{"component":"ContainedInputs","slug":"contained-inputs","code":[{"fileName":"ContainedInputs.tsx","language":"tsx","code":"import { Select, TextInput } from '@mantine/core';\nimport classes from './ContainedInput.module.css';\n\nexport function ContainedInputs() {\n  return (\n    <>\n      <TextInput label=\"Shipping address\" placeholder=\"15329 Huston 21st\" classNames={classes} />\n\n      <Select\n        mt=\"md\"\n        comboboxProps={{ withinPortal: true }}\n        data={['React', 'Angular', 'Svelte', 'Vue']}\n        placeholder=\"Pick one\"\n        label=\"Your favorite library/framework\"\n        classNames={classes}\n      />\n    </>\n  );\n}\n"},{"fileName":"ContainedInput.module.css","language":"css","code":".root {\n  position: relative;\n}\n\n.input {\n  height: rem(54px);\n  padding-top: rem(18px);\n}\n\n.label {\n  position: absolute;\n  pointer-events: none;\n  font-size: var(--mantine-font-size-xs);\n  padding-left: var(--mantine-spacing-sm);\n  padding-top: calc(var(--mantine-spacing-sm) / 2);\n  z-index: 1;\n}\n"}],"attributes":{"title":"Inputs with label inside input","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"CookiesBanner","slug":"cookies-banner","code":[{"fileName":"CookiesBanner.tsx","language":"tsx","code":"import { Button, Paper, Text, Group, CloseButton } from '@mantine/core';\n\nexport function CookiesBanner() {\n  return (\n    <Paper withBorder p=\"lg\" radius=\"md\" shadow=\"md\">\n      <Group justify=\"space-between\" mb=\"xs\">\n        <Text fz=\"md\" fw={500}>\n          Allow cookies\n        </Text>\n        <CloseButton mr={-9} mt={-9} />\n      </Group>\n      <Text c=\"dimmed\" fz=\"xs\">\n        So the deal is, we want to spy on you. We would like to know what did you have for todays\n        breakfast, where do you live, how much do you earn and like 50 other things. To view our\n        landing page you will have to accept all cookies. That&apos;s all, and remember that we are\n        watching...\n      </Text>\n      <Group justify=\"flex-end\" mt=\"md\">\n        <Button variant=\"default\" size=\"xs\">\n          Cookies preferences\n        </Button>\n        <Button variant=\"outline\" size=\"xs\">\n          Accept all\n        </Button>\n      </Group>\n    </Paper>\n  );\n}\n"}],"attributes":{"title":"Cookies banner","category":"banners","withColor":true,"dimmed":true,"canvas":{"center":true,"maxWidth":420}}},{"component":"CurrencyInput","slug":"currency-input","code":[{"fileName":"CurrencyInput.tsx","language":"tsx","code":"import { NativeSelect, rem, TextInput } from '@mantine/core';\n\nconst data = [\n  { value: 'eur', label: '🇪🇺 EUR' },\n  { value: 'usd', label: '🇺🇸 USD' },\n  { value: 'cad', label: '🇨🇦 CAD' },\n  { value: 'gbp', label: '🇬🇧 GBP' },\n  { value: 'aud', label: '🇦🇺 AUD' },\n];\n\nexport function CurrencyInput() {\n  const select = (\n    <NativeSelect\n      data={data}\n      rightSectionWidth={28}\n      styles={{\n        input: {\n          fontWeight: 500,\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n          width: rem(92),\n          marginRight: rem(-2),\n        },\n      }}\n    />\n  );\n\n  return (\n    <TextInput\n      type=\"number\"\n      placeholder=\"1000\"\n      label=\"Transfer amount\"\n      rightSection={select}\n      rightSectionWidth={92}\n    />\n  );\n}\n"}],"attributes":{"title":"Number input with currency select","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"CustomSwitch","slug":"custom-switch","code":[{"fileName":"CustomSwitch.tsx","language":"tsx","code":"import { Switch, Group } from '@mantine/core';\nimport classes from './CustomSwitch.module.css';\n\nexport function CustomSwitch() {\n  return (\n    <Group justify=\"center\" p=\"md\">\n      <Switch label=\"Custom Switch\" classNames={classes} />\n    </Group>\n  );\n}\n"},{"fileName":"CustomSwitch.module.css","language":"css","code":".body {\n  display: flex;\n  align-items: center;\n}\n\n.track {\n  width: rem(40px);\n  height: rem(6px);\n  overflow: visible;\n}\n\n.thumb {\n  width: rem(20px);\n  height: rem(20px);\n  left: rem(-2px);\n  transition: background-color 100ms ease, left 100ms ease;\n\n  input:checked + * > & {\n    background-color: var(--mantine-color-blue-filled);\n    left: calc(100% - rem(12px));\n  }\n}\n"}],"attributes":{"title":"Custom switch","category":"inputs","withColor":true,"changelog":"september-2022","canvas":{"center":true}}},{"component":"DndList","slug":"dnd-list","code":[{"fileName":"DndList.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { Text } from '@mantine/core';\nimport { useListState } from '@mantine/hooks';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport classes from './DndList.module.css';\n\nconst data = [\n  { position: 6, mass: 12.011, symbol: 'C', name: 'Carbon' },\n  { position: 7, mass: 14.007, symbol: 'N', name: 'Nitrogen' },\n  { position: 39, mass: 88.906, symbol: 'Y', name: 'Yttrium' },\n  { position: 56, mass: 137.33, symbol: 'Ba', name: 'Barium' },\n  { position: 58, mass: 140.12, symbol: 'Ce', name: 'Cerium' },\n];\n\nexport function DndList() {\n  const [state, handlers] = useListState(data);\n\n  const items = state.map((item, index) => (\n    <Draggable key={item.symbol} index={index} draggableId={item.symbol}>\n      {(provided, snapshot) => (\n        <div\n          className={cx(classes.item, { [classes.itemDragging]: snapshot.isDragging })}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Text className={classes.symbol}>{item.symbol}</Text>\n          <div>\n            <Text>{item.name}</Text>\n            <Text c=\"dimmed\" size=\"sm\">\n              Position: {item.position} • Mass: {item.mass}\n            </Text>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  ));\n\n  return (\n    <DragDropContext\n      onDragEnd={({ destination, source }) =>\n        handlers.reorder({ from: source.index, to: destination?.index || 0 })\n      }\n    >\n      <Droppable droppableId=\"dnd-list\" direction=\"vertical\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {items}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n"},{"fileName":"DndList.module.css","language":"css","code":"/* const useStyles = createStyles((theme) => ({\n  item: {\n    ...theme.fn.focusStyles(),\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: theme.radius.md,\n    border: `${rem(1)} solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[2]\n    }`,\n    padding: `${theme.spacing.sm} ${theme.spacing.xl}`,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.white,\n    marginBottom: theme.spacing.sm,\n  },\n\n  itemDragging: {\n    boxShadow: theme.shadows.sm,\n  },\n\n  symbol: {\n    fontSize: rem(30),\n    fontWeight: 700,\n    width: rem(60),\n  },\n})); */\n\n.item {\n  display: flex;\n  align-items: center;\n  border-radius: var(--mantine-radius-md);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n  padding: var(--mantine-spacing-sm) var(--mantine-spacing-xl);\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-5));\n  margin-bottom: var(--mantine-spacing-sm);\n}\n\n.itemDragging {\n  box-shadow: var(--mantine-shadow-sm);\n}\n\n.symbol {\n  font-size: rem(30px);\n  font-weight: 700;\n  width: rem(60px);\n}\n"}],"attributes":{"title":"Drag'n'drop list","category":"dnd","canvas":{"center":true,"maxWidth":420}}},{"component":"DndListHandle","slug":"dnd-list-handle","code":[{"fileName":"DndListHandle.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { rem, Text } from '@mantine/core';\nimport { useListState } from '@mantine/hooks';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { IconGripVertical } from '@tabler/icons-react';\nimport classes from './DndListHandle.module.css';\n\nconst data = [\n  { position: 6, mass: 12.011, symbol: 'C', name: 'Carbon' },\n  { position: 7, mass: 14.007, symbol: 'N', name: 'Nitrogen' },\n  { position: 39, mass: 88.906, symbol: 'Y', name: 'Yttrium' },\n  { position: 56, mass: 137.33, symbol: 'Ba', name: 'Barium' },\n  { position: 58, mass: 140.12, symbol: 'Ce', name: 'Cerium' },\n];\n\nexport function DndListHandle() {\n  const [state, handlers] = useListState(data);\n\n  const items = state.map((item, index) => (\n    <Draggable key={item.symbol} index={index} draggableId={item.symbol}>\n      {(provided, snapshot) => (\n        <div\n          className={cx(classes.item, { [classes.itemDragging]: snapshot.isDragging })}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <div {...provided.dragHandleProps} className={classes.dragHandle}>\n            <IconGripVertical style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </div>\n          <Text className={classes.symbol}>{item.symbol}</Text>\n          <div>\n            <Text>{item.name}</Text>\n            <Text c=\"dimmed\" size=\"sm\">\n              Position: {item.position} • Mass: {item.mass}\n            </Text>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  ));\n\n  return (\n    <DragDropContext\n      onDragEnd={({ destination, source }) =>\n        handlers.reorder({ from: source.index, to: destination?.index || 0 })\n      }\n    >\n      <Droppable droppableId=\"dnd-list\" direction=\"vertical\">\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {items}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n"},{"fileName":"DndListHandle.module.css","language":"css","code":".item {\n  display: flex;\n  align-items: center;\n  border-radius: var(--mantine-radius-md);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n  padding: var(--mantine-spacing-sm) var(--mantine-spacing-xl);\n  padding-left: calc(var(--mantine-spacing-xl) - var(--mantine-spacing-md));\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-5));\n  margin-bottom: var(--mantine-spacing-sm);\n}\n\n.itemDragging {\n  box-shadow: var(--mantine-shadow-sm);\n}\n\n.symbol {\n  font-size: rem(30px);\n  font-weight: 700;\n  width: rem(60px);\n}\n\n.dragHandle {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-1));\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n}\n"}],"attributes":{"title":"Drag'n'drop list with handle","category":"dnd","canvas":{"center":true,"maxWidth":420}}},{"component":"DndTable","slug":"dnd-table","code":[{"fileName":"DndTable.tsx","language":"tsx","code":"import { Table, rem } from '@mantine/core';\nimport { useListState } from '@mantine/hooks';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { IconGripVertical } from '@tabler/icons-react';\nimport classes from './DndTable.module.css';\n\nconst data = [\n  { position: 6, mass: 12.011, symbol: 'C', name: 'Carbon' },\n  { position: 7, mass: 14.007, symbol: 'N', name: 'Nitrogen' },\n  { position: 39, mass: 88.906, symbol: 'Y', name: 'Yttrium' },\n  { position: 56, mass: 137.33, symbol: 'Ba', name: 'Barium' },\n  { position: 58, mass: 140.12, symbol: 'Ce', name: 'Cerium' },\n];\n\nexport function DndTable() {\n  const [state, handlers] = useListState(data);\n\n  const items = state.map((item, index) => (\n    <Draggable key={item.symbol} index={index} draggableId={item.symbol}>\n      {(provided) => (\n        <Table.Tr className={classes.item} ref={provided.innerRef} {...provided.draggableProps}>\n          <Table.Td>\n            <div className={classes.dragHandle} {...provided.dragHandleProps}>\n              <IconGripVertical style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n            </div>\n          </Table.Td>\n          <Table.Td style={{ width: rem(80) }}>{item.position}</Table.Td>\n          <Table.Td style={{ width: rem(120) }}>{item.name}</Table.Td>\n          <Table.Td style={{ width: rem(80) }}>{item.symbol}</Table.Td>\n          <Table.Td>{item.mass}</Table.Td>\n        </Table.Tr>\n      )}\n    </Draggable>\n  ));\n\n  return (\n    <Table.ScrollContainer minWidth={420}>\n      <DragDropContext\n        onDragEnd={({ destination, source }) =>\n          handlers.reorder({ from: source.index, to: destination?.index || 0 })\n        }\n      >\n        <Table>\n          <Table.Thead>\n            <Table.Tr>\n              <Table.Th style={{ width: rem(40) }} />\n              <Table.Th style={{ width: rem(80) }}>Position</Table.Th>\n              <Table.Th style={{ width: rem(120) }}>Name</Table.Th>\n              <Table.Th style={{ width: rem(40) }}>Symbol</Table.Th>\n              <Table.Th>Mass</Table.Th>\n            </Table.Tr>\n          </Table.Thead>\n          <Droppable droppableId=\"dnd-list\" direction=\"vertical\">\n            {(provided) => (\n              <Table.Tbody {...provided.droppableProps} ref={provided.innerRef}>\n                {items}\n                {provided.placeholder}\n              </Table.Tbody>\n            )}\n          </Droppable>\n        </Table>\n      </DragDropContext>\n    </Table.ScrollContainer>\n  );\n}\n"},{"fileName":"DndTable.module.css","language":"css","code":".item {\n  background-color: var(--mantine-color-body);\n}\n\n.dragHandle {\n  width: rem(40px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-1));\n}\n"}],"attributes":{"title":"Drag'n'drop table","category":"dnd","canvas":{"center":true,"maxWidth":420}}},{"component":"DoubleHeader","slug":"double-header","code":[{"fileName":"DoubleHeader.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Container, Anchor, Group, Burger, Box } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './DoubleHeader.module.css';\n\nconst userLinks = [\n  { link: '#', label: 'Privacy & Security' },\n  { link: '#', label: 'Account settings' },\n  { link: '#', label: 'Support options' },\n];\n\nconst mainLinks = [\n  { link: '#', label: 'Book a demo' },\n  { link: '#', label: 'Documentation' },\n  { link: '#', label: 'Community' },\n  { link: '#', label: 'Academy' },\n  { link: '#', label: 'Forums' },\n];\n\nexport function DoubleHeader() {\n  const [opened, { toggle }] = useDisclosure(false);\n  const [active, setActive] = useState(0);\n\n  const mainItems = mainLinks.map((item, index) => (\n    <Anchor<'a'>\n      href={item.link}\n      key={item.label}\n      className={classes.mainLink}\n      data-active={index === active || undefined}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(index);\n      }}\n    >\n      {item.label}\n    </Anchor>\n  ));\n\n  const secondaryItems = userLinks.map((item) => (\n    <Anchor\n      href={item.link}\n      key={item.label}\n      onClick={(event) => event.preventDefault()}\n      className={classes.secondaryLink}\n    >\n      {item.label}\n    </Anchor>\n  ));\n\n  return (\n    <header className={classes.header}>\n      <Container className={classes.inner}>\n        <MantineLogo size={34} />\n        <Box className={classes.links} visibleFrom=\"sm\">\n          <Group justify=\"flex-end\">{secondaryItems}</Group>\n          <Group gap={0} justify=\"flex-end\" className={classes.mainLinks}>\n            {mainItems}\n          </Group>\n        </Box>\n        <Burger\n          opened={opened}\n          onClick={toggle}\n          className={classes.burger}\n          size=\"sm\"\n          hiddenFrom=\"sm\"\n        />\n      </Container>\n    </header>\n  );\n}\n"},{"fileName":"DoubleHeader.module.css","language":"css","code":"/* const HEADER_HEIGHT = rem(84); */\n\n/* \nconst useStyles = createStyles((theme) => ({\n  inner: {\n    height: HEADER_HEIGHT,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n\n  burger: {\n    [theme.fn.largerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  links: {\n    paddingTop: theme.spacing.lg,\n    height: HEADER_HEIGHT,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n\n    [theme.fn.smallerThan('sm')]: {\n      display: 'none',\n    },\n  },\n\n  mainLinks: {\n    marginRight: `calc(${theme.spacing.sm} * -1)`,\n  },\n\n  mainLink: {\n    textTransform: 'uppercase',\n    fontSize: rem(13),\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[6],\n    padding: `${rem(7)} ${theme.spacing.sm}`,\n    fontWeight: 700,\n    borderBottom: `${rem(2)} solid transparent`,\n    transition: 'border-color 100ms ease, color 100ms ease',\n\n    '&:hover': {\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n      textDecoration: 'none',\n    },\n  },\n\n  secondaryLink: {\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n    fontSize: theme.fontSizes.xs,\n    textTransform: 'uppercase',\n    transition: 'color 100ms ease',\n\n    '&:hover': {\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n      textDecoration: 'none',\n    },\n  },\n\n  mainLinkActive: {\n    color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n    borderBottomColor: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 5 : 6],\n  },\n})); */\n\n.header {\n  height: rem(84px);\n  margin-bottom: rem(120px);\n  background-color: var(--mantine-color-body);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.inner {\n  height: rem(84px);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.links {\n  padding-top: var(--mantine-spacing-lg);\n  height: rem(84px);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n\n.mainLinks {\n  margin-right: calc(var(--mantine-spacing-sm) * -1);\n}\n\n.mainLink {\n  text-transform: uppercase;\n  font-size: var(--mantine-font-size-xs);\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-1));\n  padding: rem(7px) var(--mantine-spacing-sm);\n  font-weight: 700;\n  border-bottom: rem(2px) solid transparent;\n  transition: border-color 100ms ease, color 100ms ease;\n\n  @mixin hover {\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    text-decoration: none;\n  }\n\n  &[data-active] {\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    border-bottom-color: var(--mantine-color-blue-6);\n  }\n}\n\n.secondaryLink {\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-1));\n  font-size: var(--mantine-font-size-xs);\n  text-transform: uppercase;\n  transition: color 100ms ease;\n\n  @mixin hover {\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    text-decoration: none;\n  }\n}\n"}],"attributes":{"title":"Header with multiple layers","category":"headers","responsive":true,"canvas":{"center":false}}},{"component":"DoubleNavbar","slug":"double-navbar","code":[{"fileName":"DoubleNavbar.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { UnstyledButton, Tooltip, Title, rem } from '@mantine/core';\nimport {\n  IconHome2,\n  IconGauge,\n  IconDeviceDesktopAnalytics,\n  IconFingerprint,\n  IconCalendarStats,\n  IconUser,\n  IconSettings,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './DoubleNavbar.module.css';\n\nconst mainLinksMockdata = [\n  { icon: IconHome2, label: 'Home' },\n  { icon: IconGauge, label: 'Dashboard' },\n  { icon: IconDeviceDesktopAnalytics, label: 'Analytics' },\n  { icon: IconCalendarStats, label: 'Releases' },\n  { icon: IconUser, label: 'Account' },\n  { icon: IconFingerprint, label: 'Security' },\n  { icon: IconSettings, label: 'Settings' },\n];\n\nconst linksMockdata = [\n  'Security',\n  'Settings',\n  'Dashboard',\n  'Releases',\n  'Account',\n  'Orders',\n  'Clients',\n  'Databases',\n  'Pull Requests',\n  'Open Issues',\n  'Wiki pages',\n];\n\nexport function DoubleNavbar() {\n  const [active, setActive] = useState('Releases');\n  const [activeLink, setActiveLink] = useState('Settings');\n\n  const mainLinks = mainLinksMockdata.map((link) => (\n    <Tooltip\n      label={link.label}\n      position=\"right\"\n      withArrow\n      transitionProps={{ duration: 0 }}\n      key={link.label}\n    >\n      <UnstyledButton\n        onClick={() => setActive(link.label)}\n        className={classes.mainLink}\n        data-active={link.label === active || undefined}\n      >\n        <link.icon style={{ width: rem(22), height: rem(22) }} stroke={1.5} />\n      </UnstyledButton>\n    </Tooltip>\n  ));\n\n  const links = linksMockdata.map((link) => (\n    <a\n      className={classes.link}\n      data-active={activeLink === link || undefined}\n      href=\"#\"\n      onClick={(event) => {\n        event.preventDefault();\n        setActiveLink(link);\n      }}\n      key={link}\n    >\n      {link}\n    </a>\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.wrapper}>\n        <div className={classes.aside}>\n          <div className={classes.logo}>\n            <MantineLogo type=\"mark\" size={30} />\n          </div>\n          {mainLinks}\n        </div>\n        <div className={classes.main}>\n          <Title order={4} className={classes.title}>\n            {active}\n          </Title>\n\n          {links}\n        </div>\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"DoubleNavbar.module.css","language":"css","code":".navbar {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-6));\n  height: rem(750px);\n  width: rem(300px);\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.wrapper {\n  display: flex;\n  flex: 1;\n}\n\n.aside {\n  flex: 0 0 rem(60px);\n  background-color: var(--mantine-color-body);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n}\n\n.main {\n  flex: 1;\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n}\n\n.mainLink {\n  width: rem(44px);\n  height: rem(44px);\n  border-radius: var(--mantine-radius-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-5));\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      background-color: var(--mantine-color-blue-light);\n      color: var(--mantine-color-blue-light-color);\n    }\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  margin-bottom: var(--mantine-spacing-xl);\n  background-color: var(--mantine-color-body);\n  padding: var(--mantine-spacing-md);\n  padding-top: rem(18px);\n  height: rem(60px);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n}\n\n.logo {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  height: rem(60px);\n  padding-top: var(--mantine-spacing-md);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-7));\n  margin-bottom: var(--mantine-spacing-xl);\n}\n\n.link {\n  display: block;\n  text-decoration: none;\n  border-top-right-radius: var(--mantine-radius-md);\n  border-bottom-right-radius: var(--mantine-radius-md);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  padding: 0 var(--mantine-spacing-md);\n  font-size: var(--mantine-font-size-sm);\n  margin-right: var(--mantine-spacing-md);\n  font-weight: 500;\n  height: rem(44px);\n  line-height: rem(44px);\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-5));\n    color: light-dark(var(--mantine-color-dark), var(--mantine-color-light));\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      border-left-color: var(--mantine-color-blue-filled);\n      background-color: var(--mantine-color-blue-filled);\n      color: var(--mantine-color-white);\n    }\n  }\n}\n"}],"attributes":{"title":"Navbar with 2 sections","category":"navbars","canvas":{"center":false}}},{"component":"DropzoneButton","slug":"dropzone-button","code":[{"fileName":"DropzoneButton.tsx","language":"tsx","code":"import { useRef } from 'react';\nimport { Text, Group, Button, rem, useMantineTheme } from '@mantine/core';\nimport { Dropzone, MIME_TYPES } from '@mantine/dropzone';\nimport { IconCloudUpload, IconX, IconDownload } from '@tabler/icons-react';\nimport classes from './DropzoneButton.module.css';\n\nexport function DropzoneButton() {\n  const theme = useMantineTheme();\n  const openRef = useRef<() => void>(null);\n\n  return (\n    <div className={classes.wrapper}>\n      <Dropzone\n        openRef={openRef}\n        onDrop={() => {}}\n        className={classes.dropzone}\n        radius=\"md\"\n        accept={[MIME_TYPES.pdf]}\n        maxSize={30 * 1024 ** 2}\n      >\n        <div style={{ pointerEvents: 'none' }}>\n          <Group justify=\"center\">\n            <Dropzone.Accept>\n              <IconDownload\n                style={{ width: rem(50), height: rem(50) }}\n                color={theme.colors.blue[6]}\n                stroke={1.5}\n              />\n            </Dropzone.Accept>\n            <Dropzone.Reject>\n              <IconX\n                style={{ width: rem(50), height: rem(50) }}\n                color={theme.colors.red[6]}\n                stroke={1.5}\n              />\n            </Dropzone.Reject>\n            <Dropzone.Idle>\n              <IconCloudUpload style={{ width: rem(50), height: rem(50) }} stroke={1.5} />\n            </Dropzone.Idle>\n          </Group>\n\n          <Text ta=\"center\" fw={700} fz=\"lg\" mt=\"xl\">\n            <Dropzone.Accept>Drop files here</Dropzone.Accept>\n            <Dropzone.Reject>Pdf file less than 30mb</Dropzone.Reject>\n            <Dropzone.Idle>Upload resume</Dropzone.Idle>\n          </Text>\n          <Text ta=\"center\" fz=\"sm\" mt=\"xs\" c=\"dimmed\">\n            Drag&apos;n&apos;drop files here to upload. We can accept only <i>.pdf</i> files that\n            are less than 30mb in size.\n          </Text>\n        </div>\n      </Dropzone>\n\n      <Button className={classes.control} size=\"md\" radius=\"xl\" onClick={() => openRef.current?.()}>\n        Select files\n      </Button>\n    </div>\n  );\n}\n"},{"fileName":"DropzoneButton.module.css","language":"css","code":".wrapper {\n  position: relative;\n  margin-bottom: rem(30px);\n}\n\n.dropzone {\n  border-width: rem(1px);\n  padding-bottom: rem(50px);\n}\n\n.icon {\n  color: light-dark(var(--mantine-color-gray-4), var(--mantine-color-dark-3));\n}\n\n.control {\n  position: absolute;\n  width: rem(250px);\n  left: calc(50% - rem(125px));\n  bottom: rem(-20px);\n}\n"}],"attributes":{"title":"Dropzone with button","category":"dropzones","canvas":{"center":true,"maxWidth":420}}},{"component":"EmailBanner","slug":"email-banner","code":[{"fileName":"EmailBanner.tsx","language":"tsx","code":"import { Text, Title, TextInput, Button, Image } from '@mantine/core';\nimport image from './image.svg';\nimport classes from './EmailBanner.module.css';\n\nexport function EmailBanner() {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.body}>\n        <Title className={classes.title}>Wait a minute...</Title>\n        <Text fw={500} fz=\"lg\" mb={5}>\n          Subscribe to our newsletter!\n        </Text>\n        <Text fz=\"sm\" c=\"dimmed\">\n          You will never miss important product updates, latest news and community QA sessions. Our\n          newsletter is once a week, every Sunday.\n        </Text>\n\n        <div className={classes.controls}>\n          <TextInput\n            placeholder=\"Your email\"\n            classNames={{ input: classes.input, root: classes.inputWrapper }}\n          />\n          <Button className={classes.control}>Subscribe</Button>\n        </div>\n      </div>\n      <Image src={image.src} className={classes.image} />\n    </div>\n  );\n}\n"},{"fileName":"EmailBanner.module.css","language":"css","code":".wrapper {\n  display: flex;\n  align-items: center;\n  padding: calc(var(--mantine-spacing-xl) * 2);\n  border-radius: var(--mantine-radius-md);\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-8));\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column-reverse;\n    padding: var(--mantine-spacing-xl);\n  }\n}\n\n.image {\n  max-width: 40%;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    max-width: 100%;\n  }\n}\n\n.body {\n  padding-right: calc(var(--mantine-spacing-xl) * 4);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding-right: 0;\n    margin-top: var(--mantine-spacing-xl);\n  }\n}\n\n.title {\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  font-family: Greycliff CF, var(--mantine-font-family);\n  line-height: 1;\n  margin-bottom: var(--mantine-spacing-md);\n}\n\n.controls {\n  display: flex;\n  margin-top: var(--mantine-spacing-xl);\n}\n\n.inputWrapper {\n  width: 100%;\n  flex: 1;\n}\n\n.input {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 0;\n}\n\n.control {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n"}],"attributes":{"title":"Email banner","category":"banners","responsive":true,"withColor":true,"dimmed":true,"canvas":{"center":true,"maxWidth":980}}},{"component":"FaqSimple","slug":"faq-simple","code":[{"fileName":"FaqSimple.tsx","language":"tsx","code":"import { Container, Title, Accordion } from '@mantine/core';\nimport classes from './FaqSimple.module.css';\n\nconst placeholder =\n  'It can’t help but hear a pin drop from over half a mile away, so it lives deep in the mountains where there aren’t many people or Pokémon.It was born from sludge on the ocean floor. In a sterile environment, the germs within its body can’t multiply, and it dies.It has no eyeballs, so it can’t see. It checks its surroundings via the ultrasonic waves it emits from its mouth.';\n\nexport function FaqSimple() {\n  return (\n    <Container size=\"sm\" className={classes.wrapper}>\n      <Title ta=\"center\" className={classes.title}>\n        Frequently Asked Questions\n      </Title>\n\n      <Accordion variant=\"separated\">\n        <Accordion.Item className={classes.item} value=\"reset-password\">\n          <Accordion.Control>How can I reset my password?</Accordion.Control>\n          <Accordion.Panel>{placeholder}</Accordion.Panel>\n        </Accordion.Item>\n\n        <Accordion.Item className={classes.item} value=\"another-account\">\n          <Accordion.Control>Can I create more that one account?</Accordion.Control>\n          <Accordion.Panel>{placeholder}</Accordion.Panel>\n        </Accordion.Item>\n\n        <Accordion.Item className={classes.item} value=\"newsletter\">\n          <Accordion.Control>How can I subscribe to monthly newsletter?</Accordion.Control>\n          <Accordion.Panel>{placeholder}</Accordion.Panel>\n        </Accordion.Item>\n\n        <Accordion.Item className={classes.item} value=\"credit-card\">\n          <Accordion.Control>Do you store credit card information securely?</Accordion.Control>\n          <Accordion.Panel>{placeholder}</Accordion.Panel>\n        </Accordion.Item>\n\n        <Accordion.Item className={classes.item} value=\"payment\">\n          <Accordion.Control>What payment systems to you work with?</Accordion.Control>\n          <Accordion.Panel>{placeholder}</Accordion.Panel>\n        </Accordion.Item>\n      </Accordion>\n    </Container>\n  );\n}\n"},{"fileName":"FaqSimple.module.css","language":"css","code":".wrapper {\n  padding-top: calc(var(--mantine-spacing-xl) * 2);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 2);\n  min-height: rem(650px);\n}\n\n.title {\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n}\n\n.item {\n  border-radius: var(--mantine-radius-md);\n  margin-bottom: var(--mantine-spacing-lg);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n"}],"attributes":{"title":"FAQ simple","category":"faq","canvas":{"center":false}}},{"component":"FaqWithBg","slug":"faq-with-bg","code":[{"fileName":"FaqWithBg.tsx","language":"tsx","code":"import { Title, Container, Accordion, ThemeIcon, rem } from '@mantine/core';\nimport { IconPlus } from '@tabler/icons-react';\nimport classes from './FaqWithBg.module.css';\n\nconst placeholder =\n  'It can’t help but hear a pin drop from over half a mile away, so it lives deep in the mountains where there aren’t many people or Pokémon.It was born from sludge on the ocean floor. In a sterile environment, the germs within its body can’t multiply, and it dies.It has no eyeballs, so it can’t see. It checks its surroundings via the ultrasonic waves it emits from its mouth.';\n\nexport function FaqWithBg() {\n  return (\n    <div className={classes.wrapper}>\n      <Container size=\"sm\">\n        <Title ta=\"center\" className={classes.title}>\n          Frequently Asked Questions\n        </Title>\n\n        <Accordion\n          chevronPosition=\"right\"\n          defaultValue=\"reset-password\"\n          chevronSize={26}\n          variant=\"separated\"\n          disableChevronRotation\n          styles={{ label: { color: 'var(--mantine-color-black)' }, item: { border: 0 } }}\n          chevron={\n            <ThemeIcon radius=\"xl\" className={classes.gradient} size={26}>\n              <IconPlus style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n            </ThemeIcon>\n          }\n        >\n          <Accordion.Item className={classes.item} value=\"reset-password\">\n            <Accordion.Control>How can I reset my password?</Accordion.Control>\n            <Accordion.Panel>{placeholder}</Accordion.Panel>\n          </Accordion.Item>\n\n          <Accordion.Item className={classes.item} value=\"another-account\">\n            <Accordion.Control>Can I create more that one account?</Accordion.Control>\n            <Accordion.Panel>{placeholder}</Accordion.Panel>\n          </Accordion.Item>\n\n          <Accordion.Item className={classes.item} value=\"newsletter\">\n            <Accordion.Control>How can I subscribe to monthly newsletter?</Accordion.Control>\n            <Accordion.Panel>{placeholder}</Accordion.Panel>\n          </Accordion.Item>\n\n          <Accordion.Item className={classes.item} value=\"credit-card\">\n            <Accordion.Control>Do you store credit card information securely?</Accordion.Control>\n            <Accordion.Panel>{placeholder}</Accordion.Panel>\n          </Accordion.Item>\n\n          <Accordion.Item className={classes.item} value=\"payment\">\n            <Accordion.Control>What payment systems to you work with?</Accordion.Control>\n            <Accordion.Panel>{placeholder}</Accordion.Panel>\n          </Accordion.Item>\n        </Accordion>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"FaqWithBg.module.css","language":"css","code":".wrapper {\n  padding-top: calc(var(--mantine-spacing-xl) * 2);\n  min-height: rem(820px);\n  background-image: radial-gradient(\n    var(--mantine-color-blue-6) 0%,\n    var(--mantine-color-blue-4) 100%\n  );\n  background-repeat: no-repeat;\n  background-position: top left;\n  position: relative;\n  color: var(--mantine-color-black);\n}\n\n.title {\n  color: var(--mantine-color-white);\n  font-size: 52px;\n  font-family: Greycliff CF, var(--mantine-font-family);\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n}\n\n.item {\n  background-color: var(--mantine-color-white);\n  border-bottom: 0;\n  border-radius: var(--mantine-radius-md);\n  box-shadow: var(--mantine-shadow-lg);\n  overflow: hidden;\n}\n\n.control {\n  font-size: var(--mantine-font-size-lg);\n  padding: var(--mantine-spacing-lg) var(--mantine-spacing-xl);\n  color: var(--mantine-color-black);\n\n  @mixin hover {\n    background-color: transparent;\n  }\n}\n\n.content {\n  padding-left: var(--mantine-spacing-xl);\n  line-height: 1.6;\n  color: var(--mantine-color-black);\n}\n\n.icon {\n  margin-left: var(--mantine-spacing-md);\n}\n\n.gradient {\n  background-image: radial-gradient(\n    var(--mantine-color-blue-6) 0%,\n    var(--mantine-color-blue-5) 100%\n  );\n}\n\n.itemOpened {\n  & .icon {\n    transform: rotate(45deg);\n  }\n}\n\n.button {\n  display: block;\n  margin-top: var(--mantine-spacing-md);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    display: block;\n    width: 100%;\n  }\n}\n"}],"attributes":{"title":"Faq with background","category":"faq","responsive":true,"canvas":{"center":false}}},{"component":"FaqWithHeader","slug":"faq-with-header","code":[{"fileName":"FaqWithHeader.tsx","language":"tsx","code":"import { Title, Container, Text, UnstyledButton, Overlay, SimpleGrid } from '@mantine/core';\nimport { ContactIconsList } from './ContactIcons';\nimport classes from './FaqWithHeader.module.css';\n\nconst categories = [\n  {\n    label: 'Customer Support',\n    image:\n      'https://images.unsplash.com/photo-1508780709619-79562169bc64?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80',\n  },\n  {\n    label: 'User Guides',\n    image:\n      'https://images.unsplash.com/photo-1516321318423-f06f85e504b3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=600&q=80',\n  },\n  {\n    label: 'Sales Questions',\n    image:\n      'https://images.unsplash.com/photo-1543286386-713bdd548da4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80',\n  },\n];\n\nexport function FaqWithHeader() {\n  const items = categories.map((category) => (\n    <UnstyledButton\n      style={{ backgroundImage: `url(${category.image})` }}\n      className={classes.categoryCard}\n      key={category.label}\n    >\n      <Overlay color=\"#000\" opacity={0.6} zIndex={1} />\n      <Text size=\"xl\" ta=\"center\" fw={700} className={classes.categoryLabel}>\n        {category.label}\n      </Text>\n    </UnstyledButton>\n  ));\n\n  return (\n    <Container className={classes.wrapper} size=\"lg\">\n      <div className={classes.header}>\n        <div>\n          <Title className={classes.title}>Frequently Asked Questions</Title>\n          <Title className={classes.titleOverlay} role=\"presentation\">\n            FAQ\n          </Title>\n        </div>\n\n        <div className={classes.contact}>\n          <Text size=\"xl\" fw={500} className={classes.contactTitle}>\n            Contact us\n          </Text>\n\n          <ContactIconsList />\n        </div>\n      </div>\n\n      <SimpleGrid cols={{ base: 1, sm: 3 }}>{items}</SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"ContactIcons.module.css","language":"css","code":".wrapper {\n  display: flex;\n  align-items: center;\n  color: var(--mantine-color-white);\n}\n\n.icon {\n  margin-right: var(--mantine-spacing-md);\n  background-image: linear-gradient(\n    135deg,\n    var(--mantine-color-blue-4) 0%,\n    var(--mantine-color-blue-6) 100%\n  );\n}\n\n.title {\n  color: var(--mantine-color-gray-6);\n}\n\n.description {\n  color: var(--mantine-color-black);\n}\n"},{"fileName":"ContactIcons.tsx","language":"tsx","code":"import { Text, ThemeIcon, Stack, rem } from '@mantine/core';\nimport { IconSun, IconPhone, IconMapPin, IconAt } from '@tabler/icons-react';\nimport classes from './ContactIcons.module.css';\n\ninterface ContactIconProps extends Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  icon: typeof IconSun;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nfunction ContactIcon({ icon: Icon, title, description, ...others }: ContactIconProps) {\n  return (\n    <div className={classes.wrapper} {...others}>\n      <ThemeIcon size={40} radius=\"md\" className={classes.icon}>\n        <Icon style={{ width: rem(24), height: rem(24) }} />\n      </ThemeIcon>\n\n      <div>\n        <Text size=\"xs\" className={classes.title}>\n          {title}\n        </Text>\n        <Text className={classes.description}>{description}</Text>\n      </div>\n    </div>\n  );\n}\n\nconst MOCKDATA = [\n  { title: 'Email', description: 'hello@mantine.dev', icon: IconAt },\n  { title: 'Phone', description: '+49 (800) 335 35 35', icon: IconPhone },\n  { title: 'Address', description: '844 Morris Park avenue', icon: IconMapPin },\n  { title: 'Working hours', description: '8 a.m. – 11 p.m.', icon: IconSun },\n];\n\nexport function ContactIconsList() {\n  const items = MOCKDATA.map((item, index) => <ContactIcon key={index} {...item} />);\n  return <Stack>{items}</Stack>;\n}\n"},{"fileName":"FaqWithHeader.module.css","language":"css","code":".wrapper {\n  padding-top: var(--mantine-spacing-md);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 2);\n}\n\n.header {\n  height: rem(400px);\n  padding-top: var(--mantine-spacing-md);\n  background-image: linear-gradient(\n    135deg,\n    var(--mantine-color-blue-4) 0%,\n    var(--mantine-color-blue-6) 100%\n  );\n  background-size: cover;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  position: relative;\n  padding: calc(var(--mantine-spacing-xl) * 1.5) calc(var(--mantine-spacing-xl) * 2);\n  border-radius: var(--mantine-radius-lg);\n  margin-bottom: var(--mantine-spacing-lg);\n\n  @media (max-width: em(1080px)) {\n    height: auto;\n    flex-direction: column-reverse;\n    align-items: initial;\n    padding: var(--mantine-spacing-xl);\n  }\n}\n\n.title {\n  color: var(--mantine-color-white);\n  position: relative;\n  z-index: 1;\n  font-size: rem(46px);\n  font-weight: 800;\n  letter-spacing: rem(-0.5px);\n  font-family: Greycliff CF, var(--mantine-font-family);\n\n  @media (max-width: em(1080px)) {\n    font-size: rem(22px);\n    text-align: center;\n    margin-top: var(--mantine-spacing-xl);\n  }\n}\n\n.titleOverlay {\n  z-index: 0;\n  position: absolute;\n  color: var(--mantine-color-white);\n  font-weight: 900;\n  opacity: 0.1;\n  font-size: rem(320px);\n  line-height: 1;\n  top: rem(10px);\n  left: rem(45px);\n  pointer-events: none;\n  font-family: Greycliff CF, var(--mantine-font-family);\n\n  @media (max-width: em(1080px)) {\n    display: none;\n  }\n}\n\n.contact {\n  padding: calc(var(--mantine-spacing-xl) * 1.5);\n  background-color: var(--mantine-color-white);\n  border-radius: var(--mantine-radius-lg);\n  box-shadow: var(--mantine-shadow-md);\n  align-self: center;\n\n  @media (max-width: em(1080px)) {\n    padding: var(--mantine-spacing-xl);\n  }\n}\n\n.contactTitle {\n  color: var(--mantine-color-black);\n  margin-bottom: var(--mantine-spacing-xl);\n  line-height: 1;\n}\n\n.categoryCard {\n  height: rem(160px);\n  position: relative;\n  background-size: 100%;\n  background-position: center;\n  color: var(--mantine-color-white);\n  border-radius: var(--mantine-radius-lg);\n  padding: var(--mantine-spacing-xl);\n  overflow: hidden;\n  transition: background-size 300ms ease;\n\n  @mixin hover {\n    background-size: 105%;\n  }\n}\n\n.categoryLabel {\n  color: var(--mantine-color-white);\n  z-index: 2;\n  position: relative;\n}\n"}],"attributes":{"title":"Faq page header","category":"faq","responsive":true,"canvas":{"center":false}}},{"component":"FaqWithImage","slug":"faq-with-image","code":[{"fileName":"FaqWithImage.tsx","language":"tsx","code":"import { Image, Accordion, Grid, Container, Title } from '@mantine/core';\nimport image from './image.svg';\nimport classes from './FaqWithImage.module.css';\n\nconst placeholder =\n  'It can’t help but hear a pin drop from over half a mile away, so it lives deep in the mountains where there aren’t many people or Pokémon.';\n\nexport function FaqWithImage() {\n  return (\n    <div className={classes.wrapper}>\n      <Container size=\"lg\">\n        <Grid id=\"faq-grid\" gutter={50}>\n          <Grid.Col span={{ base: 12, md: 6 }}>\n            <Image src={image.src} alt=\"Frequently Asked Questions\" />\n          </Grid.Col>\n          <Grid.Col span={{ base: 12, md: 6 }}>\n            <Title order={2} ta=\"left\" className={classes.title}>\n              Frequently Asked Questions\n            </Title>\n\n            <Accordion chevronPosition=\"right\" defaultValue=\"reset-password\" variant=\"separated\">\n              <Accordion.Item className={classes.item} value=\"reset-password\">\n                <Accordion.Control>How can I reset my password?</Accordion.Control>\n                <Accordion.Panel>{placeholder}</Accordion.Panel>\n              </Accordion.Item>\n\n              <Accordion.Item className={classes.item} value=\"another-account\">\n                <Accordion.Control>Can I create more that one account?</Accordion.Control>\n                <Accordion.Panel>{placeholder}</Accordion.Panel>\n              </Accordion.Item>\n\n              <Accordion.Item className={classes.item} value=\"newsletter\">\n                <Accordion.Control>How can I subscribe to monthly newsletter?</Accordion.Control>\n                <Accordion.Panel>{placeholder}</Accordion.Panel>\n              </Accordion.Item>\n\n              <Accordion.Item className={classes.item} value=\"credit-card\">\n                <Accordion.Control>\n                  Do you store credit card information securely?\n                </Accordion.Control>\n                <Accordion.Panel>{placeholder}</Accordion.Panel>\n              </Accordion.Item>\n            </Accordion>\n          </Grid.Col>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"FaqWithImage.module.css","language":"css","code":".wrapper {\n  padding-top: calc(var(--mantine-spacing-xl) * 2);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 2);\n}\n\n.title {\n  margin-bottom: var(--mantine-spacing-md);\n  padding-left: var(--mantine-spacing-md);\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n\n.item {\n  font-size: var(--mantine-font-size-sm);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-1));\n}\n"}],"attributes":{"title":"Faq with image","category":"faq","responsive":true,"canvas":{"center":false}}},{"component":"FeaturesAsymmetrical","slug":"features-asymmetrical","code":[{"fileName":"FeaturesAsymmetrical.tsx","language":"tsx","code":"import { Text, SimpleGrid, Container, rem } from '@mantine/core';\nimport { IconTruck, IconCertificate, IconCoin } from '@tabler/icons-react';\nimport classes from './FeaturesAsymmetrical.module.css';\n\ninterface FeatureProps extends React.ComponentPropsWithoutRef<'div'> {\n  icon: React.FC<any>;\n  title: string;\n  description: string;\n}\n\nfunction Feature({ icon: Icon, title, description, className, ...others }: FeatureProps) {\n  return (\n    <div className={classes.feature} {...others}>\n      <div className={classes.overlay} />\n\n      <div className={classes.content}>\n        <Icon style={{ width: rem(38), height: rem(38) }} className={classes.icon} stroke={1.5} />\n        <Text fw={700} fz=\"lg\" mb=\"xs\" mt={5} className={classes.title}>\n          {title}\n        </Text>\n        <Text c=\"dimmed\" fz=\"sm\">\n          {description}\n        </Text>\n      </div>\n    </div>\n  );\n}\n\nconst mockdata = [\n  {\n    icon: IconTruck,\n    title: 'Free Worldwide shipping',\n    description:\n      'As electricity builds up inside its body, it becomes more aggressive. One theory is that the electricity.',\n  },\n  {\n    icon: IconCertificate,\n    title: 'Best Quality Product',\n    description:\n      'Slakoth’s heart beats just once a minute. Whatever happens, it is content to loaf around motionless.',\n  },\n  {\n    icon: IconCoin,\n    title: 'Very Affordable Pricing',\n    description:\n      'Thought to have gone extinct, Relicanth was given a name that is a variation of the name of the person who discovered.',\n  },\n];\n\nexport function FeaturesAsymmetrical() {\n  const items = mockdata.map((item) => <Feature {...item} key={item.title} />);\n\n  return (\n    <Container mt={30} mb={30} size=\"lg\">\n      <SimpleGrid cols={{ base: 1, sm: 3 }} spacing={50}>\n        {items}\n      </SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"FeaturesAsymmetrical.module.css","language":"css","code":".feature {\n  position: relative;\n  padding-top: var(--mantine-spacing-xl);\n  padding-left: var(--mantine-spacing-xl);\n}\n\n.overlay {\n  position: absolute;\n  height: rem(100px);\n  width: rem(160px);\n  top: 0;\n  left: 0;\n  background-color: var(--mantine-color-blue-light);\n  z-index: 1;\n}\n\n.content {\n  position: relative;\n  z-index: 2;\n}\n\n.icon {\n  color: var(--mantine-color-blue-filled);\n}\n\n.title {\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n}\n"}],"attributes":{"title":"Features with icons","category":"features","responsive":true,"canvas":{"center":false}}},{"component":"FeaturesCard","slug":"features-card","code":[{"fileName":"FeaturesCard.tsx","language":"tsx","code":"import { Card, Image, Text, Group, Badge, Center, Button } from '@mantine/core';\nimport { IconGasStation, IconGauge, IconManualGearbox, IconUsers } from '@tabler/icons-react';\nimport classes from './FeaturesCard.module.css';\n\nconst mockdata = [\n  { label: '4 passengers', icon: IconUsers },\n  { label: '100 km/h in 4 seconds', icon: IconGauge },\n  { label: 'Automatic gearbox', icon: IconManualGearbox },\n  { label: 'Electric', icon: IconGasStation },\n];\n\nexport function FeaturesCard() {\n  const features = mockdata.map((feature) => (\n    <Center key={feature.label}>\n      <feature.icon size=\"1.05rem\" className={classes.icon} stroke={1.5} />\n      <Text size=\"xs\">{feature.label}</Text>\n    </Center>\n  ));\n\n  return (\n    <Card withBorder radius=\"md\" className={classes.card}>\n      <Card.Section className={classes.imageSection}>\n        <Image src=\"https://i.imgur.com/ZL52Q2D.png\" alt=\"Tesla Model S\" />\n      </Card.Section>\n\n      <Group justify=\"space-between\" mt=\"md\">\n        <div>\n          <Text fw={500}>Tesla Model S</Text>\n          <Text fz=\"xs\" c=\"dimmed\">\n            Free recharge at any station\n          </Text>\n        </div>\n        <Badge variant=\"outline\">25% off</Badge>\n      </Group>\n\n      <Card.Section className={classes.section} mt=\"md\">\n        <Text fz=\"sm\" c=\"dimmed\" className={classes.label}>\n          Basic configuration\n        </Text>\n\n        <Group gap={8} mb={-8}>\n          {features}\n        </Group>\n      </Card.Section>\n\n      <Card.Section className={classes.section}>\n        <Group gap={30}>\n          <div>\n            <Text fz=\"xl\" fw={700} style={{ lineHeight: 1 }}>\n              $168.00\n            </Text>\n            <Text fz=\"sm\" c=\"dimmed\" fw={500} style={{ lineHeight: 1 }} mt={3}>\n              per day\n            </Text>\n          </div>\n\n          <Button radius=\"xl\" style={{ flex: 1 }}>\n            Rent now\n          </Button>\n        </Group>\n      </Card.Section>\n    </Card>\n  );\n}\n"},{"fileName":"FeaturesCard.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.imageSection {\n  padding: var(--mantine-spacing-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.label {\n  margin-bottom: var(--mantine-spacing-xs);\n  line-height: 1;\n  font-weight: 700;\n  font-size: var(--mantine-font-size-xs);\n  letter-spacing: rem(-0.25px);\n  text-transform: uppercase;\n}\n\n.section {\n  padding: var(--mantine-spacing-md);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.icon {\n  margin-right: rem(5px);\n  color: light-dark(var(--mantine-color-gray-5), var(--mantine-color-dark-2));\n}\n"}],"attributes":{"title":"Card with icon features","category":"app-cards","author":"rtivital","withColor":true,"dimmed":true,"canvas":{"center":true,"maxWidth":320}}},{"component":"FeaturesCards","slug":"features-cards","code":[{"fileName":"FeaturesCards.tsx","language":"tsx","code":"import {\n  Badge,\n  Group,\n  Title,\n  Text,\n  Card,\n  SimpleGrid,\n  Container,\n  rem,\n  useMantineTheme,\n} from '@mantine/core';\nimport { IconGauge, IconUser, IconCookie } from '@tabler/icons-react';\nimport classes from './FeaturesCards.module.css';\n\nconst mockdata = [\n  {\n    title: 'Extreme performance',\n    description:\n      'This dust is actually a powerful poison that will even make a pro wrestler sick, Regice cloaks itself with frigid air of -328 degrees Fahrenheit',\n    icon: IconGauge,\n  },\n  {\n    title: 'Privacy focused',\n    description:\n      'People say it can run at the same speed as lightning striking, Its icy body is so cold, it will not melt even if it is immersed in magma',\n    icon: IconUser,\n  },\n  {\n    title: 'No third parties',\n    description:\n      'They’re popular, but they’re rare. Trainers who show them off recklessly may be targeted by thieves',\n    icon: IconCookie,\n  },\n];\n\nexport function FeaturesCards() {\n  const theme = useMantineTheme();\n  const features = mockdata.map((feature) => (\n    <Card key={feature.title} shadow=\"md\" radius=\"md\" className={classes.card} padding=\"xl\">\n      <feature.icon\n        style={{ width: rem(50), height: rem(50) }}\n        stroke={2}\n        color={theme.colors.blue[6]}\n      />\n      <Text fz=\"lg\" fw={500} className={classes.cardTitle} mt=\"md\">\n        {feature.title}\n      </Text>\n      <Text fz=\"sm\" c=\"dimmed\" mt=\"sm\">\n        {feature.description}\n      </Text>\n    </Card>\n  ));\n\n  return (\n    <Container size=\"lg\" py=\"xl\">\n      <Group justify=\"center\">\n        <Badge variant=\"filled\" size=\"lg\">\n          Best company ever\n        </Badge>\n      </Group>\n\n      <Title order={2} className={classes.title} ta=\"center\" mt=\"sm\">\n        Integrate effortlessly with any technology stack\n      </Title>\n\n      <Text c=\"dimmed\" className={classes.description} ta=\"center\" mt=\"md\">\n        Every once in a while, you’ll see a Golbat that’s missing some fangs. This happens when\n        hunger drives it to try biting a Steel-type Pokémon.\n      </Text>\n\n      <SimpleGrid cols={{ base: 1, md: 3 }} spacing=\"xl\" mt={50}>\n        {features}\n      </SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"FeaturesCards.module.css","language":"css","code":"/* \nconst useStyles = createStyles((theme) => ({\n  title: {\n    fontSize: rem(34),\n    fontWeight: 900,\n\n    [theme.fn.smallerThan('sm')]: {\n      fontSize: rem(24),\n    },\n  },\n\n  description: {\n    maxWidth: 600,\n    margin: 'auto',\n\n    '&::after': {\n      content: '\"\"',\n      display: 'block',\n      backgroundColor: theme.fn.primaryColor(),\n      width: rem(45),\n      height: rem(2),\n      marginTop: theme.spacing.sm,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n\n  card: {\n    border: `${rem(1)} solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[1]\n    }`,\n  },\n\n  cardTitle: {\n    '&::after': {\n      content: '\"\"',\n      display: 'block',\n      backgroundColor: theme.fn.primaryColor(),\n      width: rem(45),\n      height: rem(2),\n      marginTop: theme.spacing.sm,\n    },\n  },\n})); */\n\n.title {\n  font-size: rem(34px);\n  font-weight: 900;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(24px);\n  }\n}\n\n.description {\n  max-width: rem(600px);\n  margin: auto;\n\n  &::after {\n    content: '';\n    display: block;\n    background-color: var(--mantine-color-blue-filled);\n    width: rem(45px);\n    height: rem(2px);\n    margin-top: var(--mantine-spacing-sm);\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n\n.card {\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-5));\n}\n\n.cardTitle {\n  &::after {\n    content: '';\n    display: block;\n    background-color: var(--mantine-color-blue-filled);\n    width: rem(45px);\n    height: rem(2px);\n    margin-top: var(--mantine-spacing-sm);\n  }\n}\n"}],"attributes":{"title":"Features with cards","category":"features","changelog":"september-2022","responsive":true,"canvas":{"center":false}}},{"component":"FeaturesGrid","slug":"features-grid","code":[{"fileName":"FeaturesGrid.tsx","language":"tsx","code":"import { ThemeIcon, Text, Title, Container, SimpleGrid, rem } from '@mantine/core';\nimport { IconGauge, IconCookie, IconUser, IconMessage2, IconLock } from '@tabler/icons-react';\nimport classes from './FeaturesGrid.module.css';\n\nexport const MOCKDATA = [\n  {\n    icon: IconGauge,\n    title: 'Extreme performance',\n    description:\n      'This dust is actually a powerful poison that will even make a pro wrestler sick, Regice cloaks itself with frigid air of -328 degrees Fahrenheit',\n  },\n  {\n    icon: IconUser,\n    title: 'Privacy focused',\n    description:\n      'People say it can run at the same speed as lightning striking, Its icy body is so cold, it will not melt even if it is immersed in magma',\n  },\n  {\n    icon: IconCookie,\n    title: 'No third parties',\n    description:\n      'They’re popular, but they’re rare. Trainers who show them off recklessly may be targeted by thieves',\n  },\n  {\n    icon: IconLock,\n    title: 'Secure by default',\n    description:\n      'Although it still can’t fly, its jumping power is outstanding, in Alola the mushrooms on Paras don’t grow up quite right',\n  },\n  {\n    icon: IconMessage2,\n    title: '24/7 Support',\n    description:\n      'Rapidash usually can be seen casually cantering in the fields and plains, Skitty is known to chase around after its own tail',\n  },\n];\n\ninterface FeatureProps {\n  icon: React.FC<any>;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nexport function Feature({ icon: Icon, title, description }: FeatureProps) {\n  return (\n    <div>\n      <ThemeIcon variant=\"light\" size={40} radius={40}>\n        <Icon style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n      </ThemeIcon>\n      <Text mt=\"sm\" mb={7}>\n        {title}\n      </Text>\n      <Text size=\"sm\" c=\"dimmed\" lh={1.6}>\n        {description}\n      </Text>\n    </div>\n  );\n}\n\nexport function FeaturesGrid() {\n  const features = MOCKDATA.map((feature, index) => <Feature {...feature} key={index} />);\n\n  return (\n    <Container className={classes.wrapper}>\n      <Title className={classes.title}>Integrate effortlessly with any technology stack</Title>\n\n      <Container size={560} p={0}>\n        <Text size=\"sm\" className={classes.description}>\n          Every once in a while, you’ll see a Golbat that’s missing some fangs. This happens when\n          hunger drives it to try biting a Steel-type Pokémon.\n        </Text>\n      </Container>\n\n      <SimpleGrid\n        mt={60}\n        cols={{ base: 1, sm: 2, md: 3 }}\n        spacing={{ base: 'xl', md: 50 }}\n        verticalSpacing={{ base: 'xl', md: 50 }}\n      >\n        {features}\n      </SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"FeaturesGrid.module.css","language":"css","code":".wrapper {\n  padding-top: calc(var(--mantine-spacing-xl) * 4);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 4);\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 900;\n  margin-bottom: var(--mantine-spacing-md);\n  text-align: center;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(28px);\n    text-align: left;\n  }\n}\n\n.description {\n  text-align: center;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    text-align: left;\n  }\n}\n"}],"attributes":{"title":"Features with monotone icons","category":"features","responsive":true,"canvas":{"center":false}}},{"component":"FeaturesImages","slug":"features-images","code":[{"fileName":"FeaturesImages.tsx","language":"tsx","code":"import { Image, Text, Container, ThemeIcon, Title, SimpleGrid } from '@mantine/core';\nimport IMAGES from './images';\nimport classes from './FeaturesImages.module.css';\n\nconst data = [\n  {\n    image: 'auditors',\n    title: 'Pharmacists',\n    description: 'Azurill can be seen bouncing and playing on its big, rubbery tail',\n  },\n  {\n    image: 'lawyers',\n    title: 'Lawyers',\n    description: 'Fans obsess over the particular length and angle of its arms',\n  },\n  {\n    image: 'accountants',\n    title: 'Bank owners',\n    description: 'They divvy up their prey evenly among the members of their pack',\n  },\n  {\n    image: 'others',\n    title: 'Others',\n    description: 'Phanpy uses its long nose to shower itself',\n  },\n];\n\nexport function FeaturesImages() {\n  const items = data.map((item) => (\n    <div className={classes.item} key={item.image}>\n      <ThemeIcon variant=\"light\" className={classes.itemIcon} size={60} radius=\"md\">\n        <Image src={IMAGES[item.image]} />\n      </ThemeIcon>\n\n      <div>\n        <Text fw={700} fz=\"lg\" className={classes.itemTitle}>\n          {item.title}\n        </Text>\n        <Text c=\"dimmed\">{item.description}</Text>\n      </div>\n    </div>\n  ));\n\n  return (\n    <Container size={700} className={classes.wrapper}>\n      <Text className={classes.supTitle}>Use cases</Text>\n\n      <Title className={classes.title} order={2}>\n        PharmLand is <span className={classes.highlight}>not</span> just for pharmacists\n      </Title>\n\n      <Container size={660} p={0}>\n        <Text c=\"dimmed\" className={classes.description}>\n          Its lungs contain an organ that creates electricity. The crackling sound of electricity\n          can be heard when it exhales. Azurill’s tail is large and bouncy. It is packed full of the\n          nutrients this Pokémon needs to grow.\n        </Text>\n      </Container>\n\n      <SimpleGrid cols={{ base: 1, xs: 2 }} spacing={50} mt={30}>\n        {items}\n      </SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"FeaturesImages.module.css","language":"css","code":"/* \nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    paddingTop: rem(80),\n    paddingBottom: rem(50),\n  },\n\n  item: {\n    display: 'flex',\n  },\n\n  itemIcon: {\n    padding: theme.spacing.xs,\n    marginRight: theme.spacing.md,\n  },\n\n  itemTitle: {\n    marginBottom: `calc(${theme.spacing.xs} / 2)`,\n  },\n\n  supTitle: {\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    fontWeight: 800,\n    fontSize: theme.fontSizes.sm,\n    color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n    letterSpacing: rem(0.5),\n  },\n\n  title: {\n    lineHeight: 1,\n    textAlign: 'center',\n    marginTop: theme.spacing.xl,\n  },\n\n  description: {\n    textAlign: 'center',\n    marginTop: theme.spacing.xs,\n  },\n\n  highlight: {\n    backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n    padding: rem(5),\n    paddingTop: 0,\n    borderRadius: theme.radius.sm,\n    display: 'inline-block',\n    color: theme.colorScheme === 'dark' ? theme.white : 'inherit',\n  },\n})); */\n\n.wrapper {\n  padding-top: rem(80px);\n  padding-bottom: rem(50px);\n}\n\n.item {\n  display: flex;\n}\n\n.itemIcon {\n  padding: var(--mantine-spacing-xs);\n  margin-right: var(--mantine-spacing-md);\n}\n\n.itemTitle {\n  margin-bottom: calc(var(--mantine-spacing-xs) / 2);\n}\n\n.supTitle {\n  text-align: center;\n  text-transform: uppercase;\n  font-weight: 800;\n  font-size: var(--mantine-font-size-sm);\n  color: var(--mantine-color-blue-light-color);\n  letter-spacing: rem(0.5px);\n}\n\n.title {\n  line-height: 1;\n  text-align: center;\n  margin-top: var(--mantine-spacing-xl);\n}\n\n.description {\n  text-align: center;\n  margin-top: var(--mantine-spacing-xs);\n}\n\n.highlight {\n  background-color: var(--mantine-color-blue-light);\n  padding: rem(5px);\n  padding-top: 0;\n  border-radius: var(--mantine-radius-sm);\n  display: inline-block;\n  color: light-dark(inherit, var(--mantine-color-white));\n}\n"}],"attributes":{"title":"Features with image icons","category":"features","responsive":true,"canvas":{"center":false}}},{"component":"FeaturesTitle","slug":"features-title","code":[{"fileName":"FeaturesTitle.tsx","language":"tsx","code":"import { Title, SimpleGrid, Text, Button, ThemeIcon, Grid, rem } from '@mantine/core';\nimport { IconReceiptOff, IconFlame, IconCircleDotted, IconFileCode } from '@tabler/icons-react';\nimport classes from './FeaturesTitle.module.css';\n\nconst features = [\n  {\n    icon: IconReceiptOff,\n    title: 'Free and open source',\n    description: 'All packages are published under MIT license, you can use Mantine in any project',\n  },\n  {\n    icon: IconFileCode,\n    title: 'TypeScript based',\n    description: 'Build type safe applications, all components and hooks export types',\n  },\n  {\n    icon: IconCircleDotted,\n    title: 'No annoying focus ring',\n    description:\n      'With new :focus-visible selector focus ring will appear only when user navigates with keyboard',\n  },\n  {\n    icon: IconFlame,\n    title: 'Flexible',\n    description:\n      'Customize colors, spacing, shadows, fonts and many other settings with global theme object',\n  },\n];\n\nexport function FeaturesTitle() {\n  const items = features.map((feature) => (\n    <div key={feature.title}>\n      <ThemeIcon\n        size={44}\n        radius=\"md\"\n        variant=\"gradient\"\n        gradient={{ deg: 133, from: 'blue', to: 'cyan' }}\n      >\n        <feature.icon style={{ width: rem(26), height: rem(26) }} stroke={1.5} />\n      </ThemeIcon>\n      <Text fz=\"lg\" mt=\"sm\" fw={500}>\n        {feature.title}\n      </Text>\n      <Text c=\"dimmed\" fz=\"sm\">\n        {feature.description}\n      </Text>\n    </div>\n  ));\n\n  return (\n    <div className={classes.wrapper}>\n      <Grid gutter={80}>\n        <Grid.Col span={{ base: 12, md: 5 }}>\n          <Title className={classes.title} order={2}>\n            A fully featured React components library for your next project\n          </Title>\n          <Text c=\"dimmed\">\n            Build fully functional accessible web applications faster than ever – Mantine includes\n            more than 120 customizable components and hooks to cover you in any situation\n          </Text>\n\n          <Button\n            variant=\"gradient\"\n            gradient={{ deg: 133, from: 'blue', to: 'cyan' }}\n            size=\"lg\"\n            radius=\"md\"\n            mt=\"xl\"\n          >\n            Get started\n          </Button>\n        </Grid.Col>\n        <Grid.Col span={{ base: 12, md: 7 }}>\n          <SimpleGrid cols={{ base: 1, md: 2 }} spacing={30}>\n            {items}\n          </SimpleGrid>\n        </Grid.Col>\n      </Grid>\n    </div>\n  );\n}\n"},{"fileName":"FeaturesTitle.module.css","language":"css","code":".wrapper {\n  padding: calc(var(--mantine-spacing-xl) * 2) var(--mantine-spacing-xl);\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-size: rem(36px);\n  font-weight: 900;\n  line-height: 1.1;\n  margin-bottom: var(--mantine-spacing-md);\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n}\n"}],"attributes":{"title":"Features with title","category":"features","responsive":true,"canvas":{"center":true,"maxWidth":1060}}},{"component":"FloatingLabelInput","slug":"floating-label-input","code":[{"fileName":"FloatingLabelInput.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { TextInput } from '@mantine/core';\nimport classes from './FloatingLabelInput.module.css';\n\nexport function FloatingLabelInput() {\n  const [focused, setFocused] = useState(false);\n  const [value, setValue] = useState('');\n  const floating = value.trim().length !== 0 || focused || undefined;\n\n  return (\n    <TextInput\n      label=\"Floating label\"\n      placeholder=\"OMG, it also has a placeholder\"\n      required\n      classNames={classes}\n      value={value}\n      onChange={(event) => setValue(event.currentTarget.value)}\n      onFocus={() => setFocused(true)}\n      onBlur={() => setFocused(false)}\n      mt=\"md\"\n      autoComplete=\"nope\"\n      data-floating={floating}\n      labelProps={{ 'data-floating': floating }}\n    />\n  );\n}\n"},{"fileName":"FloatingLabelInput.module.css","language":"css","code":".root {\n  position: relative;\n}\n\n.label {\n  position: absolute;\n  z-index: 2;\n  top: rem(7px);\n  left: var(--mantine-spacing-sm);\n  pointer-events: none;\n  color: light-dark(var(--mantine-color-gray-5), var(--mantine-color-dark-3));\n  transition: transform 150ms ease, font-size 150ms ease, color 150ms ease;\n\n  &[data-floating] {\n    transform: translate(calc(var(--mantine-spacing-sm) * -1), rem(-28px));\n    font-size: var(--mantine-font-size-xs);\n    font-weight: 500;\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  }\n}\n\n.required {\n  transition: opacity 150ms ease;\n  opacity: 0;\n\n  [data-floating] & {\n    opacity: 1;\n  }\n}\n\n.input {\n  &::placeholder {\n    transition: color 150ms ease;\n    color: transparent;\n  }\n\n  &[data-floating] {\n    &::placeholder {\n      color: var(--mantine-color-placeholder);\n    }\n  }\n}\n"}],"attributes":{"title":"Input with floating label","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"FooterCentered","slug":"footer-centered","code":[{"fileName":"FooterCentered.tsx","language":"tsx","code":"import { Anchor, Group, ActionIcon, rem } from '@mantine/core';\nimport { IconBrandTwitter, IconBrandYoutube, IconBrandInstagram } from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './FooterCentered.module.css';\n\nconst links = [\n  { link: '#', label: 'Contact' },\n  { link: '#', label: 'Privacy' },\n  { link: '#', label: 'Blog' },\n  { link: '#', label: 'Store' },\n  { link: '#', label: 'Careers' },\n];\n\nexport function FooterCentered() {\n  const items = links.map((link) => (\n    <Anchor\n      c=\"dimmed\"\n      key={link.label}\n      href={link.link}\n      lh={1}\n      onClick={(event) => event.preventDefault()}\n      size=\"sm\"\n    >\n      {link.label}\n    </Anchor>\n  ));\n\n  return (\n    <div className={classes.footer}>\n      <div className={classes.inner}>\n        <MantineLogo size={28} />\n\n        <Group className={classes.links}>{items}</Group>\n\n        <Group gap=\"xs\" justify=\"flex-end\" wrap=\"nowrap\">\n          <ActionIcon size=\"lg\" variant=\"default\" radius=\"xl\">\n            <IconBrandTwitter style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon size=\"lg\" variant=\"default\" radius=\"xl\">\n            <IconBrandYoutube style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon size=\"lg\" variant=\"default\" radius=\"xl\">\n            <IconBrandInstagram style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n        </Group>\n      </div>\n    </div>\n  );\n}\n"},{"fileName":"FooterCentered.module.css","language":"css","code":".footer {\n  margin-top: rem(120px);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n}\n\n.inner {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--mantine-spacing-md) var(--mantine-spacing-md);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column;\n  }\n}\n\n.links {\n  @media (max-width: $mantine-breakpoint-sm) {\n    margin-top: var(--mantine-spacing-lg);\n    margin-bottom: var(--mantine-spacing-sm);\n  }\n}\n"}],"attributes":{"title":"Footer with centered links","category":"footers","responsive":true,"canvas":{"center":false}}},{"component":"FooterLinks","slug":"footer-links","code":[{"fileName":"FooterLinks.tsx","language":"tsx","code":"import { Text, Container, ActionIcon, Group, rem } from '@mantine/core';\nimport { IconBrandTwitter, IconBrandYoutube, IconBrandInstagram } from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './FooterLinks.module.css';\n\nconst data = [\n  {\n    title: 'About',\n    links: [\n      { label: 'Features', link: '#' },\n      { label: 'Pricing', link: '#' },\n      { label: 'Support', link: '#' },\n      { label: 'Forums', link: '#' },\n    ],\n  },\n  {\n    title: 'Project',\n    links: [\n      { label: 'Contribute', link: '#' },\n      { label: 'Media assets', link: '#' },\n      { label: 'Changelog', link: '#' },\n      { label: 'Releases', link: '#' },\n    ],\n  },\n  {\n    title: 'Community',\n    links: [\n      { label: 'Join Discord', link: '#' },\n      { label: 'Follow on Twitter', link: '#' },\n      { label: 'Email newsletter', link: '#' },\n      { label: 'GitHub discussions', link: '#' },\n    ],\n  },\n];\n\nexport function FooterLinks() {\n  const groups = data.map((group) => {\n    const links = group.links.map((link, index) => (\n      <Text<'a'>\n        key={index}\n        className={classes.link}\n        component=\"a\"\n        href={link.link}\n        onClick={(event) => event.preventDefault()}\n      >\n        {link.label}\n      </Text>\n    ));\n\n    return (\n      <div className={classes.wrapper} key={group.title}>\n        <Text className={classes.title}>{group.title}</Text>\n        {links}\n      </div>\n    );\n  });\n\n  return (\n    <footer className={classes.footer}>\n      <Container className={classes.inner}>\n        <div className={classes.logo}>\n          <MantineLogo size={30} />\n          <Text size=\"xs\" c=\"dimmed\" className={classes.description}>\n            Build fully functional accessible web applications faster than ever\n          </Text>\n        </div>\n        <div className={classes.groups}>{groups}</div>\n      </Container>\n      <Container className={classes.afterFooter}>\n        <Text c=\"dimmed\" size=\"sm\">\n          © 2020 mantine.dev. All rights reserved.\n        </Text>\n\n        <Group gap={0} className={classes.social} justify=\"flex-end\" wrap=\"nowrap\">\n          <ActionIcon size=\"lg\" color=\"gray\" variant=\"subtle\">\n            <IconBrandTwitter style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon size=\"lg\" color=\"gray\" variant=\"subtle\">\n            <IconBrandYoutube style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon size=\"lg\" color=\"gray\" variant=\"subtle\">\n            <IconBrandInstagram style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n        </Group>\n      </Container>\n    </footer>\n  );\n}\n"},{"fileName":"FooterLinks.module.css","language":"css","code":".footer {\n  margin-top: rem(120px);\n  padding-top: calc(var(--mantine-spacing-xl) * 2);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 2);\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n}\n\n.logo {\n  max-width: rem(200px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.description {\n  margin-top: rem(5px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    margin-top: var(--mantine-spacing-xs);\n    text-align: center;\n  }\n}\n\n.inner {\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.groups {\n  display: flex;\n  flex-wrap: wrap;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    display: none;\n  }\n}\n\n.wrapper {\n  width: rem(160px);\n}\n\n.link {\n  display: block;\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-1));\n  font-size: var(--mantine-font-size-sm);\n  padding-top: rem(3px);\n  padding-bottom: rem(3px);\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.title {\n  font-size: var(--mantine-font-size-lg);\n  font-weight: 700;\n  font-family: Greycliff CF, var(--mantine-font-family);\n  margin-bottom: calc(var(--mantine-spacing-xs) / 2);\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n}\n\n.afterFooter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: var(--mantine-spacing-xl);\n  padding-top: var(--mantine-spacing-xl);\n  padding-bottom: var(--mantine-spacing-xl);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-4));\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column;\n  }\n}\n\n.social {\n  @media (max-width: $mantine-breakpoint-sm) {\n    margin-top: var(--mantine-spacing-xs);\n  }\n}\n"}],"attributes":{"title":"Footer with links","category":"footers","responsive":true,"canvas":{"center":false}}},{"component":"FooterSimple","slug":"footer-simple","code":[{"fileName":"FooterSimple.tsx","language":"tsx","code":"import { Container, Group, Anchor } from '@mantine/core';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './FooterSimple.module.css';\n\nconst links = [\n  { link: '#', label: 'Contact' },\n  { link: '#', label: 'Privacy' },\n  { link: '#', label: 'Blog' },\n  { link: '#', label: 'Careers' },\n];\n\nexport function FooterSimple() {\n  const items = links.map((link) => (\n    <Anchor<'a'>\n      c=\"dimmed\"\n      key={link.label}\n      href={link.link}\n      onClick={(event) => event.preventDefault()}\n      size=\"sm\"\n    >\n      {link.label}\n    </Anchor>\n  ));\n\n  return (\n    <div className={classes.footer}>\n      <Container className={classes.inner}>\n        <MantineLogo size={28} />\n        <Group className={classes.links}>{items}</Group>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"FooterSimple.module.css","language":"css","code":".footer {\n  margin-top: rem(120px);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n}\n\n.inner {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: var(--mantine-spacing-xl);\n  padding-bottom: var(--mantine-spacing-xl);\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column;\n  }\n}\n\n.links {\n  @media (max-width: $mantine-breakpoint-xs) {\n    margin-top: var(--mantine-spacing-md);\n  }\n}\n"}],"attributes":{"title":"Simple footer","category":"footers","responsive":true,"canvas":{"center":false}}},{"component":"FooterSocial","slug":"footer-social","code":[{"fileName":"FooterSocial.tsx","language":"tsx","code":"import { Container, Group, ActionIcon, rem } from '@mantine/core';\nimport { IconBrandTwitter, IconBrandYoutube, IconBrandInstagram } from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './FooterSocial.module.css';\n\nexport function FooterSocial() {\n  return (\n    <div className={classes.footer}>\n      <Container className={classes.inner}>\n        <MantineLogo size={28} />\n        <Group gap={0} className={classes.links} justify=\"flex-end\" wrap=\"nowrap\">\n          <ActionIcon size=\"lg\" color=\"gray\" variant=\"subtle\">\n            <IconBrandTwitter style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon size=\"lg\" color=\"gray\" variant=\"subtle\">\n            <IconBrandYoutube style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon size=\"lg\" color=\"gray\" variant=\"subtle\">\n            <IconBrandInstagram style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n          </ActionIcon>\n        </Group>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"FooterSocial.module.css","language":"css","code":".footer {\n  margin-top: rem(120px);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-5));\n}\n\n.inner {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: var(--mantine-spacing-xl);\n  padding-bottom: var(--mantine-spacing-xl);\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column;\n  }\n}\n\n.links {\n  @media (max-width: $mantine-breakpoint-xs) {\n    margin-top: var(--mantine-spacing-md);\n  }\n}\n"}],"attributes":{"title":"Footer with social icons","category":"footers","responsive":true,"canvas":{"center":false}}},{"component":"ForgotPassword","slug":"forgot-password","code":[{"fileName":"ForgotPassword.tsx","language":"tsx","code":"import {\n  Paper,\n  Title,\n  Text,\n  TextInput,\n  Button,\n  Container,\n  Group,\n  Anchor,\n  Center,\n  Box,\n  rem,\n} from '@mantine/core';\nimport { IconArrowLeft } from '@tabler/icons-react';\nimport classes from './ForgotPassword.module.css';\n\nexport function ForgotPassword() {\n  return (\n    <Container size={460} my={30}>\n      <Title className={classes.title} ta=\"center\">\n        Forgot your password?\n      </Title>\n      <Text c=\"dimmed\" fz=\"sm\" ta=\"center\">\n        Enter your email to get a reset link\n      </Text>\n\n      <Paper withBorder shadow=\"md\" p={30} radius=\"md\" mt=\"xl\">\n        <TextInput label=\"Your email\" placeholder=\"me@mantine.dev\" required />\n        <Group justify=\"space-between\" mt=\"lg\" className={classes.controls}>\n          <Anchor c=\"dimmed\" size=\"sm\" className={classes.control}>\n            <Center inline>\n              <IconArrowLeft style={{ width: rem(12), height: rem(12) }} stroke={1.5} />\n              <Box ml={5}>Back to the login page</Box>\n            </Center>\n          </Anchor>\n          <Button className={classes.control}>Reset password</Button>\n        </Group>\n      </Paper>\n    </Container>\n  );\n}\n"},{"fileName":"ForgotPassword.module.css","language":"css","code":".title {\n  font-size: rem(26px);\n  font-weight: 900;\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n\n.controls {\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column-reverse;\n  }\n}\n\n.control {\n  @media (max-width: $mantine-breakpoint-xs) {\n    width: 100%;\n    text-align: center;\n  }\n}\n"}],"attributes":{"title":"Forgot password","category":"authentication","author":"rtivital","withColor":true,"dimmed":true,"responsive":true,"dependencies":["/core/container/","/core/title/","/core/anchor/","/core/button/","/core/text-input/","/core/paper/","@tabler/icons-react"],"canvas":{"center":false}}},{"component":"ForgotPasswordInput","slug":"forgot-password-input","code":[{"fileName":"ForgotPasswordInput.tsx","language":"tsx","code":"import { PasswordInput, Text, Group, Anchor } from '@mantine/core';\n\nexport function ForgotPasswordInput() {\n  return (\n    <>\n      <Group justify=\"space-between\" mb={5}>\n        <Text component=\"label\" htmlFor=\"your-password\" size=\"sm\" fw={500}>\n          Your password\n        </Text>\n\n        <Anchor href=\"#\" onClick={(event) => event.preventDefault()} pt={2} fw={500} fz=\"xs\">\n          Forgot your password?\n        </Anchor>\n      </Group>\n      <PasswordInput placeholder=\"Your password\" id=\"your-password\" />\n    </>\n  );\n}\n"}],"attributes":{"title":"Forgot password on input label","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"GetInTouch","slug":"get-in-touch","code":[{"fileName":"GetInTouch.tsx","language":"tsx","code":"import { Paper, Text, TextInput, Textarea, Button, Group, SimpleGrid } from '@mantine/core';\nimport { ContactIconsList } from './ContactIcons';\nimport bg from './bg.svg';\nimport classes from './GetInTouch.module.css';\n\nexport function GetInTouch() {\n  return (\n    <Paper shadow=\"md\" radius=\"lg\">\n      <div className={classes.wrapper}>\n        <div className={classes.contacts} style={{ backgroundImage: `url(${bg.src})` }}>\n          <Text fz=\"lg\" fw={700} className={classes.title} c=\"#fff\">\n            Contact information\n          </Text>\n\n          <ContactIconsList />\n        </div>\n\n        <form className={classes.form} onSubmit={(event) => event.preventDefault()}>\n          <Text fz=\"lg\" fw={700} className={classes.title}>\n            Get in touch\n          </Text>\n\n          <div className={classes.fields}>\n            <SimpleGrid cols={{ base: 1, sm: 2 }}>\n              <TextInput label=\"Your name\" placeholder=\"Your name\" />\n              <TextInput label=\"Your email\" placeholder=\"hello@mantine.dev\" required />\n            </SimpleGrid>\n\n            <TextInput mt=\"md\" label=\"Subject\" placeholder=\"Subject\" required />\n\n            <Textarea\n              mt=\"md\"\n              label=\"Your message\"\n              placeholder=\"Please include all relevant information\"\n              minRows={3}\n            />\n\n            <Group justify=\"flex-end\" mt=\"md\">\n              <Button type=\"submit\" className={classes.control}>\n                Send message\n              </Button>\n            </Group>\n          </div>\n        </form>\n      </div>\n    </Paper>\n  );\n}\n"},{"fileName":"ContactIcons.module.css","language":"css","code":".wrapper {\n  display: flex;\n  align-items: center;\n  color: var(--mantine-color-white);\n}\n\n.icon {\n  margin-right: var(--mantine-spacing-md);\n  background-color: transparent;\n}\n\n.title {\n  color: var(--mantine-color-blue-0);\n}\n\n.description {\n  color: var(--mantine-color-white);\n}\n"},{"fileName":"ContactIcons.tsx","language":"tsx","code":"import { Text, Box, Stack, rem } from '@mantine/core';\nimport { IconSun, IconPhone, IconMapPin, IconAt } from '@tabler/icons-react';\nimport classes from './ContactIcons.module.css';\n\ninterface ContactIconProps extends Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  icon: typeof IconSun;\n  title: React.ReactNode;\n  description: React.ReactNode;\n}\n\nfunction ContactIcon({ icon: Icon, title, description, ...others }: ContactIconProps) {\n  return (\n    <div className={classes.wrapper} {...others}>\n      <Box mr=\"md\">\n        <Icon style={{ width: rem(24), height: rem(24) }} />\n      </Box>\n\n      <div>\n        <Text size=\"xs\" className={classes.title}>\n          {title}\n        </Text>\n        <Text className={classes.description}>{description}</Text>\n      </div>\n    </div>\n  );\n}\n\nconst MOCKDATA = [\n  { title: 'Email', description: 'hello@mantine.dev', icon: IconAt },\n  { title: 'Phone', description: '+49 (800) 335 35 35', icon: IconPhone },\n  { title: 'Address', description: '844 Morris Park avenue', icon: IconMapPin },\n  { title: 'Working hours', description: '8 a.m. – 11 p.m.', icon: IconSun },\n];\n\nexport function ContactIconsList() {\n  const items = MOCKDATA.map((item, index) => <ContactIcon key={index} {...item} />);\n  return <Stack>{items}</Stack>;\n}\n"},{"fileName":"GetInTouch.module.css","language":"css","code":".wrapper {\n  display: flex;\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n  border-radius: var(--mantine-radius-lg);\n  padding: rem(4px);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-8));\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column;\n  }\n}\n\n.form {\n  flex: 1;\n  padding: var(--mantine-spacing-xl);\n  padding-left: calc(var(--mantine-spacing-xl) * 2);\n  border-left: 0;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding: var(--mantine-spacing-md);\n    padding-left: var(--mantine-spacing-md);\n  }\n}\n\n.fields {\n  margin-top: rem(-12px);\n}\n\n.fieldInput {\n  flex: 1;\n\n  & + & {\n    margin-left: var(--mantine-spacing-md);\n\n    @media (max-width: $mantine-breakpoint-sm) {\n      margin-left: 0;\n      margin-top: var(--mantine-spacing-md);\n    }\n  }\n}\n\n.fieldsGroup {\n  display: flex;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column;\n  }\n}\n\n.contacts {\n  box-sizing: border-box;\n  position: relative;\n  border-radius: var(--mantine-radius-lg);\n  background-size: cover;\n  background-position: center;\n  border: rem(1px) solid transparent;\n  padding: var(--mantine-spacing-xl);\n  flex: 0 0 rem(280px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    margin-bottom: var(--mantine-spacing-sm);\n    padding-left: var(--mantine-spacing-md);\n  }\n}\n\n.title {\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n  font-family: Greycliff CF, var(--mantine-font-family);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    margin-bottom: var(--mantine-spacing-xl);\n  }\n}\n\n.control {\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex: 1;\n  }\n}\n"}],"attributes":{"title":"Get in touch form","category":"contact","responsive":true,"canvas":{"center":true,"maxWidth":800}}},{"component":"GetInTouchSimple","slug":"get-in-touch-simple","code":[{"fileName":"GetInTouchSimple.tsx","language":"tsx","code":"import { TextInput, Textarea, SimpleGrid, Group, Title, Button } from '@mantine/core';\nimport { useForm } from '@mantine/form';\n\nexport function GetInTouchSimple() {\n  const form = useForm({\n    initialValues: {\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n    },\n    validate: {\n      name: (value) => value.trim().length < 2,\n      email: (value) => !/^\\S+@\\S+$/.test(value),\n      subject: (value) => value.trim().length === 0,\n    },\n  });\n\n  return (\n    <form onSubmit={form.onSubmit(() => {})}>\n      <Title\n        order={2}\n        size=\"h1\"\n        style={{ fontFamily: 'Greycliff CF, var(--mantine-font-family)' }}\n        fw={900}\n        ta=\"center\"\n      >\n        Get in touch\n      </Title>\n\n      <SimpleGrid cols={{ base: 1, sm: 2 }} mt=\"xl\">\n        <TextInput\n          label=\"Name\"\n          placeholder=\"Your name\"\n          name=\"name\"\n          variant=\"filled\"\n          {...form.getInputProps('name')}\n        />\n        <TextInput\n          label=\"Email\"\n          placeholder=\"Your email\"\n          name=\"email\"\n          variant=\"filled\"\n          {...form.getInputProps('email')}\n        />\n      </SimpleGrid>\n\n      <TextInput\n        label=\"Subject\"\n        placeholder=\"Subject\"\n        mt=\"md\"\n        name=\"subject\"\n        variant=\"filled\"\n        {...form.getInputProps('subject')}\n      />\n      <Textarea\n        mt=\"md\"\n        label=\"Message\"\n        placeholder=\"Your message\"\n        maxRows={10}\n        minRows={5}\n        autosize\n        name=\"message\"\n        variant=\"filled\"\n        {...form.getInputProps('message')}\n      />\n\n      <Group justify=\"center\" mt=\"xl\">\n        <Button type=\"submit\" size=\"md\">\n          Send message\n        </Button>\n      </Group>\n    </form>\n  );\n}\n"}],"attributes":{"title":"Get in touch form","category":"contact","withColor":true,"responsive":true,"canvas":{"center":true,"maxWidth":620}}},{"component":"GradientSegmentedControl","slug":"gradient-segmented-control","code":[{"fileName":"GradientSegmentedControl.tsx","language":"tsx","code":"import { SegmentedControl } from '@mantine/core';\nimport classes from './GradientSegmentedControl.module.css';\n\nexport function GradientSegmentedControl() {\n  return (\n    <SegmentedControl\n      radius=\"xl\"\n      size=\"md\"\n      data={['All', 'AI/ML', 'C++', 'Rust', 'TypeScript']}\n      classNames={classes}\n    />\n  );\n}\n"},{"fileName":"GradientSegmentedControl.module.css","language":"css","code":".root {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-6));\n  box-shadow: var(--mantine-shadow-md);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-4));\n}\n\n.indicator {\n  background-image: linear-gradient(\n    to right,\n    var(--mantine-color-pink-filled),\n    var(--mantine-color-orange-filled)\n  );\n}\n\n.control {\n  &::before {\n    display: none;\n  }\n}\n\n.label {\n  &,\n  &:hover {\n    &[data-active] {\n      color: var(--mantine-color-white);\n    }\n  }\n}\n"}],"attributes":{"title":"Gradient segmented control","category":"inputs","changelog":"september-2022","canvas":{"center":true,"maxWidth":420}}},{"component":"GridAsymmetrical","slug":"grid-asymmetrical","code":[{"fileName":"GridAsymmetrical.tsx","language":"tsx","code":"import { Grid, Skeleton, Container } from '@mantine/core';\n\nconst child = <Skeleton height={140} radius=\"md\" animate={false} />;\n\nexport function GridAsymmetrical() {\n  return (\n    <Container my=\"md\">\n      <Grid>\n        <Grid.Col span={{ base: 12, xs: 4 }}>{child}</Grid.Col>\n        <Grid.Col span={{ base: 12, xs: 8 }}>{child}</Grid.Col>\n        <Grid.Col span={{ base: 12, xs: 8 }}>{child}</Grid.Col>\n        <Grid.Col span={{ base: 12, xs: 4 }}>{child}</Grid.Col>\n        <Grid.Col span={{ base: 12, xs: 3 }}>{child}</Grid.Col>\n        <Grid.Col span={{ base: 12, xs: 3 }}>{child}</Grid.Col>\n        <Grid.Col span={{ base: 12, xs: 6 }}>{child}</Grid.Col>\n      </Grid>\n    </Container>\n  );\n}\n"}],"attributes":{"title":"Grid with asymmetrical columns","category":"grids","responsive":true,"canvas":{"center":false}}},{"component":"HeaderMegaMenu","slug":"header-mega-menu","code":[{"fileName":"HeaderMegaMenu.tsx","language":"tsx","code":"import {\n  HoverCard,\n  Group,\n  Button,\n  UnstyledButton,\n  Text,\n  SimpleGrid,\n  ThemeIcon,\n  Anchor,\n  Divider,\n  Center,\n  Box,\n  Burger,\n  Drawer,\n  Collapse,\n  ScrollArea,\n  rem,\n  useMantineTheme,\n} from '@mantine/core';\nimport { MantineLogo } from '@mantine/ds';\nimport { useDisclosure } from '@mantine/hooks';\nimport {\n  IconNotification,\n  IconCode,\n  IconBook,\n  IconChartPie3,\n  IconFingerprint,\n  IconCoin,\n  IconChevronDown,\n} from '@tabler/icons-react';\nimport classes from './HeaderMegaMenu.module.css';\n\nconst mockdata = [\n  {\n    icon: IconCode,\n    title: 'Open source',\n    description: 'This Pokémon’s cry is very loud and distracting',\n  },\n  {\n    icon: IconCoin,\n    title: 'Free for everyone',\n    description: 'The fluid of Smeargle’s tail secretions changes',\n  },\n  {\n    icon: IconBook,\n    title: 'Documentation',\n    description: 'Yanma is capable of seeing 360 degrees without',\n  },\n  {\n    icon: IconFingerprint,\n    title: 'Security',\n    description: 'The shell’s rounded shape and the grooves on its.',\n  },\n  {\n    icon: IconChartPie3,\n    title: 'Analytics',\n    description: 'This Pokémon uses its flying ability to quickly chase',\n  },\n  {\n    icon: IconNotification,\n    title: 'Notifications',\n    description: 'Combusken battles with the intensely hot flames it spews',\n  },\n];\n\nexport function HeaderMegaMenu() {\n  const [drawerOpened, { toggle: toggleDrawer, close: closeDrawer }] = useDisclosure(false);\n  const [linksOpened, { toggle: toggleLinks }] = useDisclosure(false);\n  const theme = useMantineTheme();\n\n  const links = mockdata.map((item) => (\n    <UnstyledButton className={classes.subLink} key={item.title}>\n      <Group wrap=\"nowrap\" align=\"flex-start\">\n        <ThemeIcon size={34} variant=\"default\" radius=\"md\">\n          <item.icon style={{ width: rem(22), height: rem(22) }} color={theme.colors.blue[6]} />\n        </ThemeIcon>\n        <div>\n          <Text size=\"sm\" fw={500}>\n            {item.title}\n          </Text>\n          <Text size=\"xs\" c=\"dimmed\">\n            {item.description}\n          </Text>\n        </div>\n      </Group>\n    </UnstyledButton>\n  ));\n\n  return (\n    <Box pb={120}>\n      <header className={classes.header}>\n        <Group justify=\"space-between\" h=\"100%\">\n          <MantineLogo size={30} />\n\n          <Group h=\"100%\" gap={0} visibleFrom=\"sm\">\n            <a href=\"#\" className={classes.link}>\n              Home\n            </a>\n            <HoverCard width={600} position=\"bottom\" radius=\"md\" shadow=\"md\" withinPortal>\n              <HoverCard.Target>\n                <a href=\"#\" className={classes.link}>\n                  <Center inline>\n                    <Box component=\"span\" mr={5}>\n                      Features\n                    </Box>\n                    <IconChevronDown\n                      style={{ width: rem(16), height: rem(16) }}\n                      color={theme.colors.blue[6]}\n                    />\n                  </Center>\n                </a>\n              </HoverCard.Target>\n\n              <HoverCard.Dropdown style={{ overflow: 'hidden' }}>\n                <Group justify=\"space-between\" px=\"md\">\n                  <Text fw={500}>Features</Text>\n                  <Anchor href=\"#\" fz=\"xs\">\n                    View all\n                  </Anchor>\n                </Group>\n\n                <Divider my=\"sm\" />\n\n                <SimpleGrid cols={2} spacing={0}>\n                  {links}\n                </SimpleGrid>\n\n                <div className={classes.dropdownFooter}>\n                  <Group justify=\"space-between\">\n                    <div>\n                      <Text fw={500} fz=\"sm\">\n                        Get started\n                      </Text>\n                      <Text size=\"xs\" c=\"dimmed\">\n                        Their food sources have decreased, and their numbers\n                      </Text>\n                    </div>\n                    <Button variant=\"default\">Get started</Button>\n                  </Group>\n                </div>\n              </HoverCard.Dropdown>\n            </HoverCard>\n            <a href=\"#\" className={classes.link}>\n              Learn\n            </a>\n            <a href=\"#\" className={classes.link}>\n              Academy\n            </a>\n          </Group>\n\n          <Group visibleFrom=\"sm\">\n            <Button variant=\"default\">Log in</Button>\n            <Button>Sign up</Button>\n          </Group>\n\n          <Burger opened={drawerOpened} onClick={toggleDrawer} hiddenFrom=\"sm\" />\n        </Group>\n      </header>\n\n      <Drawer\n        opened={drawerOpened}\n        onClose={closeDrawer}\n        size=\"100%\"\n        padding=\"md\"\n        title=\"Navigation\"\n        hiddenFrom=\"sm\"\n        zIndex={1000000}\n      >\n        <ScrollArea h={`calc(100vh - ${rem(80)})`} mx=\"-md\">\n          <Divider my=\"sm\" />\n\n          <a href=\"#\" className={classes.link}>\n            Home\n          </a>\n          <UnstyledButton className={classes.link} onClick={toggleLinks}>\n            <Center inline>\n              <Box component=\"span\" mr={5}>\n                Features\n              </Box>\n              <IconChevronDown\n                style={{ width: rem(16), height: rem(16) }}\n                color={theme.colors.blue[6]}\n              />\n            </Center>\n          </UnstyledButton>\n          <Collapse in={linksOpened}>{links}</Collapse>\n          <a href=\"#\" className={classes.link}>\n            Learn\n          </a>\n          <a href=\"#\" className={classes.link}>\n            Academy\n          </a>\n\n          <Divider my=\"sm\" />\n\n          <Group justify=\"center\" grow pb=\"xl\" px=\"md\">\n            <Button variant=\"default\">Log in</Button>\n            <Button>Sign up</Button>\n          </Group>\n        </ScrollArea>\n      </Drawer>\n    </Box>\n  );\n}\n"},{"fileName":"HeaderMegaMenu.module.css","language":"css","code":".header {\n  height: rem(60px);\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.link {\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n  text-decoration: none;\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  font-weight: 500;\n  font-size: var(--mantine-font-size-sm);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    height: rem(42px);\n    width: 100%;\n  }\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.subLink {\n  width: 100%;\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-md);\n  border-radius: var(--mantine-radius-md);\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-7));\n  }\n}\n\n.dropdownFooter {\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-7));\n  margin: calc(var(--mantine-spacing-md) * -1);\n  margin-top: var(--mantine-spacing-sm);\n  padding: var(--mantine-spacing-md) calc(var(--mantine-spacing-md) * 2);\n  padding-bottom: var(--mantine-spacing-xl);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-5));\n}\n"}],"attributes":{"title":"Header with mega menu","category":"headers","responsive":true,"changelog":"september-2022","canvas":{"center":false}}},{"component":"HeaderMenu","slug":"header-menu","code":[{"fileName":"HeaderMenu.tsx","language":"tsx","code":"import { Menu, Group, Center, Burger, Container } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { IconChevronDown } from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './HeaderMenu.module.css';\n\nconst links = [\n  { link: '/about', label: 'Features' },\n  {\n    link: '#1',\n    label: 'Learn',\n    links: [\n      { link: '/docs', label: 'Documentation' },\n      { link: '/resources', label: 'Resources' },\n      { link: '/community', label: 'Community' },\n      { link: '/blog', label: 'Blog' },\n    ],\n  },\n  { link: '/about', label: 'About' },\n  { link: '/pricing', label: 'Pricing' },\n  {\n    link: '#2',\n    label: 'Support',\n    links: [\n      { link: '/faq', label: 'FAQ' },\n      { link: '/demo', label: 'Book a demo' },\n      { link: '/forums', label: 'Forums' },\n    ],\n  },\n];\n\nexport function HeaderMenu() {\n  const [opened, { toggle }] = useDisclosure(false);\n\n  const items = links.map((link) => {\n    const menuItems = link.links?.map((item) => (\n      <Menu.Item key={item.link}>{item.label}</Menu.Item>\n    ));\n\n    if (menuItems) {\n      return (\n        <Menu key={link.label} trigger=\"hover\" transitionProps={{ exitDuration: 0 }} withinPortal>\n          <Menu.Target>\n            <a\n              href={link.link}\n              className={classes.link}\n              onClick={(event) => event.preventDefault()}\n            >\n              <Center>\n                <span className={classes.linkLabel}>{link.label}</span>\n                <IconChevronDown size=\"0.9rem\" stroke={1.5} />\n              </Center>\n            </a>\n          </Menu.Target>\n          <Menu.Dropdown>{menuItems}</Menu.Dropdown>\n        </Menu>\n      );\n    }\n\n    return (\n      <a\n        key={link.label}\n        href={link.link}\n        className={classes.link}\n        onClick={(event) => event.preventDefault()}\n      >\n        {link.label}\n      </a>\n    );\n  });\n\n  return (\n    <header className={classes.header}>\n      <Container size=\"md\">\n        <div className={classes.inner}>\n          <MantineLogo size={28} />\n          <Group gap={5} visibleFrom=\"sm\">\n            {items}\n          </Group>\n          <Burger opened={opened} onClick={toggle} size=\"sm\" hiddenFrom=\"sm\" />\n        </div>\n      </Container>\n    </header>\n  );\n}\n"},{"fileName":"HeaderMenu.module.css","language":"css","code":".header {\n  height: rem(56px);\n  margin-bottom: rem(120px);\n  background-color: var(--mantine-color-body);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.inner {\n  height: rem(56px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.link {\n  display: block;\n  line-height: 1;\n  padding: rem(8px) rem(12px);\n  border-radius: var(--mantine-radius-sm);\n  text-decoration: none;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  font-size: var(--mantine-font-size-sm);\n  font-weight: 500;\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.linkLabel {\n  margin-right: rem(5px);\n}\n"}],"attributes":{"title":"Header with menus","category":"headers","responsive":true,"canvas":{"center":false}}},{"component":"HeaderSearch","slug":"header-search","code":[{"fileName":"HeaderSearch.tsx","language":"tsx","code":"import { Autocomplete, Group, Burger, rem } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { IconSearch } from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './HeaderSearch.module.css';\n\nconst links = [\n  { link: '/about', label: 'Features' },\n  { link: '/pricing', label: 'Pricing' },\n  { link: '/learn', label: 'Learn' },\n  { link: '/community', label: 'Community' },\n];\n\nexport function HeaderSearch() {\n  const [opened, { toggle }] = useDisclosure(false);\n\n  const items = links.map((link) => (\n    <a\n      key={link.label}\n      href={link.link}\n      className={classes.link}\n      onClick={(event) => event.preventDefault()}\n    >\n      {link.label}\n    </a>\n  ));\n\n  return (\n    <header className={classes.header}>\n      <div className={classes.inner}>\n        <Group>\n          <Burger opened={opened} onClick={toggle} size=\"sm\" hiddenFrom=\"sm\" />\n          <MantineLogo size={28} />\n        </Group>\n\n        <Group>\n          <Group ml={50} gap={5} className={classes.links} visibleFrom=\"sm\">\n            {items}\n          </Group>\n          <Autocomplete\n            className={classes.search}\n            placeholder=\"Search\"\n            leftSection={<IconSearch style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n            data={['React', 'Angular', 'Vue', 'Next.js', 'Riot.js', 'Svelte', 'Blitz.js']}\n            visibleFrom=\"xs\"\n          />\n        </Group>\n      </div>\n    </header>\n  );\n}\n"},{"fileName":"HeaderSearch.module.css","language":"css","code":".header {\n  height: rem(56px);\n  margin-bottom: rem(120px);\n  background-color: var(--mantine-color-body);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n}\n\n.inner {\n  height: rem(56px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.link {\n  display: block;\n  line-height: 1;\n  padding: rem(8px) rem(12px);\n  border-radius: var(--mantine-radius-sm);\n  text-decoration: none;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  font-size: var(--mantine-font-size-sm);\n  font-weight: 500;\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n"}],"attributes":{"title":"Header with search","category":"headers","responsive":true,"canvas":{"center":false}}},{"component":"HeaderSimple","slug":"header-simple","code":[{"fileName":"HeaderSimple.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Container, Group, Burger } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './HeaderSimple.module.css';\n\nconst links = [\n  { link: '/about', label: 'Features' },\n  { link: '/pricing', label: 'Pricing' },\n  { link: '/learn', label: 'Learn' },\n  { link: '/community', label: 'Community' },\n];\n\nexport function HeaderSimple() {\n  const [opened, { toggle }] = useDisclosure(false);\n  const [active, setActive] = useState(links[0].link);\n\n  const items = links.map((link) => (\n    <a\n      key={link.label}\n      href={link.link}\n      className={classes.link}\n      data-active={active === link.link || undefined}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(link.link);\n      }}\n    >\n      {link.label}\n    </a>\n  ));\n\n  return (\n    <header className={classes.header}>\n      <Container size=\"md\" className={classes.inner}>\n        <MantineLogo size={28} />\n        <Group gap={5} visibleFrom=\"xs\">\n          {items}\n        </Group>\n\n        <Burger opened={opened} onClick={toggle} hiddenFrom=\"xs\" size=\"sm\" />\n      </Container>\n    </header>\n  );\n}\n"},{"fileName":"HeaderSimple.module.css","language":"css","code":".header {\n  height: rem(56px);\n  margin-bottom: rem(120px);\n  background-color: var(--mantine-color-body);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.inner {\n  height: rem(56px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.link {\n  display: block;\n  line-height: 1;\n  padding: rem(8px) rem(12px);\n  border-radius: var(--mantine-radius-sm);\n  text-decoration: none;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  font-size: var(--mantine-font-size-sm);\n  font-weight: 500;\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n\n  [data-mantine-color-scheme] &[data-active] {\n    background-color: var(--mantine-color-blue-filled);\n    color: var(--mantine-color-white);\n  }\n}\n"}],"attributes":{"title":"Simple header","category":"headers","responsive":true,"canvas":{"center":false}}},{"component":"HeaderTabs","slug":"header-tabs","code":[{"fileName":"HeaderTabs.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { useState } from 'react';\nimport {\n  Container,\n  Avatar,\n  UnstyledButton,\n  Group,\n  Text,\n  Menu,\n  Tabs,\n  Burger,\n  rem,\n  useMantineTheme,\n} from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport {\n  IconLogout,\n  IconHeart,\n  IconStar,\n  IconMessage,\n  IconSettings,\n  IconPlayerPause,\n  IconTrash,\n  IconSwitchHorizontal,\n  IconChevronDown,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './HeaderTabs.module.css';\n\nconst user = {\n  name: 'Jane Spoonfighter',\n  email: 'janspoon@fighter.dev',\n  image:\n    'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80',\n};\n\nconst tabs = [\n  'Home',\n  'Orders',\n  'Education',\n  'Community',\n  'Forums',\n  'Support',\n  'Account',\n  'Helpdesk',\n];\n\nexport function HeaderTabs() {\n  const theme = useMantineTheme();\n  const [opened, { toggle }] = useDisclosure(false);\n  const [userMenuOpened, setUserMenuOpened] = useState(false);\n\n  const items = tabs.map((tab) => (\n    <Tabs.Tab value={tab} key={tab}>\n      {tab}\n    </Tabs.Tab>\n  ));\n\n  return (\n    <div className={classes.header}>\n      <Container className={classes.mainSection} size=\"md\">\n        <Group justify=\"space-between\">\n          <MantineLogo size={28} />\n\n          <Burger opened={opened} onClick={toggle} hiddenFrom=\"xs\" size=\"sm\" />\n\n          <Menu\n            width={260}\n            position=\"bottom-end\"\n            transitionProps={{ transition: 'pop-top-right' }}\n            onClose={() => setUserMenuOpened(false)}\n            onOpen={() => setUserMenuOpened(true)}\n            withinPortal\n          >\n            <Menu.Target>\n              <UnstyledButton\n                className={cx(classes.user, { [classes.userActive]: userMenuOpened })}\n              >\n                <Group gap={7}>\n                  <Avatar src={user.image} alt={user.name} radius=\"xl\" size={20} />\n                  <Text fw={500} size=\"sm\" lh={1} mr={3}>\n                    {user.name}\n                  </Text>\n                  <IconChevronDown style={{ width: rem(12), height: rem(12) }} stroke={1.5} />\n                </Group>\n              </UnstyledButton>\n            </Menu.Target>\n            <Menu.Dropdown>\n              <Menu.Item\n                leftSection={\n                  <IconHeart\n                    style={{ width: rem(16), height: rem(16) }}\n                    color={theme.colors.red[6]}\n                    stroke={1.5}\n                  />\n                }\n              >\n                Liked posts\n              </Menu.Item>\n              <Menu.Item\n                leftSection={\n                  <IconStar\n                    style={{ width: rem(16), height: rem(16) }}\n                    color={theme.colors.yellow[6]}\n                    stroke={1.5}\n                  />\n                }\n              >\n                Saved posts\n              </Menu.Item>\n              <Menu.Item\n                leftSection={\n                  <IconMessage\n                    style={{ width: rem(16), height: rem(16) }}\n                    color={theme.colors.blue[6]}\n                    stroke={1.5}\n                  />\n                }\n              >\n                Your comments\n              </Menu.Item>\n\n              <Menu.Label>Settings</Menu.Label>\n              <Menu.Item\n                leftSection={\n                  <IconSettings style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n                }\n              >\n                Account settings\n              </Menu.Item>\n              <Menu.Item\n                leftSection={\n                  <IconSwitchHorizontal style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n                }\n              >\n                Change account\n              </Menu.Item>\n              <Menu.Item\n                leftSection={\n                  <IconLogout style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n                }\n              >\n                Logout\n              </Menu.Item>\n\n              <Menu.Divider />\n\n              <Menu.Label>Danger zone</Menu.Label>\n              <Menu.Item\n                leftSection={\n                  <IconPlayerPause style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n                }\n              >\n                Pause subscription\n              </Menu.Item>\n              <Menu.Item\n                color=\"red\"\n                leftSection={<IconTrash style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n              >\n                Delete account\n              </Menu.Item>\n            </Menu.Dropdown>\n          </Menu>\n        </Group>\n      </Container>\n      <Container size=\"md\">\n        <Tabs\n          defaultValue=\"Home\"\n          variant=\"outline\"\n          visibleFrom=\"sm\"\n          classNames={{\n            root: classes.tabs,\n            list: classes.tabsList,\n            tab: classes.tab,\n          }}\n        >\n          <Tabs.List>{items}</Tabs.List>\n        </Tabs>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"HeaderTabs.module.css","language":"css","code":".header {\n  padding-top: var(--mantine-spacing-sm);\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-2), transparent);\n  margin-bottom: rem(120px);\n}\n\n.mainSection {\n  padding-bottom: var(--mantine-spacing-sm);\n}\n\n.user {\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-dark-0));\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  border-radius: var(--mantine-radius-sm);\n  transition: background-color 100ms ease;\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n  }\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    display: none;\n  }\n}\n\n.userActive {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n}\n\n.tabsList {\n  &::before {\n    display: none;\n  }\n}\n\n.tab {\n  font-weight: 500;\n  height: rem(38);\n  background-color: transparent;\n  position: relative;\n  bottom: -1px;\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-5));\n  }\n\n  &[data-active] {\n    background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-7));\n    border-color: light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-7));\n    border-bottom-color: transparent;\n  }\n}\n"}],"attributes":{"title":"Header with tabs","category":"headers","responsive":true,"canvas":{"center":false}}},{"component":"HeroBullets","slug":"hero-bullets","code":[{"fileName":"HeroBullets.tsx","language":"tsx","code":"import { Image, Container, Title, Button, Group, Text, List, ThemeIcon, rem } from '@mantine/core';\nimport { IconCheck } from '@tabler/icons-react';\nimport image from './image.svg';\nimport classes from './HeroBullets.module.css';\n\nexport function HeroBullets() {\n  return (\n    <Container size=\"md\">\n      <div className={classes.inner}>\n        <div className={classes.content}>\n          <Title className={classes.title}>\n            A <span className={classes.highlight}>modern</span> React <br /> components library\n          </Title>\n          <Text c=\"dimmed\" mt=\"md\">\n            Build fully functional accessible web applications faster than ever – Mantine includes\n            more than 120 customizable components and hooks to cover you in any situation\n          </Text>\n\n          <List\n            mt={30}\n            spacing=\"sm\"\n            size=\"sm\"\n            icon={\n              <ThemeIcon size={20} radius=\"xl\">\n                <IconCheck style={{ width: rem(12), height: rem(12) }} stroke={1.5} />\n              </ThemeIcon>\n            }\n          >\n            <List.Item>\n              <b>TypeScript based</b> – build type safe applications, all components and hooks\n              export types\n            </List.Item>\n            <List.Item>\n              <b>Free and open source</b> – all packages have MIT license, you can use Mantine in\n              any project\n            </List.Item>\n            <List.Item>\n              <b>No annoying focus ring</b> – focus ring will appear only when user navigates with\n              keyboard\n            </List.Item>\n          </List>\n\n          <Group mt={30}>\n            <Button radius=\"xl\" size=\"md\" className={classes.control}>\n              Get started\n            </Button>\n            <Button variant=\"default\" radius=\"xl\" size=\"md\" className={classes.control}>\n              Source code\n            </Button>\n          </Group>\n        </div>\n        <Image src={image.src} className={classes.image} />\n      </div>\n    </Container>\n  );\n}\n"},{"fileName":"HeroBullets.module.css","language":"css","code":".inner {\n  display: flex;\n  justify-content: space-between;\n  padding-top: calc(var(--mantine-spacing-xl) * 4);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 4);\n}\n\n.content {\n  max-width: rem(480px);\n  margin-right: calc(var(--mantine-spacing-xl) * 3);\n\n  @media (max-width: $mantine-breakpoint-md) {\n    max-width: 100%;\n    margin-right: 0;\n  }\n}\n\n.title {\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-size: rem(44px);\n  line-height: 1.2;\n  font-weight: 900;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    font-size: rem(28px);\n  }\n}\n\n.control {\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex: 1;\n  }\n}\n\n.image {\n  width: rem(376px);\n  height: rem(356px);\n\n  @media (max-width: $mantine-breakpoint-md) {\n    display: none;\n  }\n}\n\n.highlight {\n  position: relative;\n  background-color: var(--mantine-color-blue-light);\n  border-radius: var(--mantine-radius-sm);\n  padding: rem(4px) rem(12px);\n}\n"}],"attributes":{"title":"Hero with bullets","category":"hero","responsive":true,"canvas":{"center":false}}},{"component":"HeroContentLeft","slug":"hero-content-left","code":[{"fileName":"HeroContentLeft.tsx","language":"tsx","code":"import { Overlay, Container, Title, Button, Text } from '@mantine/core';\nimport classes from './HeroContentLeft.module.css';\n\nexport function HeroContentLeft() {\n  return (\n    <div className={classes.hero}>\n      <Overlay\n        gradient=\"linear-gradient(180deg, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, .65) 40%)\"\n        opacity={1}\n        zIndex={0}\n      />\n      <Container className={classes.container} size=\"md\">\n        <Title className={classes.title}>A fully featured React components library</Title>\n        <Text className={classes.description} size=\"xl\" mt=\"xl\">\n          Build fully functional accessible web applications faster than ever – Mantine includes\n          more than 120 customizable components and hooks to cover you in any situation\n        </Text>\n\n        <Button variant=\"gradient\" size=\"xl\" radius=\"xl\" className={classes.control}>\n          Get started\n        </Button>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"HeroContentLeft.module.css","language":"css","code":"/* const useStyles = createStyles((theme) => ({\n  hero: {\n    position: 'relative',\n    backgroundImage:\n      'url(https://images.unsplash.com/photo-1519389950473-47ba0277781c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80)',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n\n  container: {\n    height: rem(700),\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-start',\n    paddingBottom: `calc(${theme.spacing.xl} * 6)`,\n    zIndex: 1,\n    position: 'relative',\n\n    [theme.fn.smallerThan('sm')]: {\n      height: rem(500),\n      paddingBottom: `calc(${theme.spacing.xl} * 3)`,\n    },\n  },\n\n  title: {\n    color: theme.white,\n    fontSize: rem(60),\n    fontWeight: 900,\n    lineHeight: 1.1,\n\n    [theme.fn.smallerThan('sm')]: {\n      fontSize: rem(40),\n      lineHeight: 1.2,\n    },\n\n    [theme.fn.smallerThan('xs')]: {\n      fontSize: rem(28),\n      lineHeight: 1.3,\n    },\n  },\n\n  description: {\n    color: theme.white,\n    maxWidth: 600,\n\n    [theme.fn.smallerThan('sm')]: {\n      maxWidth: '100%',\n      fontSize: theme.fontSizes.sm,\n    },\n  },\n\n  control: {\n    marginTop: `calc(${theme.spacing.xl} * 1.5)`,\n\n    [theme.fn.smallerThan('sm')]: {\n      width: '100%',\n    },\n  },\n})); */\n\n.hero {\n  position: relative;\n  background-image: url(https://images.unsplash.com/photo-1519389950473-47ba0277781c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1770&q=80);\n  background-size: cover;\n  background-position: center;\n}\n\n.container {\n  height: rem(700px);\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: flex-start;\n  padding-bottom: calc(var(--mantine-spacing-xl) * 6);\n  z-index: 1;\n  position: relative;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    height: rem(500px);\n    padding-bottom: calc(var(--mantine-spacing-xl) * 3);\n  }\n}\n\n.title {\n  color: var(--mantine-color-white);\n  font-size: rem(60px);\n  font-weight: 900;\n  line-height: 1.1;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(40px);\n    line-height: 1.2;\n  }\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    font-size: rem(28px);\n    line-height: 1.3;\n  }\n}\n\n.description {\n  color: var(--mantine-color-white);\n  max-width: rem(600px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    max-width: 100%;\n    font-size: var(--mantine-font-size-sm);\n  }\n}\n\n.control {\n  margin-top: calc(var(--mantine-spacing-xl) * 1.5);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    width: 100%;\n  }\n}\n"}],"attributes":{"title":"Hero with content on left","category":"hero","responsive":true,"canvas":{"center":false}}},{"component":"HeroImageBackground","slug":"hero-image-background","code":[{"fileName":"HeroImageBackground.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { Title, Text, Container, Button, Overlay } from '@mantine/core';\nimport classes from './HeroImageBackground.module.css';\n\nexport function HeroImageBackground() {\n  return (\n    <div className={classes.wrapper}>\n      <Overlay color=\"#000\" opacity={0.65} zIndex={1} />\n\n      <div className={classes.inner}>\n        <Title className={classes.title}>\n          Automated AI code reviews for{' '}\n          <Text component=\"span\" inherit className={classes.highlight}>\n            any stack\n          </Text>\n        </Title>\n\n        <Container size={640}>\n          <Text size=\"lg\" className={classes.description}>\n            Build more reliable software with AI companion. AI is also trained to detect lazy\n            developers who do nothing and just complain on Twitter.\n          </Text>\n        </Container>\n\n        <div className={classes.controls}>\n          <Button className={classes.control} variant=\"white\" size=\"lg\">\n            Get started\n          </Button>\n          <Button className={cx(classes.control, classes.secondaryControl)} size=\"lg\">\n            Live demo\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"},{"fileName":"HeroImageBackground.module.css","language":"css","code":"/* const useStyles = createStyles((theme) => ({\n  wrapper: {\n    position: 'relative',\n    paddingTop: rem(180),\n    paddingBottom: rem(130),\n    backgroundImage:\n      'url(https://images.unsplash.com/photo-1573164713988-8665fc963095?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=980&q=80)',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n\n    [theme.fn.smallerThan('xs')]: {\n      paddingTop: rem(80),\n      paddingBottom: rem(50),\n    },\n  },\n\n  inner: {\n    position: 'relative',\n    zIndex: 1,\n  },\n\n  title: {\n    fontWeight: 800,\n    fontSize: rem(40),\n    letterSpacing: rem(-1),\n    paddingLeft: theme.spacing.md,\n    paddingRight: theme.spacing.md,\n    color: theme.white,\n    marginBottom: theme.spacing.xs,\n    textAlign: 'center',\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n\n    [theme.fn.smallerThan('xs')]: {\n      fontSize: rem(28),\n      textAlign: 'left',\n    },\n  },\n\n  highlight: {\n    color: theme.colors[theme.primaryColor][4],\n  },\n\n  description: {\n    color: theme.colors.gray[0],\n    textAlign: 'center',\n\n    [theme.fn.smallerThan('xs')]: {\n      fontSize: theme.fontSizes.md,\n      textAlign: 'left',\n    },\n  },\n\n  controls: {\n    marginTop: `calc(${theme.spacing.xl} * 1.5)`,\n    display: 'flex',\n    justifyContent: 'center',\n    paddingLeft: theme.spacing.md,\n    paddingRight: theme.spacing.md,\n\n    [theme.fn.smallerThan('xs')]: {\n      flexDirection: 'column',\n    },\n  },\n\n  control: {\n    height: rem(42),\n    fontSize: theme.fontSizes.md,\n\n    '&:not(:first-of-type)': {\n      marginLeft: theme.spacing.md,\n    },\n\n    [theme.fn.smallerThan('xs')]: {\n      '&:not(:first-of-type)': {\n        marginTop: theme.spacing.md,\n        marginLeft: 0,\n      },\n    },\n  },\n\n  secondaryControl: {\n    color: theme.white,\n    backgroundColor: 'rgba(255, 255, 255, .4)',\n\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, .45) !important',\n    },\n  },\n})); */\n\n.wrapper {\n  position: relative;\n  padding-top: rem(180px);\n  padding-bottom: rem(130px);\n  background-image: url(https://images.unsplash.com/photo-1573164713988-8665fc963095?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=980&q=80);\n  background-size: cover;\n  background-position: center;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    padding-top: rem(80px);\n    padding-bottom: rem(50px);\n  }\n}\n\n.inner {\n  position: relative;\n  z-index: 1;\n}\n\n.title {\n  font-weight: 800;\n  font-size: rem(40px);\n  letter-spacing: rem(-1px);\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n  color: var(--mantine-color-white);\n  margin-bottom: var(--mantine-spacing-xs);\n  text-align: center;\n  font-family: Greycliff CF, var(--mantine-font-family);\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    font-size: rem(28px);\n    text-align: left;\n  }\n}\n\n.highlight {\n  color: var(--mantine-color-primary-4);\n}\n\n.description {\n  color: var(--mantine-color-gray-0);\n  text-align: center;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    font-size: var(--mantine-font-size-md);\n    text-align: left;\n  }\n}\n\n.controls {\n  margin-top: calc(var(--mantine-spacing-xl) * 1.5);\n  display: flex;\n  justify-content: center;\n  padding-left: var(--mantine-spacing-md);\n  padding-right: var(--mantine-spacing-md);\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column;\n  }\n}\n\n.control {\n  height: rem(42px);\n  font-size: var(--mantine-font-size-md);\n\n  &:not(:first-of-type) {\n    margin-left: var(--mantine-spacing-md);\n  }\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    &:not(:first-of-type) {\n      margin-top: var(--mantine-spacing-md);\n      margin-left: 0;\n    }\n  }\n}\n\n.secondaryControl {\n  color: var(--mantine-color-white);\n  background-color: rgba(255, 255, 255, 0.4);\n\n  @mixin hover {\n    background-color: rgba(255, 255, 255, 0.45);\n  }\n}\n"}],"attributes":{"title":"Hero with background image","category":"hero","responsive":true,"canvas":{"center":false}}},{"component":"HeroImageRight","slug":"hero-image-right","code":[{"fileName":"HeroImageRight.tsx","language":"tsx","code":"import { Container, Title, Text, Button } from '@mantine/core';\nimport classes from './HeroImageRight.module.css';\n\nexport function HeroImageRight() {\n  return (\n    <div className={classes.root}>\n      <Container size=\"lg\">\n        <div className={classes.inner}>\n          <div className={classes.content}>\n            <Title className={classes.title}>\n              A{' '}\n              <Text\n                component=\"span\"\n                inherit\n                variant=\"gradient\"\n                gradient={{ from: 'pink', to: 'yellow' }}\n              >\n                fully featured\n              </Text>{' '}\n              React components library\n            </Title>\n\n            <Text className={classes.description} mt={30}>\n              Build fully functional accessible web applications with ease – Mantine includes more\n              than 100 customizable components and hooks to cover you in any situation\n            </Text>\n\n            <Button\n              variant=\"gradient\"\n              gradient={{ from: 'pink', to: 'yellow' }}\n              size=\"xl\"\n              className={classes.control}\n              mt={40}\n            >\n              Get started\n            </Button>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"HeroImageRight.module.css","language":"css","code":"/* const useStyles = createStyles((theme) => ({\n  root: {\n    backgroundColor: '#11284b',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundImage:\n      'linear-gradient(250deg, rgba(130, 201, 30, 0) 0%, #062343 70%), url(https://images.unsplash.com/photo-1451187580459-43490279c0fa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1080&q=80)',\n    paddingTop: `calc(${theme.spacing.xl} * 3)`,\n    paddingBottom: `calc(${theme.spacing.xl} * 3)`,\n  },\n\n  inner: {\n    display: 'flex',\n    justifyContent: 'space-between',\n\n    [theme.fn.smallerThan('md')]: {\n      flexDirection: 'column',\n    },\n  },\n\n  image: {\n    [theme.fn.smallerThan('md')]: {\n      display: 'none',\n    },\n  },\n\n  content: {\n    paddingTop: `calc(${theme.spacing.xl} * 2)`,\n    paddingBottom: `calc(${theme.spacing.xl} * 2)`,\n    marginRight: `calc(${theme.spacing.xl} * 3)`,\n\n    [theme.fn.smallerThan('md')]: {\n      marginRight: 0,\n    },\n  },\n\n  title: {\n    color: theme.white,\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontWeight: 900,\n    lineHeight: 1.05,\n    maxWidth: rem(500),\n    fontSize: rem(48),\n\n    [theme.fn.smallerThan('md')]: {\n      maxWidth: '100%',\n      fontSize: rem(34),\n      lineHeight: 1.15,\n    },\n  },\n\n  description: {\n    color: theme.white,\n    opacity: 0.75,\n    maxWidth: rem(500),\n\n    [theme.fn.smallerThan('md')]: {\n      maxWidth: '100%',\n    },\n  },\n\n  control: {\n    paddingLeft: rem(50),\n    paddingRight: rem(50),\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontSize: rem(22),\n\n    [theme.fn.smallerThan('md')]: {\n      width: '100%',\n    },\n  },\n})); */\n\n.root {\n  background-color: #11284b;\n  background-size: cover;\n  background-position: center;\n  background-image: linear-gradient(250deg, rgba(130, 201, 30, 0) 0%, #062343 70%),\n    url(https://images.unsplash.com/photo-1451187580459-43490279c0fa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8&auto=format&fit=crop&w=1080&q=80);\n  padding-top: calc(var(--mantine-spacing-xl) * 3);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 3);\n}\n\n.inner {\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: $mantine-breakpoint-md) {\n    flex-direction: column;\n  }\n}\n\n.image {\n  @media (max-width: $mantine-breakpoint-md) {\n    display: none;\n  }\n}\n\n.content {\n  padding-top: calc(var(--mantine-spacing-xl) * 2);\n  padding-bottom: calc(var(--mantine-spacing-xl) * 2);\n  margin-right: calc(var(--mantine-spacing-xl) * 3);\n\n  @media (max-width: $mantine-breakpoint-md) {\n    margin-right: 0;\n  }\n}\n\n.title {\n  color: var(--mantine-color-white);\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 900;\n  line-height: 1.05;\n  max-width: rem(500px);\n  font-size: rem(48px);\n\n  @media (max-width: $mantine-breakpoint-md) {\n    max-width: 100%;\n    font-size: rem(34px);\n    line-height: 1.15;\n  }\n}\n\n.description {\n  color: var(--mantine-color-white);\n  opacity: 0.75;\n  max-width: rem(500px);\n\n  @media (max-width: $mantine-breakpoint-md) {\n    max-width: 100%;\n  }\n}\n\n.control {\n  padding-left: rem(50px);\n  padding-right: rem(50px);\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-size: rem(22px);\n\n  @media (max-width: $mantine-breakpoint-md) {\n    width: 100%;\n  }\n}\n"}],"attributes":{"title":"Hero with image on the right","category":"hero","responsive":true,"canvas":{"center":false}}},{"component":"HeroText","slug":"hero-text","code":[{"fileName":"HeroText.tsx","language":"tsx","code":"import { Title, Text, Button, Container } from '@mantine/core';\nimport { Dots } from './Dots';\nimport classes from './HeroText.module.css';\n\nexport function HeroText() {\n  return (\n    <Container className={classes.wrapper} size={1400}>\n      <Dots className={classes.dots} style={{ left: 0, top: 0 }} />\n      <Dots className={classes.dots} style={{ left: 60, top: 0 }} />\n      <Dots className={classes.dots} style={{ left: 0, top: 140 }} />\n      <Dots className={classes.dots} style={{ right: 0, top: 60 }} />\n\n      <div className={classes.inner}>\n        <Title className={classes.title}>\n          Automated AI{' '}\n          <Text component=\"span\" className={classes.highlight} inherit>\n            code reviews\n          </Text>{' '}\n          for any stack\n        </Title>\n\n        <Container p={0} size={600}>\n          <Text size=\"lg\" c=\"dimmed\" className={classes.description}>\n            Build more reliable software with AI companion. AI is also trained to detect lazy\n            developers who do nothing and just complain on Twitter.\n          </Text>\n        </Container>\n\n        <div className={classes.controls}>\n          <Button className={classes.control} size=\"lg\" variant=\"default\" color=\"gray\">\n            Book a demo\n          </Button>\n          <Button className={classes.control} size=\"lg\">\n            Purchase a license\n          </Button>\n        </div>\n      </div>\n    </Container>\n  );\n}\n"},{"fileName":"Dots.tsx","language":"tsx","code":"export interface DotsProps extends React.ComponentPropsWithoutRef<'svg'> {\n  size?: number;\n  radius?: number;\n}\n\nexport function Dots({ size = 185, radius = 2.5, ...others }: DotsProps) {\n  return (\n    <svg\n      aria-hidden\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"currentColor\"\n      viewBox=\"0 0 185 185\"\n      width={size}\n      height={size}\n      {...others}\n    >\n      <rect width=\"5\" height=\"5\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"20\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"40\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"60\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"80\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"100\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"120\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"140\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"160\" rx={radius} />\n      <rect width=\"5\" height=\"5\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"60\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"120\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"20\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"80\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"140\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"40\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"100\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"160\" y=\"180\" rx={radius} />\n      <rect width=\"5\" height=\"5\" x=\"180\" y=\"180\" rx={radius} />\n    </svg>\n  );\n}\n"},{"fileName":"HeroText.module.css","language":"css","code":".wrapper {\n  position: relative;\n  padding-top: rem(120px);\n  padding-bottom: rem(80px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding-top: rem(80px);\n    padding-bottom: rem(60px);\n  }\n}\n\n.inner {\n  position: relative;\n  z-index: 1;\n}\n\n.dots {\n  position: absolute;\n  color: light-dark(var(--mantine-color-gray-1), var(--mantine-color-dark-5));\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    display: none;\n  }\n}\n\n.dotsLeft {\n  left: 0;\n  top: 0;\n}\n\n.title {\n  text-align: center;\n  font-weight: 800;\n  font-size: rem(40px);\n  letter-spacing: -1px;\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  margin-bottom: var(--mantine-spacing-xs);\n  font-family: Greycliff CF, var(--mantine-font-family);\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    font-size: rem(28px);\n    text-align: left;\n  }\n}\n\n.highlight {\n  color: light-dark(var(--mantine-color-blue-6), var(--mantine-color-blue-4));\n}\n\n.description {\n  text-align: center;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    text-align: left;\n    font-size: var(--mantine-font-size-md);\n  }\n}\n\n.controls {\n  margin-top: var(--mantine-spacing-lg);\n  display: flex;\n  justify-content: center;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column;\n  }\n}\n\n.control {\n  &:not(:first-of-type) {\n    margin-left: var(--mantine-spacing-md);\n  }\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    height: rem(42px);\n    font-size: var(--mantine-font-size-md);\n\n    &:not(:first-of-type) {\n      margin-top: var(--mantine-spacing-md);\n      margin-left: 0;\n    }\n  }\n}\n"}],"attributes":{"title":"Hero section with text","category":"hero","responsive":true,"canvas":{"center":false}}},{"component":"HeroTitle","slug":"hero-title","code":[{"fileName":"HeroTitle.tsx","language":"tsx","code":"import { Container, Text, Button, Group } from '@mantine/core';\nimport { GithubIcon } from '@mantine/ds';\nimport classes from './HeroTitle.module.css';\n\nexport function HeroTitle() {\n  return (\n    <div className={classes.wrapper}>\n      <Container size={700} className={classes.inner}>\n        <h1 className={classes.title}>\n          A{' '}\n          <Text component=\"span\" variant=\"gradient\" gradient={{ from: 'blue', to: 'cyan' }} inherit>\n            fully featured\n          </Text>{' '}\n          React components and hooks library\n        </h1>\n\n        <Text className={classes.description} color=\"dimmed\">\n          Build fully functional accessible web applications with ease – Mantine includes more than\n          100 customizable components and hooks to cover you in any situation\n        </Text>\n\n        <Group className={classes.controls}>\n          <Button\n            size=\"xl\"\n            className={classes.control}\n            variant=\"gradient\"\n            gradient={{ from: 'blue', to: 'cyan' }}\n          >\n            Get started\n          </Button>\n\n          <Button\n            component=\"a\"\n            href=\"https://github.com/mantinedev/mantine\"\n            size=\"xl\"\n            variant=\"default\"\n            className={classes.control}\n            leftSection={<GithubIcon size={20} />}\n          >\n            GitHub\n          </Button>\n        </Group>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"HeroTitle.module.css","language":"css","code":"/* \nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    position: 'relative',\n    boxSizing: 'border-box',\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n  },\n\n  inner: {\n    position: 'relative',\n    paddingTop: rem(200),\n    paddingBottom: rem(120),\n\n    [theme.fn.smallerThan('sm')]: {\n      paddingBottom: rem(80),\n      paddingTop: rem(80),\n    },\n  },\n\n  title: {\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    fontSize: rem(62),\n    fontWeight: 900,\n    lineHeight: 1.1,\n    margin: 0,\n    padding: 0,\n    color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n\n    [theme.fn.smallerThan('sm')]: {\n      fontSize: rem(42),\n      lineHeight: 1.2,\n    },\n  },\n\n  description: {\n    marginTop: theme.spacing.xl,\n    fontSize: rem(24),\n\n    [theme.fn.smallerThan('sm')]: {\n      fontSize: rem(18),\n    },\n  },\n\n  controls: {\n    marginTop: `calc(${theme.spacing.xl} * 2)`,\n\n    [theme.fn.smallerThan('sm')]: {\n      marginTop: theme.spacing.xl,\n    },\n  },\n\n  control: {\n    height: rem(54),\n    paddingLeft: rem(38),\n    paddingRight: rem(38),\n\n    [theme.fn.smallerThan('sm')]: {\n      height: rem(54),\n      paddingLeft: rem(18),\n      paddingRight: rem(18),\n      flex: 1,\n    },\n  },\n})); */\n\n.wrapper {\n  position: relative;\n  box-sizing: border-box;\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n}\n\n.inner {\n  position: relative;\n  padding-top: rem(200px);\n  padding-bottom: rem(120px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding-bottom: rem(80px);\n    padding-top: rem(80px);\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-size: rem(62px);\n  font-weight: 900;\n  line-height: 1.1;\n  margin: 0;\n  padding: 0;\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(42px);\n    line-height: 1.2;\n  }\n}\n\n.description {\n  margin-top: var(--mantine-spacing-xl);\n  font-size: rem(24px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(18px);\n  }\n}\n\n.controls {\n  margin-top: calc(var(--mantine-spacing-xl) * 2);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    margin-top: var(--mantine-spacing-xl);\n  }\n}\n\n.control {\n  height: rem(54px);\n  padding-left: rem(38px);\n  padding-right: rem(38px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    height: rem(54px);\n    padding-left: rem(18px);\n    padding-right: rem(18px);\n    flex: 1;\n  }\n}\n"}],"attributes":{"title":"Hero section with gradient text","category":"hero","responsive":true,"canvas":{"center":false}}},{"component":"ImageActionBanner","slug":"image-action-banner","code":[{"fileName":"ImageActionBanner.tsx","language":"tsx","code":"import { Card, Overlay, Button, Text } from '@mantine/core';\nimport classes from './ImageActionBanner.module.css';\n\nexport function ImageActionBanner() {\n  return (\n    <Card radius=\"md\" className={classes.card}>\n      <Overlay className={classes.overlay} opacity={0.55} zIndex={0} />\n\n      <div className={classes.content}>\n        <Text size=\"lg\" fw={700} className={classes.title}>\n          Plan & save\n        </Text>\n\n        <Text size=\"sm\" className={classes.description}>\n          Save up to 25% at Fifth Season Hotels in Europe, the Middle East, Africa and Asia Pacific\n        </Text>\n\n        <Button className={classes.action} variant=\"white\" color=\"dark\" size=\"xs\">\n          Book now\n        </Button>\n      </div>\n    </Card>\n  );\n}\n"},{"fileName":"ImageActionBanner.module.css","language":"css","code":".card {\n  height: rem(240px);\n  background-size: cover;\n  background-position: center;\n  background-image: url(https://images.unsplash.com/photo-1596394516093-501ba68a0ba6?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80);\n}\n\n.content {\n  position: absolute;\n  inset: 0;\n  padding: var(--mantine-spacing-xl);\n  z-index: 1;\n}\n\n.action {\n  position: absolute;\n  bottom: var(--mantine-spacing-xl);\n  right: var(--mantine-spacing-xl);\n}\n\n.title {\n  color: var(--mantine-color-white);\n  margin-bottom: calc(var(--mantine-spacing-xs) / 2);\n}\n\n.description {\n  color: var(--mantine-color-white);\n  max-width: rem(220px);\n}\n\n.overlay {\n  background-color: transparent;\n  background-image: linear-gradient(\n    105deg,\n    var(--mantine-color-black) 20%,\n    #312f2f 50%,\n    var(--mantine-color-gray-4) 100%\n  );\n}\n"}],"attributes":{"title":"Banner with image and action","category":"banners","canvas":{"center":true,"maxWidth":480}}},{"component":"ImageCard","slug":"image-card","code":[{"fileName":"ImageCard.tsx","language":"tsx","code":"import { IconEye, IconMessageCircle } from '@tabler/icons-react';\nimport { Card, Text, Group, Center, rem, useMantineTheme } from '@mantine/core';\nimport classes from './ImageCard.module.css';\n\nexport function ImageCard() {\n  const theme = useMantineTheme();\n\n  return (\n    <Card\n      p=\"lg\"\n      shadow=\"lg\"\n      className={classes.card}\n      radius=\"md\"\n      component=\"a\"\n      href=\"https://mantine.dev/\"\n      target=\"_blank\"\n    >\n      <div\n        className={classes.image}\n        style={{\n          backgroundImage:\n            'url(https://images.unsplash.com/photo-1530122037265-a5f1f91d3b99?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80)',\n        }}\n      />\n      <div className={classes.overlay} />\n\n      <div className={classes.content}>\n        <div>\n          <Text size=\"lg\" className={classes.title} fw={500}>\n            Journey to Swiss Alps\n          </Text>\n\n          <Group justify=\"space-between\" gap=\"xs\">\n            <Text size=\"sm\" className={classes.author}>\n              Robert Gluesticker\n            </Text>\n\n            <Group gap=\"lg\">\n              <Center>\n                <IconEye\n                  style={{ width: rem(16), height: rem(16) }}\n                  stroke={1.5}\n                  color={theme.colors.dark[2]}\n                />\n                <Text size=\"sm\" className={classes.bodyText}>\n                  7847\n                </Text>\n              </Center>\n              <Center>\n                <IconMessageCircle\n                  style={{ width: rem(16), height: rem(16) }}\n                  stroke={1.5}\n                  color={theme.colors.dark[2]}\n                />\n                <Text size=\"sm\" className={classes.bodyText}>\n                  5\n                </Text>\n              </Center>\n            </Group>\n          </Group>\n        </div>\n      </div>\n    </Card>\n  );\n}\n"},{"fileName":"ImageCard.module.css","language":"css","code":".card {\n  position: relative;\n  height: rem(280px);\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n\n  @mixin hover {\n    & .image {\n      transform: scale(1.03);\n    }\n  }\n}\n\n.image {\n  position: absolute;\n  inset: 0;\n  background-size: cover;\n  transition: transform 500ms ease;\n}\n\n.overlay {\n  position: absolute;\n  top: 20%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.85) 90%);\n}\n\n.content {\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  z-index: 1;\n}\n\n.title {\n  color: var(--mantine-color-white);\n  margin-bottom: rem(5px);\n}\n\n.bodyText {\n  color: var(--mantine-color-dark-2);\n  margin-left: rem(7px);\n}\n\n.author {\n  color: var(--mantine-color-dark-2);\n}\n"}],"attributes":{"title":"Card with image as background","category":"article-cards","canvas":{"center":true,"maxWidth":320}}},{"component":"ImageCheckboxes","slug":"image-checkboxes","code":[{"fileName":"ImageCheckboxes.tsx","language":"tsx","code":"import { UnstyledButton, Checkbox, Text, Image, SimpleGrid } from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\nimport icons from './icons';\nimport classes from './ImageCheckboxes.module.css';\n\ninterface ImageCheckboxProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange?(checked: boolean): void;\n  title: string;\n  description: string;\n  image: string;\n}\n\nexport function ImageCheckbox({\n  checked,\n  defaultChecked,\n  onChange,\n  title,\n  description,\n  className,\n  image,\n  ...others\n}: ImageCheckboxProps & Omit<React.ComponentPropsWithoutRef<'button'>, keyof ImageCheckboxProps>) {\n  const [value, handleChange] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  return (\n    <UnstyledButton\n      {...others}\n      onClick={() => handleChange(!value)}\n      data-checked={value || undefined}\n      className={classes.button}\n    >\n      <Image src={image} alt={title} width={40} height={40} />\n\n      <div className={classes.body}>\n        <Text c=\"dimmed\" size=\"xs\" lh={1} mb={5}>\n          {description}\n        </Text>\n        <Text fw={500} size=\"sm\" lh={1}>\n          {title}\n        </Text>\n      </div>\n\n      <Checkbox\n        checked={value}\n        onChange={() => {}}\n        tabIndex={-1}\n        styles={{ input: { cursor: 'pointer' } }}\n      />\n    </UnstyledButton>\n  );\n}\n\nconst mockdata = [\n  { description: 'Sun and sea', title: 'Beach vacation', image: icons.sea },\n  { description: 'Sightseeing', title: 'City trips', image: icons.city },\n  { description: 'Mountains', title: 'Hiking vacation', image: icons.mountain },\n  { description: 'Snow and ice', title: 'Winter vacation', image: icons.winter },\n];\n\nexport function ImageCheckboxes() {\n  const items = mockdata.map((item) => <ImageCheckbox {...item} key={item.title} />);\n  return <SimpleGrid cols={{ base: 1, sm: 2, md: 4 }}>{items}</SimpleGrid>;\n}\n"},{"fileName":"ImageCheckboxes.module.css","language":"css","code":".button {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  transition: background-color 150ms ease, border-color 150ms ease;\n  border-radius: var(--mantine-radius-sm);\n  padding: var(--mantine-spacing-sm);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-8));\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-8));\n\n  &[data-checked] {\n    border-color: var(--mantine-color-blue-filled);\n    background-color: var(--mantine-color-blue-light);\n  }\n}\n\n.body {\n  flex: 1;\n  margin-left: var(--mantine-spacing-md);\n}\n"}],"attributes":{"title":"Checkbox with image","category":"inputs","canvas":{"center":true,"maxWidth":1080}}},{"component":"InputTooltip","slug":"input-tooltip","code":[{"fileName":"InputTooltip.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { TextInput, PasswordInput, Tooltip, Center, Text, rem } from '@mantine/core';\nimport { IconInfoCircle } from '@tabler/icons-react';\n\nfunction TooltipIcon() {\n  const rightSection = (\n    <Tooltip\n      label=\"We store your data securely\"\n      position=\"top-end\"\n      withArrow\n      transitionProps={{ transition: 'pop-bottom-right' }}\n    >\n      <Text component=\"div\" c=\"dimmed\" style={{ cursor: 'help' }}>\n        <Center>\n          <IconInfoCircle style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n        </Center>\n      </Text>\n    </Tooltip>\n  );\n\n  return (\n    <TextInput\n      rightSection={rightSection}\n      label=\"Tooltip shown on icon hover\"\n      placeholder=\"Your email\"\n    />\n  );\n}\n\nfunction TooltipFocus() {\n  const [opened, setOpened] = useState(false);\n  const [value, setValue] = useState('');\n  const valid = value.trim().length >= 6;\n  return (\n    <Tooltip\n      label={valid ? 'All good!' : 'Password must include at least 6 characters'}\n      position=\"bottom-start\"\n      withArrow\n      opened={opened}\n      color={valid ? 'teal' : undefined}\n      withinPortal\n    >\n      <PasswordInput\n        label=\"Tooltip shown onFocus\"\n        required\n        placeholder=\"Your password\"\n        onFocus={() => setOpened(true)}\n        onBlur={() => setOpened(false)}\n        mt=\"md\"\n        value={value}\n        onChange={(event) => setValue(event.currentTarget.value)}\n      />\n    </Tooltip>\n  );\n}\n\nexport function InputTooltip() {\n  return (\n    <>\n      <TooltipIcon />\n      <TooltipFocus />\n    </>\n  );\n}\n"}],"attributes":{"title":"Inputs with tooltip","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"InputValidation","slug":"input-validation","code":[{"fileName":"InputValidation.tsx","language":"tsx","code":"import { TextInput, rem } from '@mantine/core';\nimport { IconAlertTriangle } from '@tabler/icons-react';\nimport classes from './InputValidation.module.css';\n\nexport function InputValidation() {\n  return (\n    <TextInput\n      label=\"Custom validation styles\"\n      error=\"Invalid email\"\n      defaultValue=\"hello!gmail.com\"\n      classNames={{ input: classes.invalid }}\n      rightSection={\n        <IconAlertTriangle\n          stroke={1.5}\n          style={{ width: rem(18), height: rem(18) }}\n          className={classes.icon}\n        />\n      }\n    />\n  );\n}\n"},{"fileName":"InputValidation.module.css","language":"css","code":".invalid {\n  background-color: var(--mantine-color-red-light);\n}\n\n.icon {\n  color: light-dark(var(--mantine-color-red-6), var(--mantine-color-red-7));\n}\n"}],"attributes":{"title":"Input with custom validation styles","category":"inputs","canvas":{"center":true,"maxWidth":420}}},{"component":"InputWithButton","slug":"input-with-button","code":[{"fileName":"InputWithButton.tsx","language":"tsx","code":"import { TextInput, TextInputProps, ActionIcon, useMantineTheme, rem } from '@mantine/core';\nimport { IconSearch, IconArrowRight } from '@tabler/icons-react';\n\nexport function InputWithButton(props: TextInputProps) {\n  const theme = useMantineTheme();\n\n  return (\n    <TextInput\n      radius=\"xl\"\n      size=\"md\"\n      placeholder=\"Search questions\"\n      rightSectionWidth={42}\n      leftSection={<IconSearch style={{ width: rem(18), height: rem(18) }} stroke={1.5} />}\n      rightSection={\n        <ActionIcon size={32} radius=\"xl\" color={theme.primaryColor} variant=\"filled\">\n          <IconArrowRight style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n        </ActionIcon>\n      }\n      {...props}\n    />\n  );\n}\n"}],"attributes":{"title":"Input with contained button","category":"inputs","withColor":true,"canvas":{"center":true,"maxWidth":520}}},{"component":"LanguagePicker","slug":"language-picker","code":[{"fileName":"LanguagePicker.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { UnstyledButton, Menu, Image, Group } from '@mantine/core';\nimport { IconChevronDown } from '@tabler/icons-react';\nimport images from './images';\nimport classes from './LanguagePicker.module.css';\n\nconst data = [\n  { label: 'English', image: images.english },\n  { label: 'German', image: images.german },\n  { label: 'Italian', image: images.italian },\n  { label: 'French', image: images.french },\n  { label: 'Polish', image: images.polish },\n];\n\nexport function LanguagePicker() {\n  const [opened, setOpened] = useState(false);\n  const [selected, setSelected] = useState(data[0]);\n  const items = data.map((item) => (\n    <Menu.Item\n      leftSection={<Image src={item.image} width={18} height={18} />}\n      onClick={() => setSelected(item)}\n      key={item.label}\n    >\n      {item.label}\n    </Menu.Item>\n  ));\n\n  return (\n    <Menu\n      onOpen={() => setOpened(true)}\n      onClose={() => setOpened(false)}\n      radius=\"md\"\n      width=\"target\"\n      withinPortal\n    >\n      <Menu.Target>\n        <UnstyledButton className={classes.control} data-expanded={opened || undefined}>\n          <Group gap=\"xs\">\n            <Image src={selected.image} width={22} height={22} />\n            <span className={classes.label}>{selected.label}</span>\n          </Group>\n          <IconChevronDown size=\"1rem\" className={classes.icon} stroke={1.5} />\n        </UnstyledButton>\n      </Menu.Target>\n      <Menu.Dropdown>{items}</Menu.Dropdown>\n    </Menu>\n  );\n}\n"},{"fileName":"LanguagePicker.module.css","language":"css","code":".control {\n  width: rem(200px);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-md);\n  border-radius: var(--mantine-radius-md);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-6));\n  transition: background-color 150ms ease;\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-6));\n\n  &[data-expanded] {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-5));\n  }\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-5));\n  }\n}\n\n.label {\n  font-weight: 500;\n  font-size: var(--mantine-font-size-sm);\n}\n\n.icon {\n  transition: transform 150ms ease;\n  transform: rotate(0deg);\n\n  [data-expanded] & {\n    transform: rotate(180deg);\n  }\n}\n"}],"attributes":{"title":"Language picker","category":"inputs","canvas":{"center":true,"maxWidth":220}}},{"component":"LeadGrid","slug":"lead-grid","code":[{"fileName":"LeadGrid.tsx","language":"tsx","code":"import { Container, Grid, SimpleGrid, Skeleton, rem } from '@mantine/core';\n\nconst PRIMARY_COL_HEIGHT = rem(300);\n\nexport function LeadGrid() {\n  const SECONDARY_COL_HEIGHT = `calc(${PRIMARY_COL_HEIGHT} / 2 - var(--mantine-spacing-md) / 2)`;\n\n  return (\n    <Container my=\"md\">\n      <SimpleGrid cols={{ base: 1, sm: 2 }} spacing=\"md\">\n        <Skeleton height={PRIMARY_COL_HEIGHT} radius=\"md\" animate={false} />\n        <Grid gutter=\"md\">\n          <Grid.Col>\n            <Skeleton height={SECONDARY_COL_HEIGHT} radius=\"md\" animate={false} />\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Skeleton height={SECONDARY_COL_HEIGHT} radius=\"md\" animate={false} />\n          </Grid.Col>\n          <Grid.Col span={6}>\n            <Skeleton height={SECONDARY_COL_HEIGHT} radius=\"md\" animate={false} />\n          </Grid.Col>\n        </Grid>\n      </SimpleGrid>\n    </Container>\n  );\n}\n"}],"attributes":{"title":"Grid with leading item","category":"grids","responsive":true,"canvas":{"center":false}}},{"component":"NavbarLinksGroup","slug":"navbar-links-group","code":[{"fileName":"NavbarLinksGroup.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Group, Box, Collapse, ThemeIcon, Text, UnstyledButton, rem } from '@mantine/core';\nimport { IconCalendarStats, IconChevronRight } from '@tabler/icons-react';\nimport classes from './NavbarLinksGroup.module.css';\n\ninterface LinksGroupProps {\n  icon: React.FC<any>;\n  label: string;\n  initiallyOpened?: boolean;\n  links?: { label: string; link: string }[];\n}\n\nexport function LinksGroup({ icon: Icon, label, initiallyOpened, links }: LinksGroupProps) {\n  const hasLinks = Array.isArray(links);\n  const [opened, setOpened] = useState(initiallyOpened || false);\n  const items = (hasLinks ? links : []).map((link) => (\n    <Text<'a'>\n      component=\"a\"\n      className={classes.link}\n      href={link.link}\n      key={link.label}\n      onClick={(event) => event.preventDefault()}\n    >\n      {link.label}\n    </Text>\n  ));\n\n  return (\n    <>\n      <UnstyledButton onClick={() => setOpened((o) => !o)} className={classes.control}>\n        <Group justify=\"space-between\" gap={0}>\n          <Box style={{ display: 'flex', alignItems: 'center' }}>\n            <ThemeIcon variant=\"light\" size={30}>\n              <Icon style={{ width: rem(18), height: rem(18) }} />\n            </ThemeIcon>\n            <Box ml=\"md\">{label}</Box>\n          </Box>\n          {hasLinks && (\n            <IconChevronRight\n              className={classes.chevron}\n              stroke={1.5}\n              style={{\n                width: rem(16),\n                height: rem(16),\n                transform: opened ? 'rotate(-90deg)' : 'none',\n              }}\n            />\n          )}\n        </Group>\n      </UnstyledButton>\n      {hasLinks ? <Collapse in={opened}>{items}</Collapse> : null}\n    </>\n  );\n}\n\nconst mockdata = {\n  label: 'Releases',\n  icon: IconCalendarStats,\n  links: [\n    { label: 'Upcoming releases', link: '/' },\n    { label: 'Previous releases', link: '/' },\n    { label: 'Releases schedule', link: '/' },\n  ],\n};\n\nexport function NavbarLinksGroup() {\n  return (\n    <Box mih={220} p=\"md\">\n      <LinksGroup {...mockdata} />\n    </Box>\n  );\n}\n"},{"fileName":"NavbarLinksGroup.module.css","language":"css","code":".control {\n  font-weight: 500;\n  display: block;\n  width: 100%;\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-md);\n  color: var(--mantine-color-text);\n  font-size: var(--mantine-font-size-sm);\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-7));\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-dark-0));\n  }\n}\n\n.link {\n  font-weight: 500;\n  display: block;\n  text-decoration: none;\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-md);\n  padding-left: var(--mantine-spacing-md);\n  margin-left: var(--mantine-spacing-xl);\n  font-size: var(--mantine-font-size-sm);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  border-left: 1px solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-7));\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-dark-0));\n  }\n}\n\n.chevron {\n  transition: transform 200ms ease;\n}\n"}],"attributes":{"title":"Collapsible links group","category":"navbars","canvas":{"center":true,"maxWidth":320}}},{"component":"NavbarMinimal","slug":"navbar-minimal","code":[{"fileName":"NavbarMinimal.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Center, Tooltip, UnstyledButton, Stack, rem } from '@mantine/core';\nimport {\n  IconHome2,\n  IconGauge,\n  IconDeviceDesktopAnalytics,\n  IconFingerprint,\n  IconCalendarStats,\n  IconUser,\n  IconSettings,\n  IconLogout,\n  IconSwitchHorizontal,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './NavbarMinimal.module.css';\n\ninterface NavbarLinkProps {\n  icon: typeof IconHome2;\n  label: string;\n  active?: boolean;\n  onClick?(): void;\n}\n\nfunction NavbarLink({ icon: Icon, label, active, onClick }: NavbarLinkProps) {\n  return (\n    <Tooltip label={label} position=\"right\" transitionProps={{ duration: 0 }}>\n      <UnstyledButton onClick={onClick} className={classes.link} data-active={active || undefined}>\n        <Icon style={{ width: rem(20), height: rem(20) }} stroke={1.5} />\n      </UnstyledButton>\n    </Tooltip>\n  );\n}\n\nconst mockdata = [\n  { icon: IconHome2, label: 'Home' },\n  { icon: IconGauge, label: 'Dashboard' },\n  { icon: IconDeviceDesktopAnalytics, label: 'Analytics' },\n  { icon: IconCalendarStats, label: 'Releases' },\n  { icon: IconUser, label: 'Account' },\n  { icon: IconFingerprint, label: 'Security' },\n  { icon: IconSettings, label: 'Settings' },\n];\n\nexport function NavbarMinimal() {\n  const [active, setActive] = useState(2);\n\n  const links = mockdata.map((link, index) => (\n    <NavbarLink\n      {...link}\n      key={link.label}\n      active={index === active}\n      onClick={() => setActive(index)}\n    />\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <Center>\n        <MantineLogo type=\"mark\" size={30} />\n      </Center>\n\n      <div className={classes.navbarMain}>\n        <Stack justify=\"center\" gap={0}>\n          {links}\n        </Stack>\n      </div>\n\n      <Stack justify=\"center\" gap={0}>\n        <NavbarLink icon={IconSwitchHorizontal} label=\"Change account\" />\n        <NavbarLink icon={IconLogout} label=\"Logout\" />\n      </Stack>\n    </nav>\n  );\n}\n"},{"fileName":"NavbarMinimal.module.css","language":"css","code":".navbar {\n  width: rem(80px);\n  height: rem(750px);\n  padding: var(--mantine-spacing-md);\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.navbarMain {\n  flex: 1;\n  margin-top: rem(50px);\n}\n\n.link {\n  width: rem(50px);\n  height: rem(50px);\n  border-radius: var(--mantine-radius-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-5));\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      background-color: var(--mantine-color-blue-light);\n      color: var(--mantine-color-blue-light-color);\n    }\n  }\n}\n"}],"attributes":{"title":"Navbar with tooltips","category":"navbars","canvas":{"center":false}}},{"component":"NavbarMinimalColored","slug":"navbar-minimal-colored","code":[{"fileName":"NavbarMinimalColored.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Center, Tooltip, UnstyledButton, Stack, rem } from '@mantine/core';\nimport {\n  IconHome2,\n  IconGauge,\n  IconDeviceDesktopAnalytics,\n  IconFingerprint,\n  IconCalendarStats,\n  IconUser,\n  IconSettings,\n  IconLogout,\n  IconSwitchHorizontal,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './NavbarMinimalColored.module.css';\n\ninterface NavbarLinkProps {\n  icon: typeof IconHome2;\n  label: string;\n  active?: boolean;\n  onClick?(): void;\n}\n\nfunction NavbarLink({ icon: Icon, label, active, onClick }: NavbarLinkProps) {\n  return (\n    <Tooltip label={label} position=\"right\" transitionProps={{ duration: 0 }}>\n      <UnstyledButton onClick={onClick} className={classes.link} data-active={active || undefined}>\n        <Icon style={{ width: rem(20), height: rem(20) }} stroke={1.5} />\n      </UnstyledButton>\n    </Tooltip>\n  );\n}\n\nconst mockdata = [\n  { icon: IconHome2, label: 'Home' },\n  { icon: IconGauge, label: 'Dashboard' },\n  { icon: IconDeviceDesktopAnalytics, label: 'Analytics' },\n  { icon: IconCalendarStats, label: 'Releases' },\n  { icon: IconUser, label: 'Account' },\n  { icon: IconFingerprint, label: 'Security' },\n  { icon: IconSettings, label: 'Settings' },\n];\n\nexport function NavbarMinimalColored() {\n  const [active, setActive] = useState(2);\n\n  const links = mockdata.map((link, index) => (\n    <NavbarLink\n      {...link}\n      key={link.label}\n      active={index === active}\n      onClick={() => setActive(index)}\n    />\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <Center>\n        <MantineLogo type=\"mark\" inverted size={30} />\n      </Center>\n\n      <div className={classes.navbarMain}>\n        <Stack justify=\"center\" gap={0}>\n          {links}\n        </Stack>\n      </div>\n\n      <Stack justify=\"center\" gap={0}>\n        <NavbarLink icon={IconSwitchHorizontal} label=\"Change account\" />\n        <NavbarLink icon={IconLogout} label=\"Logout\" />\n      </Stack>\n    </nav>\n  );\n}\n"},{"fileName":"NavbarMinimalColored.module.css","language":"css","code":".navbar {\n  width: rem(80px);\n  height: rem(750px);\n  padding: var(--mantine-spacing-md);\n  display: flex;\n  flex-direction: column;\n  background-color: var(--mantine-color-blue-filled);\n}\n\n.navbarMain {\n  flex: 1;\n  margin-top: rem(50px);\n}\n\n.link {\n  width: rem(50px);\n  height: rem(50px);\n  border-radius: var(--mantine-radius-md);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--mantine-color-white);\n\n  &:hover {\n    background-color: var(--mantine-color-blue-7);\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      box-shadow: var(--mantine-shadow-sm);\n      background-color: var(--mantine-color-white);\n      color: var(--mantine-color-blue-6);\n    }\n  }\n}\n"}],"attributes":{"title":"Navbar with tooltips","category":"navbars","canvas":{"center":false}}},{"component":"NavbarNested","slug":"navbar-nested","code":[{"fileName":"NavbarNested.tsx","language":"tsx","code":"import { Group, Code, ScrollArea, rem } from '@mantine/core';\nimport {\n  IconNotes,\n  IconCalendarStats,\n  IconGauge,\n  IconPresentationAnalytics,\n  IconFileAnalytics,\n  IconAdjustments,\n  IconLock,\n} from '@tabler/icons-react';\nimport { UserButton } from '../UserButton/UserButton';\nimport { LinksGroup } from '../NavbarLinksGroup/NavbarLinksGroup';\nimport { Logo } from './Logo';\nimport classes from './NavbarNested.module.css';\n\nconst mockdata = [\n  { label: 'Dashboard', icon: IconGauge },\n  {\n    label: 'Market news',\n    icon: IconNotes,\n    initiallyOpened: true,\n    links: [\n      { label: 'Overview', link: '/' },\n      { label: 'Forecasts', link: '/' },\n      { label: 'Outlook', link: '/' },\n      { label: 'Real time', link: '/' },\n    ],\n  },\n  {\n    label: 'Releases',\n    icon: IconCalendarStats,\n    links: [\n      { label: 'Upcoming releases', link: '/' },\n      { label: 'Previous releases', link: '/' },\n      { label: 'Releases schedule', link: '/' },\n    ],\n  },\n  { label: 'Analytics', icon: IconPresentationAnalytics },\n  { label: 'Contracts', icon: IconFileAnalytics },\n  { label: 'Settings', icon: IconAdjustments },\n  {\n    label: 'Security',\n    icon: IconLock,\n    links: [\n      { label: 'Enable 2FA', link: '/' },\n      { label: 'Change password', link: '/' },\n      { label: 'Recovery codes', link: '/' },\n    ],\n  },\n];\n\nexport function NavbarNested() {\n  const links = mockdata.map((item) => <LinksGroup {...item} key={item.label} />);\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.header}>\n        <Group justify=\"space-between\">\n          <Logo style={{ width: rem(120) }} />\n          <Code fw={700}>v3.1.2</Code>\n        </Group>\n      </div>\n\n      <ScrollArea className={classes.links}>\n        <div className={classes.linksInner}>{links}</div>\n      </ScrollArea>\n\n      <div className={classes.footer}>\n        <UserButton />\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"Logo.tsx","language":"tsx","code":"export function Logo(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg {...props} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 623 163\">\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <path\n          fill=\"#339AF0\"\n          fillRule=\"nonzero\"\n          d=\"M162.162 81.5c0-45.011-36.301-81.5-81.08-81.5C36.301 0 0 36.489 0 81.5 0 126.51 36.301 163 81.081 163s81.081-36.49 81.081-81.5z\"\n        />\n        <g fill=\"#FFF\">\n          <path\n            fillRule=\"nonzero\"\n            d=\"M65.983 43.049a6.234 6.234 0 00-.336 6.884 6.14 6.14 0 001.618 1.786c9.444 7.036 14.866 17.794 14.866 29.52 0 11.726-5.422 22.484-14.866 29.52a6.142 6.142 0 00-1.616 1.786 6.211 6.211 0 00-.694 4.693c.197.79.546 1.533 1.028 2.186a6.154 6.154 0 008.634 1.284 50.112 50.112 0 007.947-7.39h17.493c3.406 0 6.174-2.772 6.174-6.194s-2.762-6.194-6.174-6.194h-9.655a49.166 49.166 0 004.071-19.69 49.166 49.166 0 00-4.07-19.692h9.66c3.406 0 6.173-2.771 6.173-6.194 0-3.422-2.762-6.193-6.173-6.193H82.574a50.11 50.11 0 00-7.952-7.397 6.149 6.149 0 00-4.578-1.153 6.189 6.189 0 00-4.055 2.438h-.006z\"\n          />\n          <path d=\"M56.236 79.391a9.342 9.342 0 01.632-3.608 9.261 9.261 0 011.967-3.077 9.143 9.143 0 012.994-2.063 9.06 9.06 0 017.103 0 9.144 9.144 0 012.995 2.063 9.261 9.261 0 011.967 3.077 9.34 9.34 0 01.63 3.608 9.299 9.299 0 01-2.755 6.395 9.094 9.094 0 01-6.388 2.63 9.094 9.094 0 01-6.39-2.63 9.299 9.299 0 01-2.755-6.395z\" />\n        </g>\n        <path\n          fill=\"currentColor\"\n          fillRule=\"nonzero\"\n          d=\"M291.736 126.644c1.984 0 3.823-.434 5.518-1.302 1.695-.868 2.542-2.129 2.542-3.782v-77.5c0-2.976-.827-5.063-2.48-6.262-1.653-1.199-3.513-1.798-5.58-1.798-1.901 0-3.555.207-4.96.62-1.405.413-2.666 1.24-3.782 2.48s-2.418 3.059-3.906 5.456l-15.252 27.776-15.128-27.776c-1.323-2.397-2.583-4.216-3.782-5.456-1.199-1.24-2.48-2.067-3.844-2.48-1.364-.413-3.038-.62-5.022-.62-1.984 0-3.823.6-5.518 1.798-1.695 1.199-2.542 3.286-2.542 6.262v77.5c0 1.653.847 2.914 2.542 3.782 1.695.868 3.534 1.302 5.518 1.302 2.067 0 3.927-.434 5.58-1.302 1.653-.868 2.48-2.129 2.48-3.782V67.248l14.26 26.784c.744 1.24 1.591 2.087 2.542 2.542.95.455 1.88.682 2.79.682.992 0 1.984-.248 2.976-.744s1.86-1.323 2.604-2.48l14.384-25.792v53.32c0 1.653.847 2.914 2.542 3.782 1.695.868 3.534 1.302 5.518 1.302zm34.375 1.116c4.298 0 7.956-.992 10.974-2.976 3.017-1.984 5.642-4.257 7.874-6.82v3.596c0 1.405.682 2.604 2.046 3.596 1.364.992 3.08 1.488 5.146 1.488 2.232 0 4.092-.496 5.58-1.488 1.488-.992 2.232-2.19 2.232-3.596V91.18c0-4.216-.889-8.143-2.666-11.78-1.778-3.637-4.609-6.613-8.494-8.928-3.886-2.315-9.052-3.472-15.5-3.472-2.894 0-5.87.372-8.928 1.116-3.059.744-5.642 1.798-7.75 3.162-2.108 1.364-3.162 2.914-3.162 4.65 0 1.819.475 3.596 1.426 5.332.95 1.736 2.294 2.604 4.03 2.604 1.074 0 2.066-.33 2.976-.992.91-.661 2.211-1.302 3.906-1.922 1.694-.62 4.112-.93 7.254-.93 2.81 0 4.98.579 6.51 1.736 1.53 1.157 2.645 2.604 3.348 4.34a14.092 14.092 0 011.054 5.332v1.612h-5.084c-5.704 0-10.726.537-15.066 1.612-4.34 1.075-7.73 2.935-10.168 5.58-2.439 2.645-3.658 6.324-3.658 11.036 0 5.621 1.591 9.775 4.774 12.462 3.182 2.687 6.964 4.03 11.346 4.03zm6.448-11.904c-1.819 0-3.369-.537-4.65-1.612-1.282-1.075-1.922-2.77-1.922-5.084 0-2.315.764-4.03 2.294-5.146 1.53-1.116 3.534-1.84 6.014-2.17 2.48-.33 5.084-.496 7.812-.496h1.86v2.604c0 1.984-.6 3.885-1.798 5.704-1.199 1.819-2.666 3.307-4.402 4.464-1.736 1.157-3.472 1.736-5.208 1.736zm84.169 10.788c2.067 0 3.927-.434 5.58-1.302 1.653-.868 2.48-2.129 2.48-3.782V92.172c0-4.63-.971-8.845-2.914-12.648-1.943-3.803-4.526-6.84-7.75-9.114C410.9 68.137 407.345 67 403.46 67c-4.133 0-7.626.971-10.478 2.914-2.852 1.943-4.898 4.113-6.138 6.51v-3.72c0-1.488-.682-2.687-2.046-3.596-1.364-.91-3.038-1.364-5.022-1.364-2.315 0-4.216.455-5.704 1.364-1.488.91-2.232 2.108-2.232 3.596v48.856c0 1.24.744 2.397 2.232 3.472 1.488 1.075 3.39 1.612 5.704 1.612 2.232 0 4.133-.537 5.704-1.612 1.57-1.075 2.356-2.232 2.356-3.472V92.172c0-2.315.496-4.299 1.488-5.952.992-1.653 2.273-2.935 3.844-3.844 1.57-.91 3.183-1.364 4.836-1.364 1.984 0 3.803.558 5.456 1.674 1.653 1.116 2.955 2.5 3.906 4.154a10.52 10.52 0 011.426 5.332v29.388c0 1.653.868 2.914 2.604 3.782 1.736.868 3.513 1.302 5.332 1.302zm47.432 0c2.315 0 4.03-.703 5.146-2.108 1.116-1.405 1.674-2.976 1.674-4.712 0-1.653-.558-3.183-1.674-4.588-1.116-1.405-2.831-2.108-5.146-2.108h-4.836c-2.563 0-4.36-.496-5.394-1.488-1.033-.992-1.55-2.687-1.55-5.084V79.4h14.632c1.323 0 2.335-.6 3.038-1.798.703-1.199 1.054-2.542 1.054-4.03 0-1.488-.351-2.831-1.054-4.03-.703-1.199-1.715-1.798-3.038-1.798H452.38V46.416c0-1.488-.847-2.687-2.542-3.596-1.695-.91-3.534-1.364-5.518-1.364-1.819 0-3.596.455-5.332 1.364-1.736.91-2.604 2.108-2.604 3.596v60.14c0 6.944 1.963 12.028 5.89 15.252 3.927 3.224 9.61 4.836 17.05 4.836h4.836zM487.232 54.6c2.397 0 4.443-.806 6.138-2.418 1.695-1.612 2.542-3.41 2.542-5.394 0-2.15-.847-3.989-2.542-5.518-1.695-1.53-3.74-2.294-6.138-2.294-2.397 0-4.464.765-6.2 2.294-1.736 1.53-2.604 3.369-2.604 5.518 0 1.984.868 3.782 2.604 5.394 1.736 1.612 3.803 2.418 6.2 2.418zm0 72.044c2.232 0 4.133-.537 5.704-1.612 1.57-1.075 2.356-2.232 2.356-3.472V72.704c0-1.488-.785-2.687-2.356-3.596-1.57-.91-3.472-1.364-5.704-1.364-2.315 0-4.216.455-5.704 1.364-1.488.91-2.232 2.108-2.232 3.596v48.856c0 1.24.744 2.397 2.232 3.472 1.488 1.075 3.39 1.612 5.704 1.612zm65.247 0c2.066 0 3.926-.434 5.58-1.302 1.653-.868 2.48-2.129 2.48-3.782V92.172c0-4.63-.972-8.845-2.914-12.648-1.943-3.803-4.526-6.84-7.75-9.114-3.224-2.273-6.779-3.41-10.664-3.41-4.134 0-7.626.971-10.478 2.914-2.852 1.943-4.898 4.113-6.138 6.51v-3.72c0-1.488-.682-2.687-2.046-3.596-1.364-.91-3.038-1.364-5.022-1.364-2.315 0-4.216.455-5.704 1.364-1.488.91-2.232 2.108-2.232 3.596v48.856c0 1.24.744 2.397 2.232 3.472 1.488 1.075 3.39 1.612 5.704 1.612 2.232 0 4.133-.537 5.704-1.612 1.57-1.075 2.356-2.232 2.356-3.472V92.172c0-2.315.496-4.299 1.488-5.952.992-1.653 2.273-2.935 3.844-3.844 1.57-.91 3.182-1.364 4.836-1.364 1.984 0 3.802.558 5.456 1.674 1.653 1.116 2.955 2.5 3.906 4.154a10.52 10.52 0 011.426 5.332v29.388c0 1.653.868 2.914 2.604 3.782 1.736.868 3.513 1.302 5.332 1.302zm47.68 1.116c4.464 0 8.328-.558 11.594-1.674 3.265-1.116 5.786-2.48 7.564-4.092 1.777-1.612 2.666-3.12 2.666-4.526 0-.827-.248-1.798-.744-2.914a8.641 8.641 0 00-2.108-2.914c-.91-.827-1.984-1.24-3.224-1.24-1.158 0-2.398.372-3.72 1.116-1.323.744-2.894 1.53-4.712 2.356-1.819.827-4.092 1.24-6.82 1.24-4.299 0-7.792-1.095-10.478-3.286-2.687-2.19-4.03-5.063-4.03-8.618v-1.86h25.172c1.901 0 3.74-.186 5.518-.558 1.777-.372 3.244-1.323 4.402-2.852 1.157-1.53 1.736-4.071 1.736-7.626 0-4.63-1.199-8.68-3.596-12.152-2.398-3.472-5.518-6.2-9.362-8.184-3.844-1.984-8.08-2.976-12.71-2.976-5.043 0-9.61 1.137-13.702 3.41-4.092 2.273-7.358 5.29-9.796 9.052-2.439 3.761-3.658 7.874-3.658 12.338v10.54c0 5.043 1.281 9.486 3.844 13.33 2.562 3.844 6.096 6.82 10.602 8.928 4.505 2.108 9.692 3.162 15.562 3.162zm4.092-35.836h-18.104v-3.472c0-1.984.516-3.7 1.55-5.146 1.033-1.447 2.376-2.563 4.03-3.348 1.653-.785 3.43-1.178 5.332-1.178 1.984 0 3.802.413 5.456 1.24 1.653.827 2.976 1.984 3.968 3.472s1.488 3.183 1.488 5.084c0 1.323-.269 2.211-.806 2.666-.538.455-1.509.682-2.914.682z\"\n        />\n      </g>\n    </svg>\n  );\n}\n"},{"fileName":"NavbarNested.module.css","language":"css","code":".navbar {\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-6));\n  height: rem(800px);\n  width: rem(300px);\n  padding: var(--mantine-spacing-md);\n  padding-bottom: 0;\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.header {\n  padding: var(--mantine-spacing-md);\n  padding-top: 0;\n  margin-left: calc(var(--mantine-spacing-md) * -1);\n  margin-right: calc(var(--mantine-spacing-md) * -1);\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.links {\n  flex: 1;\n  margin-left: calc(var(--mantine-spacing-md) * -1);\n  margin-right: calc(var(--mantine-spacing-md) * -1);\n}\n\n.linksInner {\n  padding-top: var(--mantine-spacing-xl);\n  padding-bottom: var(--mantine-spacing-xl);\n}\n\n.footer {\n  margin-left: calc(var(--mantine-spacing-md) * -1);\n  margin-right: calc(var(--mantine-spacing-md) * -1);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n"}],"attributes":{"title":"Navbar with nested links","category":"navbars","canvas":{"center":false}}},{"component":"NavbarSearch","slug":"navbar-search","code":[{"fileName":"NavbarSearch.tsx","language":"tsx","code":"import {\n  TextInput,\n  Code,\n  UnstyledButton,\n  Badge,\n  Text,\n  Group,\n  ActionIcon,\n  Tooltip,\n  rem,\n} from '@mantine/core';\nimport { IconBulb, IconUser, IconCheckbox, IconSearch, IconPlus } from '@tabler/icons-react';\nimport { UserButton } from '../UserButton/UserButton';\nimport classes from './NavbarSearch.module.css';\n\nconst links = [\n  { icon: IconBulb, label: 'Activity', notifications: 3 },\n  { icon: IconCheckbox, label: 'Tasks', notifications: 4 },\n  { icon: IconUser, label: 'Contacts' },\n];\n\nconst collections = [\n  { emoji: '👍', label: 'Sales' },\n  { emoji: '🚚', label: 'Deliveries' },\n  { emoji: '💸', label: 'Discounts' },\n  { emoji: '💰', label: 'Profits' },\n  { emoji: '✨', label: 'Reports' },\n  { emoji: '🛒', label: 'Orders' },\n  { emoji: '📅', label: 'Events' },\n  { emoji: '🙈', label: 'Debts' },\n  { emoji: '💁‍♀️', label: 'Customers' },\n];\n\nexport function NavbarSearch() {\n  const mainLinks = links.map((link) => (\n    <UnstyledButton key={link.label} className={classes.mainLink}>\n      <div className={classes.mainLinkInner}>\n        <link.icon size={20} className={classes.mainLinkIcon} stroke={1.5} />\n        <span>{link.label}</span>\n      </div>\n      {link.notifications && (\n        <Badge size=\"sm\" variant=\"filled\" className={classes.mainLinkBadge}>\n          {link.notifications}\n        </Badge>\n      )}\n    </UnstyledButton>\n  ));\n\n  const collectionLinks = collections.map((collection) => (\n    <a\n      href=\"#\"\n      onClick={(event) => event.preventDefault()}\n      key={collection.label}\n      className={classes.collectionLink}\n    >\n      <span style={{ marginRight: rem(9), fontSize: rem(16) }}>{collection.emoji}</span>{' '}\n      {collection.label}\n    </a>\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.section}>\n        <UserButton />\n      </div>\n\n      <TextInput\n        placeholder=\"Search\"\n        size=\"xs\"\n        leftSection={<IconSearch style={{ width: rem(12), height: rem(12) }} stroke={1.5} />}\n        rightSectionWidth={70}\n        rightSection={<Code className={classes.searchCode}>Ctrl + K</Code>}\n        styles={{ section: { pointerEvents: 'none' } }}\n        mb=\"sm\"\n      />\n\n      <div className={classes.section}>\n        <div className={classes.mainLinks}>{mainLinks}</div>\n      </div>\n\n      <div className={classes.section}>\n        <Group className={classes.collectionsHeader} justify=\"space-between\">\n          <Text size=\"xs\" fw={500} c=\"dimmed\">\n            Collections\n          </Text>\n          <Tooltip label=\"Create collection\" withArrow position=\"right\">\n            <ActionIcon variant=\"default\" size={18}>\n              <IconPlus style={{ width: rem(12), height: rem(12) }} stroke={1.5} />\n            </ActionIcon>\n          </Tooltip>\n        </Group>\n        <div className={classes.collections}>{collectionLinks}</div>\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"NavbarSearch.module.css","language":"css","code":".navbar {\n  background-color: var(--mantine-color-body);\n  height: rem(700px);\n  width: rem(300px);\n  padding: var(--mantine-spacing-md);\n  padding-top: 0;\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.section {\n  margin-left: calc(var(--mantine-spacing-md) * -1);\n  margin-right: calc(var(--mantine-spacing-md) * -1);\n  margin-bottom: var(--mantine-spacing-md);\n\n  &:not(:last-of-type) {\n    border-bottom: rem(1px) solid\n      light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n  }\n}\n\n.searchCode {\n  font-weight: 700;\n  font-size: rem(10px);\n  background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-7));\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-7));\n}\n\n.mainLinks {\n  padding-left: calc(var(--mantine-spacing-md) - var(--mantine-spacing-xs));\n  padding-right: calc(var(--mantine-spacing-md) - var(--mantine-spacing-xs));\n  padding-bottom: var(--mantine-spacing-md);\n}\n\n.mainLink {\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-size: var(--mantine-font-size-xs);\n  padding: rem(8px) var(--mantine-spacing-xs);\n  border-radius: var(--mantine-radius-sm);\n  font-weight: 500;\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n    color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  }\n}\n\n.mainLinkInner {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n.mainLinkIcon {\n  margin-right: var(--mantine-spacing-sm);\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-2));\n}\n\n.mainLinkBadge {\n  padding: 0;\n  width: rem(20px);\n  height: rem(20px);\n  pointer-events: none;\n}\n\n.collections {\n  padding-left: calc(var(--mantine-spacing-md) - rem(6px));\n  padding-right: calc(var(--mantine-spacing-md) - rem(6px));\n  padding-bottom: var(--mantine-spacing-md);\n}\n\n.collectionsHeader {\n  padding-left: calc(var(--mantine-spacing-md) + rem(2px));\n  padding-right: var(--mantine-spacing-md);\n  margin-bottom: rem(5px);\n}\n\n.collectionLink {\n  display: block;\n  padding: rem(8px) var(--mantine-spacing-xs);\n  text-decoration: none;\n  border-radius: var(--mantine-radius-sm);\n  font-size: var(--mantine-font-size-xs);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  line-height: 1;\n  font-weight: 500;\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n    color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-0));\n  }\n}\n"}],"attributes":{"title":"Navbar with search","category":"navbars","canvas":{"center":false}}},{"component":"NavbarSegmented","slug":"navbar-segmented","code":[{"fileName":"NavbarSegmented.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { SegmentedControl, Text } from '@mantine/core';\nimport {\n  IconShoppingCart,\n  IconLicense,\n  IconMessage2,\n  IconBellRinging,\n  IconMessages,\n  IconFingerprint,\n  IconKey,\n  IconSettings,\n  Icon2fa,\n  IconUsers,\n  IconFileAnalytics,\n  IconDatabaseImport,\n  IconReceipt2,\n  IconReceiptRefund,\n  IconLogout,\n  IconSwitchHorizontal,\n} from '@tabler/icons-react';\nimport classes from './NavbarSegmented.module.css';\n\nconst tabs = {\n  account: [\n    { link: '', label: 'Notifications', icon: IconBellRinging },\n    { link: '', label: 'Billing', icon: IconReceipt2 },\n    { link: '', label: 'Security', icon: IconFingerprint },\n    { link: '', label: 'SSH Keys', icon: IconKey },\n    { link: '', label: 'Databases', icon: IconDatabaseImport },\n    { link: '', label: 'Authentication', icon: Icon2fa },\n    { link: '', label: 'Other Settings', icon: IconSettings },\n  ],\n  general: [\n    { link: '', label: 'Orders', icon: IconShoppingCart },\n    { link: '', label: 'Receipts', icon: IconLicense },\n    { link: '', label: 'Reviews', icon: IconMessage2 },\n    { link: '', label: 'Messages', icon: IconMessages },\n    { link: '', label: 'Customers', icon: IconUsers },\n    { link: '', label: 'Refunds', icon: IconReceiptRefund },\n    { link: '', label: 'Files', icon: IconFileAnalytics },\n  ],\n};\n\nexport function NavbarSegmented() {\n  const [section, setSection] = useState<'account' | 'general'>('account');\n  const [active, setActive] = useState('Billing');\n\n  const links = tabs[section].map((item) => (\n    <a\n      className={classes.link}\n      data-active={item.label === active || undefined}\n      href={item.link}\n      key={item.label}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(item.label);\n      }}\n    >\n      <item.icon className={classes.linkIcon} stroke={1.5} />\n      <span>{item.label}</span>\n    </a>\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <div>\n        <Text fw={500} size=\"sm\" className={classes.title} c=\"dimmed\" mb=\"xs\">\n          bgluesticker@mantine.dev\n        </Text>\n\n        <SegmentedControl\n          value={section}\n          onChange={(value: 'account' | 'general') => setSection(value)}\n          transitionTimingFunction=\"ease\"\n          fullWidth\n          data={[\n            { label: 'Account', value: 'account' },\n            { label: 'System', value: 'general' },\n          ]}\n        />\n      </div>\n\n      <div className={classes.navbarMain}>{links}</div>\n\n      <div className={classes.footer}>\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <IconSwitchHorizontal className={classes.linkIcon} stroke={1.5} />\n          <span>Change account</span>\n        </a>\n\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <IconLogout className={classes.linkIcon} stroke={1.5} />\n          <span>Logout</span>\n        </a>\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"NavbarSegmented.module.css","language":"css","code":".navbar {\n  background-color: var(--mantine-color-body);\n  height: rem(840px);\n  width: rem(300px);\n  padding: var(--mantine-spacing-md);\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.navbarMain {\n  flex: 1;\n  margin-top: var(--mantine-spacing-xl);\n}\n\n.title {\n  text-transform: uppercase;\n  letter-spacing: rem(-0.25px);\n}\n\n.link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: var(--mantine-font-size-sm);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-1));\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  border-radius: var(--mantine-radius-sm);\n  font-weight: 500;\n\n  &:hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n\n    & .linkIcon {\n      color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    }\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      background-color: var(--mantine-color-blue-light);\n      color: var(--mantine-color-blue-light-color);\n\n      & .linkIcon {\n        color: var(--mantine-color-blue-light-color);\n      }\n    }\n  }\n}\n\n.linkIcon {\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-2));\n  margin-right: var(--mantine-spacing-sm);\n  width: rem(25px);\n  height: rem(25px);\n}\n\n.footer {\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n  padding-top: var(--mantine-spacing-md);\n}\n"}],"attributes":{"title":"Navbar with SegmentedControl","category":"navbars","canvas":{"center":false}}},{"component":"NavbarSimple","slug":"navbar-simple","code":[{"fileName":"NavbarSimple.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Group, Code } from '@mantine/core';\nimport {\n  IconBellRinging,\n  IconFingerprint,\n  IconKey,\n  IconSettings,\n  Icon2fa,\n  IconDatabaseImport,\n  IconReceipt2,\n  IconSwitchHorizontal,\n  IconLogout,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './NavbarSimple.module.css';\n\nconst data = [\n  { link: '', label: 'Notifications', icon: IconBellRinging },\n  { link: '', label: 'Billing', icon: IconReceipt2 },\n  { link: '', label: 'Security', icon: IconFingerprint },\n  { link: '', label: 'SSH Keys', icon: IconKey },\n  { link: '', label: 'Databases', icon: IconDatabaseImport },\n  { link: '', label: 'Authentication', icon: Icon2fa },\n  { link: '', label: 'Other Settings', icon: IconSettings },\n];\n\nexport function NavbarSimple() {\n  const [active, setActive] = useState('Billing');\n\n  const links = data.map((item) => (\n    <a\n      className={classes.link}\n      data-active={item.label === active || undefined}\n      href={item.link}\n      key={item.label}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(item.label);\n      }}\n    >\n      <item.icon className={classes.linkIcon} stroke={1.5} />\n      <span>{item.label}</span>\n    </a>\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.navbarMain}>\n        <Group className={classes.header} justify=\"space-between\">\n          <MantineLogo size={28} />\n          <Code fw={700}>v3.1.2</Code>\n        </Group>\n        {links}\n      </div>\n\n      <div className={classes.footer}>\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <IconSwitchHorizontal className={classes.linkIcon} stroke={1.5} />\n          <span>Change account</span>\n        </a>\n\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <IconLogout className={classes.linkIcon} stroke={1.5} />\n          <span>Logout</span>\n        </a>\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"NavbarSimple.module.css","language":"css","code":".navbar {\n  height: rem(700px);\n  width: rem(300px);\n  padding: var(--mantine-spacing-md);\n  display: flex;\n  flex-direction: column;\n  border-right: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.navbarMain {\n  flex: 1;\n}\n\n.header {\n  padding-bottom: var(--mantine-spacing-md);\n  margin-bottom: calc(var(--mantine-spacing-md) * 1.5);\n  border-bottom: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.footer {\n  padding-top: var(--mantine-spacing-md);\n  margin-top: var(--mantine-spacing-md);\n  border-top: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n}\n\n.link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: var(--mantine-font-size-sm);\n  color: light-dark(var(--mantine-color-gray-7), var(--mantine-color-dark-1));\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  border-radius: var(--mantine-radius-sm);\n  font-weight: 500;\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n    color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n\n    .linkIcon {\n      color: light-dark(var(--mantine-color-black), var(--mantine-color-white));\n    }\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      background-color: var(--mantine-color-blue-light);\n      color: var(--mantine-color-blue-light-color);\n\n      .linkIcon {\n        color: var(--mantine-color-blue-light-color);\n      }\n    }\n  }\n}\n\n.linkIcon {\n  color: light-dark(var(--mantine-color-gray-6), var(--mantine-color-dark-2));\n  margin-right: var(--mantine-spacing-sm);\n  width: rem(25px);\n  height: rem(25px);\n}\n"}],"attributes":{"title":"Simple navbar","category":"navbars","canvas":{"center":false}}},{"component":"NavbarSimpleColored","slug":"navbar-simple-colored","code":[{"fileName":"NavbarSimpleColored.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { Group, Code } from '@mantine/core';\nimport {\n  IconBellRinging,\n  IconFingerprint,\n  IconKey,\n  IconSettings,\n  Icon2fa,\n  IconDatabaseImport,\n  IconReceipt2,\n  IconSwitchHorizontal,\n  IconLogout,\n} from '@tabler/icons-react';\nimport { MantineLogo } from '@mantine/ds';\nimport classes from './NavbarSimpleColored.module.css';\n\nconst data = [\n  { link: '', label: 'Notifications', icon: IconBellRinging },\n  { link: '', label: 'Billing', icon: IconReceipt2 },\n  { link: '', label: 'Security', icon: IconFingerprint },\n  { link: '', label: 'SSH Keys', icon: IconKey },\n  { link: '', label: 'Databases', icon: IconDatabaseImport },\n  { link: '', label: 'Authentication', icon: Icon2fa },\n  { link: '', label: 'Other Settings', icon: IconSettings },\n];\n\nexport function NavbarSimpleColored() {\n  const [active, setActive] = useState('Billing');\n\n  const links = data.map((item) => (\n    <a\n      className={classes.link}\n      data-active={item.label === active || undefined}\n      href={item.link}\n      key={item.label}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(item.label);\n      }}\n    >\n      <item.icon className={classes.linkIcon} stroke={1.5} />\n      <span>{item.label}</span>\n    </a>\n  ));\n\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.navbarMain}>\n        <Group className={classes.header} justify=\"space-between\">\n          <MantineLogo size={28} inverted style={{ color: 'white' }} />\n          <Code fw={700} className={classes.version}>\n            v3.1.2\n          </Code>\n        </Group>\n        {links}\n      </div>\n\n      <div className={classes.footer}>\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <IconSwitchHorizontal className={classes.linkIcon} stroke={1.5} />\n          <span>Change account</span>\n        </a>\n\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <IconLogout className={classes.linkIcon} stroke={1.5} />\n          <span>Logout</span>\n        </a>\n      </div>\n    </nav>\n  );\n}\n"},{"fileName":"NavbarSimpleColored.module.css","language":"css","code":".navbar {\n  height: rem(700px);\n  width: rem(300px);\n  padding: var(--mantine-spacing-md);\n  display: flex;\n  flex-direction: column;\n  background-color: var(--mantine-color-blue-filled);\n}\n\n.navbarMain {\n  flex: 1;\n}\n\n.header {\n  padding-bottom: var(--mantine-spacing-md);\n  margin-bottom: calc(var(--mantine-spacing-md) * 1.5);\n  border-bottom: rem(1px) solid var(--mantine-color-blue-7);\n}\n\n.footer {\n  padding-top: var(--mantine-spacing-md);\n  margin-top: var(--mantine-spacing-md);\n  border-top: rem(1px) solid var(--mantine-color-blue-7);\n}\n\n.version {\n  background-color: var(--mantine-color-blue-7);\n  color: var(--mantine-color-white);\n}\n\n.link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  font-size: var(--mantine-font-size-sm);\n  color: var(--mantine-color-white);\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-sm);\n  border-radius: var(--mantine-radius-sm);\n  font-weight: 500;\n\n  @mixin hover {\n    background-color: var(--mantine-color-blue-7);\n    color: var(--mantine-color-white);\n\n    .linkIcon {\n      color: var(--mantine-color-white);\n    }\n  }\n\n  &[data-active] {\n    &,\n    &:hover {\n      box-shadow: var(--mantine-shadow-sm);\n      background-color: var(--mantine-color-white);\n      color: var(--mantine-color-blue-filled);\n\n      .linkIcon {\n        color: var(--mantine-color-blue-filled);\n      }\n    }\n  }\n}\n\n.linkIcon {\n  color: var(--mantine-color-blue-1);\n  margin-right: var(--mantine-spacing-sm);\n  width: rem(25px);\n  height: rem(25px);\n}\n"}],"attributes":{"title":"Simple navbar","category":"navbars","canvas":{"center":false}}},{"component":"NotFoundImage","slug":"not-found-image","code":[{"fileName":"NotFoundImage.tsx","language":"tsx","code":"import { Image, Container, Title, Text, Button, SimpleGrid } from '@mantine/core';\nimport image from './image.svg';\nimport classes from './NotFoundImage.module.css';\n\nexport function NotFoundImage() {\n  return (\n    <Container className={classes.root}>\n      <SimpleGrid spacing={{ base: 40, sm: 80 }} cols={{ base: 1, sm: 2 }}>\n        <Image src={image.src} className={classes.mobileImage} />\n        <div>\n          <Title className={classes.title}>Something is not right...</Title>\n          <Text c=\"dimmed\" size=\"lg\">\n            Page you are trying to open does not exist. You may have mistyped the address, or the\n            page has been moved to another URL. If you think this is an error contact support.\n          </Text>\n          <Button variant=\"outline\" size=\"md\" mt=\"xl\" className={classes.control}>\n            Get back to home page\n          </Button>\n        </div>\n        <Image src={image.src} className={classes.desktopImage} />\n      </SimpleGrid>\n    </Container>\n  );\n}\n"},{"fileName":"NotFoundImage.module.css","language":"css","code":".root {\n  padding-top: rem(80px);\n  padding-bottom: rem(80px);\n}\n\n.title {\n  font-weight: 900;\n  font-size: rem(34px);\n  margin-bottom: var(--mantine-spacing-md);\n  font-family: Greycliff CF, var(--mantine-font-family);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(32px);\n  }\n}\n\n.control {\n  @media (max-width: $mantine-breakpoint-sm) {\n    width: 100%;\n  }\n}\n\n.mobileImage {\n  @media (min-width: 48em) {\n    display: none;\n  }\n}\n\n.desktopImage {\n  @media (max-width: 47.99em) {\n    display: none;\n  }\n}\n"}],"attributes":{"title":"404 page with image","category":"error-pages","responsive":true,"canvas":{"center":false}}},{"component":"NotFoundTitle","slug":"not-found-title","code":[{"fileName":"NotFoundTitle.tsx","language":"tsx","code":"import { Title, Text, Button, Container, Group } from '@mantine/core';\nimport classes from './NotFoundTitle.module.css';\n\nexport function NotFoundTitle() {\n  return (\n    <Container className={classes.root}>\n      <div className={classes.label}>404</div>\n      <Title className={classes.title}>You have found a secret place.</Title>\n      <Text c=\"dimmed\" size=\"lg\" ta=\"center\" className={classes.description}>\n        Unfortunately, this is only a 404 page. You may have mistyped the address, or the page has\n        been moved to another URL.\n      </Text>\n      <Group justify=\"center\">\n        <Button variant=\"subtle\" size=\"md\">\n          Take me back to home page\n        </Button>\n      </Group>\n    </Container>\n  );\n}\n"},{"fileName":"NotFoundTitle.module.css","language":"css","code":".root {\n  padding-top: rem(80px);\n  padding-bottom: rem(80px);\n}\n\n.label {\n  text-align: center;\n  font-weight: 900;\n  font-size: rem(38px);\n  line-height: 1;\n  margin-bottom: calc(1.5 * var(--mantine-spacing-xl));\n  color: var(--mantine-color-gray-2);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(32px);\n  }\n}\n\n.description {\n  max-width: rem(500px);\n  margin: auto;\n  margin-top: var(--mantine-spacing-xl);\n  margin-bottom: calc(1.5 * var(--mantine-spacing-xl));\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  text-align: center;\n  font-weight: 900;\n  font-size: rem(38px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(32px);\n  }\n}\n"}],"attributes":{"title":"404 page","category":"error-pages","responsive":true,"canvas":{"center":false}}},{"component":"NothingFoundBackground","slug":"nothing-found-background","code":[{"fileName":"NothingFoundBackground.tsx","language":"tsx","code":"import { Container, Title, Text, Button, Group } from '@mantine/core';\nimport { Illustration } from './Illustration';\nimport classes from './NothingFoundBackground.module.css';\n\nexport function NothingFoundBackground() {\n  return (\n    <Container className={classes.root}>\n      <div className={classes.inner}>\n        <Illustration className={classes.image} />\n        <div className={classes.content}>\n          <Title className={classes.title}>Nothing to see here</Title>\n          <Text c=\"dimmed\" size=\"lg\" ta=\"center\" className={classes.description}>\n            Page you are trying to open does not exist. You may have mistyped the address, or the\n            page has been moved to another URL. If you think this is an error contact support.\n          </Text>\n          <Group justify=\"center\">\n            <Button size=\"md\">Take me back to home page</Button>\n          </Group>\n        </div>\n      </div>\n    </Container>\n  );\n}\n"},{"fileName":"Illustration.tsx","language":"tsx","code":"export function Illustration(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 362 145\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M62.6 142c-2.133 0-3.2-1.067-3.2-3.2V118h-56c-2 0-3-1-3-3V92.8c0-1.333.4-2.733 1.2-4.2L58.2 4c.8-1.333 2.067-2 3.8-2h28c2 0 3 1 3 3v85.4h11.2c.933 0 1.733.333 2.4 1 .667.533 1 1.267 1 2.2v21.2c0 .933-.333 1.733-1 2.4-.667.533-1.467.8-2.4.8H93v20.8c0 2.133-1.067 3.2-3.2 3.2H62.6zM33 90.4h26.4V51.2L33 90.4zM181.67 144.6c-7.333 0-14.333-1.333-21-4-6.666-2.667-12.866-6.733-18.6-12.2-5.733-5.467-10.266-13-13.6-22.6-3.333-9.6-5-20.667-5-33.2 0-12.533 1.667-23.6 5-33.2 3.334-9.6 7.867-17.133 13.6-22.6 5.734-5.467 11.934-9.533 18.6-12.2 6.667-2.8 13.667-4.2 21-4.2 7.467 0 14.534 1.4 21.2 4.2 6.667 2.667 12.8 6.733 18.4 12.2 5.734 5.467 10.267 13 13.6 22.6 3.334 9.6 5 20.667 5 33.2 0 12.533-1.666 23.6-5 33.2-3.333 9.6-7.866 17.133-13.6 22.6-5.6 5.467-11.733 9.533-18.4 12.2-6.666 2.667-13.733 4-21.2 4zm0-31c9.067 0 15.6-3.733 19.6-11.2 4.134-7.6 6.2-17.533 6.2-29.8s-2.066-22.2-6.2-29.8c-4.133-7.6-10.666-11.4-19.6-11.4-8.933 0-15.466 3.8-19.6 11.4-4 7.6-6 17.533-6 29.8s2 22.2 6 29.8c4.134 7.467 10.667 11.2 19.6 11.2zM316.116 142c-2.134 0-3.2-1.067-3.2-3.2V118h-56c-2 0-3-1-3-3V92.8c0-1.333.4-2.733 1.2-4.2l56.6-84.6c.8-1.333 2.066-2 3.8-2h28c2 0 3 1 3 3v85.4h11.2c.933 0 1.733.333 2.4 1 .666.533 1 1.267 1 2.2v21.2c0 .933-.334 1.733-1 2.4-.667.533-1.467.8-2.4.8h-11.2v20.8c0 2.133-1.067 3.2-3.2 3.2h-27.2zm-29.6-51.6h26.4V51.2l-26.4 39.2z\"\n      />\n    </svg>\n  );\n}\n"},{"fileName":"NothingFoundBackground.module.css","language":"css","code":".root {\n  padding-top: rem(80px);\n  padding-bottom: rem(80px);\n}\n\n.inner {\n  position: relative;\n}\n\n.image {\n  position: absolute;\n  inset: 0;\n  opacity: 0.75;\n  color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n}\n\n.content {\n  padding-top: rem(220px);\n  position: relative;\n  z-index: 1;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding-top: rem(120px);\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  text-align: center;\n  font-weight: 900;\n  font-size: rem(38px);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(32px);\n  }\n}\n\n.description {\n  max-width: rem(540px);\n  margin: auto;\n  margin-top: var(--mantine-spacing-xl);\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n}\n"}],"attributes":{"title":"404 as background image","category":"error-pages","responsive":true,"canvas":{"center":false}}},{"component":"PasswordStrength","slug":"password-strength","code":[{"fileName":"PasswordStrength.tsx","language":"tsx","code":"import { Box, Progress, PasswordInput, Group, Text, Center } from '@mantine/core';\nimport { useInputState } from '@mantine/hooks';\nimport { IconCheck, IconX } from '@tabler/icons-react';\n\nfunction PasswordRequirement({ meets, label }: { meets: boolean; label: string }) {\n  return (\n    <Text component=\"div\" c={meets ? 'teal' : 'red'} mt={5} size=\"sm\">\n      <Center inline>\n        {meets ? <IconCheck size=\"0.9rem\" stroke={1.5} /> : <IconX size=\"0.9rem\" stroke={1.5} />}\n        <Box ml={7}>{label}</Box>\n      </Center>\n    </Text>\n  );\n}\n\nconst requirements = [\n  { re: /[0-9]/, label: 'Includes number' },\n  { re: /[a-z]/, label: 'Includes lowercase letter' },\n  { re: /[A-Z]/, label: 'Includes uppercase letter' },\n  { re: /[$&+,:;=?@#|'<>.^*()%!-]/, label: 'Includes special symbol' },\n];\n\nfunction getStrength(password: string) {\n  let multiplier = password.length > 5 ? 0 : 1;\n\n  requirements.forEach((requirement) => {\n    if (!requirement.re.test(password)) {\n      multiplier += 1;\n    }\n  });\n\n  return Math.max(100 - (100 / (requirements.length + 1)) * multiplier, 0);\n}\n\nexport function PasswordStrength() {\n  const [value, setValue] = useInputState('');\n  const strength = getStrength(value);\n  const checks = requirements.map((requirement, index) => (\n    <PasswordRequirement key={index} label={requirement.label} meets={requirement.re.test(value)} />\n  ));\n  const bars = Array(4)\n    .fill(0)\n    .map((_, index) => (\n      <Progress\n        styles={{ section: { transitionDuration: '0ms' } }}\n        value={\n          value.length > 0 && index === 0 ? 100 : strength >= ((index + 1) / 4) * 100 ? 100 : 0\n        }\n        color={strength > 80 ? 'teal' : strength > 50 ? 'yellow' : 'red'}\n        key={index}\n        size={4}\n      />\n    ));\n\n  return (\n    <div>\n      <PasswordInput\n        value={value}\n        onChange={setValue}\n        placeholder=\"Your password\"\n        label=\"Password\"\n        required\n      />\n\n      <Group gap={5} grow mt=\"xs\" mb=\"md\">\n        {bars}\n      </Group>\n\n      <PasswordRequirement label=\"Has at least 6 characters\" meets={value.length > 5} />\n      {checks}\n    </div>\n  );\n}\n"}],"attributes":{"title":"Password with strength meter","category":"inputs","canvas":{"center":true,"maxWidth":320}}},{"component":"ProgressCard","slug":"progress-card","code":[{"fileName":"ProgressCard.tsx","language":"tsx","code":"import { Text, Progress, Card } from '@mantine/core';\n\nexport function ProgressCard() {\n  return (\n    <Card withBorder radius=\"md\" padding=\"xl\" bg=\"var(--mantine-color-body\">\n      <Text fz=\"xs\" tt=\"uppercase\" fw={700} c=\"dimmed\">\n        Monthly goal\n      </Text>\n      <Text fz=\"lg\" fw={500}>\n        $5.431 / $10.000\n      </Text>\n      <Progress value={54.31} mt=\"md\" size=\"lg\" radius=\"xl\" />\n    </Card>\n  );\n}\n"}],"attributes":{"title":"Progress card","category":"stats","changelog":"september-2022","dimmed":true,"canvas":{"center":true,"maxWidth":380}}},{"component":"ProgressCardColored","slug":"progress-card-colored","code":[{"fileName":"ProgressCardColored.tsx","language":"tsx","code":"import { Text, Progress, Card } from '@mantine/core';\nimport classes from './ProgressCardColored.module.css';\n\nexport function ProgressCardColored() {\n  return (\n    <Card withBorder radius=\"md\" p=\"xl\" className={classes.card}>\n      <Text fz=\"xs\" tt=\"uppercase\" fw={700} className={classes.title}>\n        Monthly goal\n      </Text>\n      <Text fz=\"lg\" fw={500} className={classes.stats}>\n        $5.431 / $10.000\n      </Text>\n      <Progress\n        value={54.31}\n        mt=\"md\"\n        size=\"lg\"\n        radius=\"xl\"\n        classNames={{\n          root: classes.progressTrack,\n          section: classes.progressSection,\n        }}\n      />\n    </Card>\n  );\n}\n"},{"fileName":"ProgressCardColored.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-blue-filled);\n}\n\n.title {\n  color: var(--mantine-color-white);\n  opacity: 0.65;\n}\n\n.stats {\n  color: var(--mantine-color-white);\n}\n\n.progressSection {\n  background-color: var(--mantine-color-white);\n}\n\n.progressTrack {\n  background-color: var(--mantine-color-blue-3);\n}\n"}],"attributes":{"title":"Progress card with color","category":"stats","changelog":"september-2022","dimmed":true,"canvas":{"center":true,"maxWidth":380}}},{"component":"ServerError","slug":"server-error","code":[{"fileName":"ServerError.tsx","language":"tsx","code":"import { Title, Text, Button, Container, Group } from '@mantine/core';\nimport classes from './ServerError.module.css';\n\nexport function ServerError() {\n  return (\n    <div className={classes.root}>\n      <Container>\n        <div className={classes.label}>500</div>\n        <Title className={classes.title}>Something bad just happened...</Title>\n        <Text size=\"lg\" ta=\"center\" className={classes.description}>\n          Our servers could not handle your request. Don&apos;t worry, our development team was\n          already notified. Try refreshing the page.\n        </Text>\n        <Group justify=\"center\">\n          <Button variant=\"white\" size=\"md\">\n            Refresh the page\n          </Button>\n        </Group>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"ServerError.module.css","language":"css","code":".root {\n  padding-top: rem(80px);\n  padding-bottom: rem(120px);\n  background-color: var(--mantine-color-blue-filled);\n}\n\n.label {\n  text-align: center;\n  font-weight: 900;\n  font-size: rem(220px);\n  line-height: 1;\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n  color: var(--mantine-color-blue-3);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(120px);\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  text-align: center;\n  font-weight: 900;\n  font-size: rem(38px);\n  color: var(--mantine-color-white);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(32px);\n  }\n}\n\n.description {\n  max-width: rem(540px);\n  margin: auto;\n  margin-top: var(--mantine-spacing-xl);\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n  color: var(--mantine-color-blue-1);\n}\n"}],"attributes":{"title":"500 page","category":"error-pages","responsive":true,"canvas":{"center":false}}},{"component":"ServerOverload","slug":"server-overload","code":[{"fileName":"ServerOverload.tsx","language":"tsx","code":"import { Container, Title, Text, Button, Group } from '@mantine/core';\nimport { Illustration } from './Illustration';\nimport classes from './ServerOverload.module.css';\n\nexport function ServerOverload() {\n  return (\n    <div className={classes.root}>\n      <Container>\n        <div className={classes.inner}>\n          <Illustration className={classes.image} />\n          <div className={classes.content}>\n            <Title className={classes.title}>All of our servers are busy</Title>\n            <Text size=\"lg\" ta=\"center\" className={classes.description}>\n              We cannot handle your request right now, please wait for a couple of minutes and\n              refresh the page. Our team is already working on this issue.\n            </Text>\n            <Group justify=\"center\">\n              <Button size=\"md\" variant=\"white\">\n                Refresh the page\n              </Button>\n            </Group>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n"},{"fileName":"Illustration.tsx","language":"tsx","code":"export function Illustration(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 332 145\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M43.4 144.6c-10.4 0-19.333-2.2-26.8-6.6-7.467-4.533-12.867-9.8-16.2-15.8-.8-2-.267-3.733 1.6-5.2l18-13.6c1.867-1.467 3.6-1.2 5.2.8 4.667 6.4 10.533 9.6 17.6 9.6 6.267 0 11.133-1.867 14.6-5.6 3.6-3.867 5.4-8.4 5.4-13.6 0-5.333-1.867-9.8-5.6-13.4-3.733-3.733-8.467-5.6-14.2-5.6-4.8 0-9.4 1.8-13.8 5.4-1.867 1.867-3.533 2.467-5 1.8L4.8 75.2c-1.733-.8-2.4-2-2-3.6l15.4-67c.4-1.733 1.467-2.6 3.2-2.6h61.8c.933 0 1.733.333 2.4 1 .667.533 1 1.267 1 2.2v22c0 .933-.333 1.733-1 2.4-.667.533-1.467.8-2.4.8H42.8L38.4 49c.8 0 2.6-.2 5.4-.6 2.933-.4 5.533-.6 7.8-.6 12.8 0 23.267 4.6 31.4 13.8 8.267 9.2 12.4 20.467 12.4 33.8 0 14.667-5 26.533-15 35.6-9.867 9.067-22.2 13.6-37 13.6zM167.389 144.6c-7.333 0-14.333-1.333-21-4s-12.867-6.733-18.6-12.2c-5.733-5.467-10.267-13-13.6-22.6-3.333-9.6-5-20.667-5-33.2 0-12.533 1.667-23.6 5-33.2 3.333-9.6 7.867-17.133 13.6-22.6 5.733-5.467 11.933-9.533 18.6-12.2 6.667-2.8 13.667-4.2 21-4.2 7.467 0 14.533 1.4 21.2 4.2 6.667 2.667 12.8 6.733 18.4 12.2 5.733 5.467 10.267 13 13.6 22.6 3.333 9.6 5 20.667 5 33.2 0 12.533-1.667 23.6-5 33.2-3.333 9.6-7.867 17.133-13.6 22.6-5.6 5.467-11.733 9.533-18.4 12.2-6.667 2.667-13.733 4-21.2 4zm0-31c9.067 0 15.6-3.733 19.6-11.2 4.133-7.6 6.2-17.533 6.2-29.8s-2.067-22.2-6.2-29.8c-4.133-7.6-10.667-11.4-19.6-11.4-8.933 0-15.467 3.8-19.6 11.4-4 7.6-6 17.533-6 29.8s2 22.2 6 29.8c4.133 7.467 10.667 11.2 19.6 11.2zM283.234 144.6c-10.133 0-18.933-2.067-26.4-6.2-7.466-4.133-13.333-9.467-17.6-16-1.066-1.867-.866-3.333.6-4.4l16.8-15.2c1.467-1.467 3-1.333 4.6.4 6 7.067 12.6 10.6 19.8 10.6 5.334 0 9.467-1.467 12.4-4.4 2.934-3.067 4.4-6.667 4.4-10.8 0-3.733-1.266-7.133-3.8-10.2-2.533-3.067-6.8-4.6-12.8-4.6h-6c-2.266 0-3.4-1.133-3.4-3.4V60.2c0-2.133 1.134-3.2 3.4-3.2h5.8c4.8 0 8.267-1.267 10.4-3.8 2.134-2.533 3.2-5.4 3.2-8.6 0-4-1.466-7.2-4.4-9.6-2.8-2.533-6.266-3.8-10.4-3.8-7.2 0-12.733 3.333-16.6 10-1.066 2-2.6 2.133-4.6.4l-15.6-15.4c-1.733-1.333-2-2.8-.8-4.4 4.134-6.4 9.8-11.533 17-15.4 7.2-4 15.334-6 24.4-6 12 0 22.267 3.4 30.8 10.2 8.534 6.8 12.8 16.067 12.8 27.8 0 7.6-1.866 13.933-5.6 19-3.6 4.933-8.066 8.533-13.4 10.8 6.8 2.8 12.4 7.067 16.8 12.8 4.534 5.6 6.8 12.8 6.8 21.6 0 12.533-4.666 22.667-14 30.4-9.333 7.733-20.866 11.6-34.6 11.6z\"\n      />\n    </svg>\n  );\n}\n"},{"fileName":"ServerOverload.module.css","language":"css","code":".root {\n  padding-top: rem(120px);\n  padding-bottom: rem(120px);\n  background-color: var(--mantine-color-blue-filled);\n}\n\n.inner {\n  position: relative;\n}\n\n.image {\n  position: absolute;\n  inset: 0;\n  opacity: 0.65;\n  color: light-dark(var(--mantine-color-blue-7), var(--mantine-color-blue-9));\n}\n\n.content {\n  padding-top: rem(220px);\n  position: relative;\n  z-index: 1;\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    padding-top: rem(120px);\n  }\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  text-align: center;\n  font-weight: 900;\n  font-size: rem(38px);\n  color: var(--mantine-color-white);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    font-size: rem(32px);\n  }\n}\n\n.description {\n  max-width: rem(460px);\n  margin: auto;\n  margin-top: var(--mantine-spacing-xl);\n  margin-bottom: calc(var(--mantine-spacing-xl) * 1.5);\n  color: var(--mantine-color-blue-1);\n}\n"}],"attributes":{"title":"503 page","category":"error-pages","responsive":true,"canvas":{"center":false}}},{"component":"SliderHover","slug":"slider-hover","code":[{"fileName":"SliderHover.tsx","language":"tsx","code":"import { Slider } from '@mantine/core';\nimport { useHover } from '@mantine/hooks';\n\nexport function SliderHover() {\n  const { hovered, ref } = useHover();\n\n  return (\n    <Slider\n      defaultValue={40}\n      min={10}\n      max={90}\n      ref={ref}\n      label={null}\n      styles={{\n        thumb: {\n          transition: 'opacity 150ms ease',\n          opacity: hovered ? 1 : 0,\n        },\n      }}\n    />\n  );\n}\n"}],"attributes":{"title":"Slider with thumb visible on hover","category":"sliders","canvas":{"center":true,"maxWidth":420}}},{"component":"SliderIcon","slug":"slider-icon","code":[{"fileName":"SliderIcon.tsx","language":"tsx","code":"import { Slider, RangeSlider } from '@mantine/core';\nimport { IconHeart, IconHeartBroken } from '@tabler/icons-react';\n\nconst styles = { thumb: { borderWidth: 2, height: 26, width: 26, padding: 3 } };\n\nexport function SliderIcon() {\n  return (\n    <>\n      <Slider\n        thumbChildren={<IconHeart size=\"1rem\" stroke={1.5} />}\n        color=\"red\"\n        label={null}\n        defaultValue={40}\n        styles={styles}\n      />\n\n      <RangeSlider\n        mt=\"xl\"\n        styles={styles}\n        color=\"red\"\n        label={null}\n        defaultValue={[20, 60]}\n        thumbChildren={[\n          <IconHeart size=\"1rem\" stroke={1.5} key=\"1\" />,\n          <IconHeartBroken size=\"1rem\" stroke={1.5} key=\"2\" />,\n        ]}\n      />\n    </>\n  );\n}\n"}],"attributes":{"title":"Slider with icon thumb","category":"sliders","canvas":{"center":true,"maxWidth":420}}},{"component":"SliderInput","slug":"slider-input","code":[{"fileName":"SliderInput.tsx","language":"tsx","code":"import { useState } from 'react';\nimport { NumberInput, Slider } from '@mantine/core';\nimport classes from './SliderInput.module.css';\n\nexport function SliderInput() {\n  const [value, setValue] = useState<number | string>(2200);\n  return (\n    <div className={classes.wrapper}>\n      <NumberInput\n        value={value}\n        onChange={setValue}\n        label=\"Your daily kcal consumption\"\n        placeholder=\"2200 is an average value\"\n        step={50}\n        min={0}\n        max={8000}\n        hideControls\n        classNames={{ input: classes.input, label: classes.label }}\n      />\n      <Slider\n        max={8000}\n        step={50}\n        min={0}\n        label={null}\n        value={typeof value === 'string' ? 0 : value}\n        onChange={setValue}\n        size={2}\n        className={classes.slider}\n        classNames={classes}\n      />\n    </div>\n  );\n}\n"},{"fileName":"SliderInput.module.css","language":"css","code":".wrapper {\n  position: relative;\n}\n\n.input {\n  height: auto;\n  padding-top: rem(22px);\n  padding-bottom: rem(3px);\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n.label {\n  position: absolute;\n  pointer-events: none;\n  padding-left: var(--mantine-spacing-sm);\n  padding-top: calc(var(--mantine-spacing-sm) / 2);\n  z-index: 1;\n}\n\n.slider {\n  position: absolute;\n  width: 100%;\n  bottom: rem(-1px);\n}\n\n.thumb {\n  width: rem(16px);\n  height: rem(16px);\n}\n\n.track {\n  &::before {\n    background-color: (var(--mantine-color-gray-4), var(--mantine-color-dark-3));\n  }\n}\n\n.bar {\n  border-radius: 0;\n}\n"}],"attributes":{"title":"NumberInput with slider","category":"sliders","withColor":true,"canvas":{"center":true,"maxWidth":420}}},{"component":"SliderLabel","slug":"slider-label","code":[{"fileName":"SliderLabel.tsx","language":"tsx","code":"import { RangeSlider } from '@mantine/core';\nimport classes from './SliderLabel.module.css';\n\nexport function SliderLabel() {\n  return <RangeSlider labelAlwaysOn defaultValue={[20, 60]} classNames={classes} />;\n}\n"},{"fileName":"SliderLabel.module.css","language":"css","code":".label {\n  top: 0;\n  height: rem(28px);\n  line-height: rem(28px);\n  width: rem(34px);\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 700;\n  background-color: transparent;\n}\n\n.thumb {\n  background-color: var(--mantine-color-blue-6);\n  height: rem(28px);\n  width: rem(34px);\n  border: none;\n}\n"}],"attributes":{"title":"Range slider with labels","category":"sliders","canvas":{"center":true,"maxWidth":420}}},{"component":"SliderMarks","slug":"slider-marks","code":[{"fileName":"SliderMarks.tsx","language":"tsx","code":"import { RangeSlider, rem } from '@mantine/core';\nimport { IconPoint, IconGripVertical } from '@tabler/icons-react';\nimport classes from './SliderMarks.module.css';\n\nconst point = (\n  <IconPoint style={{ marginTop: rem(6), width: rem(10), height: rem(10) }} stroke={1.5} />\n);\n\nexport function SliderMarks() {\n  return (\n    <RangeSlider\n      mt=\"xl\"\n      mb=\"xl\"\n      classNames={classes}\n      defaultValue={[30, 60]}\n      thumbChildren={<IconGripVertical style={{ width: rem(20), height: rem(20) }} stroke={1.5} />}\n      marks={[\n        { value: 0, label: '0' },\n        { value: 12.5, label: point },\n        { value: 25, label: '25' },\n        { value: 37.5, label: point },\n        { value: 50, label: '50' },\n        { value: 62.5, label: point },\n        { value: 75, label: '75' },\n        { value: 87.5, label: point },\n        { value: 100, label: '100' },\n      ]}\n    />\n  );\n}\n"},{"fileName":"SliderMarks.module.css","language":"css","code":".mark {\n  display: flex;\n}\n\n.thumb {\n  width: rem(16px);\n  height: rem(28px);\n  background-color: var(--mantine-color-white);\n  color: var(--mantine-color-gray-5);\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-2));\n}\n"}],"attributes":{"title":"Slider with marks","category":"sliders","canvas":{"center":true,"maxWidth":420}}},{"component":"SliderWhite","slug":"slider-white","code":[{"fileName":"SliderWhite.tsx","language":"tsx","code":"import { Slider, rem } from '@mantine/core';\nimport { IconGripHorizontal } from '@tabler/icons-react';\nimport classes from './SliderWhite.module.css';\n\nexport function SliderWhite() {\n  return (\n    <Slider\n      classNames={classes}\n      thumbChildren={\n        <IconGripHorizontal style={{ width: rem(20), height: rem(20) }} stroke={1.5} />\n      }\n      defaultValue={40}\n      label={null}\n    />\n  );\n}\n"},{"fileName":"SliderWhite.module.css","language":"css","code":".thumb {\n  border: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-2));\n  width: rem(28px);\n  height: rem(22px);\n  color: var(--mantine-color-gray-5);\n  background-color: var(--mantine-color-white);\n  border-radius: var(--mantine-radius-sm);\n}\n"}],"attributes":{"title":"Slider with white thumb","category":"sliders","canvas":{"center":true,"maxWidth":420}}},{"component":"SocialButtons","slug":"social-buttons","code":[{"fileName":"SocialButtons.tsx","language":"tsx","code":"import { Button, ButtonProps, Group } from '@mantine/core';\nimport { GithubIcon, DiscordIcon, TwitterIcon } from '@mantine/ds';\nimport { GoogleIcon } from './GoogleIcon';\nimport { FacebookIcon } from './FacebookIcon';\nimport classes from './SocialButtons.module.css';\n\nexport function GoogleButton(props: ButtonProps & React.ComponentPropsWithoutRef<'button'>) {\n  return <Button leftSection={<GoogleIcon />} variant=\"default\" {...props} />;\n}\n\nexport function FacebookButton(props: ButtonProps & React.ComponentPropsWithoutRef<'button'>) {\n  return <Button leftSection={<FacebookIcon />} className={classes.facebookButton} {...props} />;\n}\n\nexport function DiscordButton(props: ButtonProps & React.ComponentPropsWithoutRef<'button'>) {\n  return (\n    <Button\n      className={classes.discordButton}\n      leftSection={<DiscordIcon style={{ width: '1rem', height: '1rem' }} />}\n      {...props}\n    />\n  );\n}\n\n// Twitter button as anchor\nexport function TwitterButton(props: ButtonProps & React.ComponentPropsWithoutRef<'a'>) {\n  return (\n    <Button\n      component=\"a\"\n      leftSection={<TwitterIcon style={{ width: '1rem', height: '1rem' }} color=\"#00ACEE\" />}\n      variant=\"default\"\n      {...props}\n    />\n  );\n}\n\nexport function GithubButton(props: ButtonProps & React.ComponentPropsWithoutRef<'button'>) {\n  return (\n    <Button\n      {...props}\n      leftSection={<GithubIcon style={{ width: '1rem', height: '1rem' }} />}\n      className={classes.githubButton}\n    />\n  );\n}\n\nexport function SocialButtons() {\n  return (\n    <Group justify=\"center\" p=\"md\">\n      <GoogleButton>Continue with Google</GoogleButton>\n      <TwitterButton href=\"https://twitter.com/mantinedev\" target=\"_blank\">\n        Follow on Twitter\n      </TwitterButton>\n      <FacebookButton>Sign in with Facebook</FacebookButton>\n      <GithubButton>Login with GitHub</GithubButton>\n      <DiscordButton>Join Discord community</DiscordButton>\n    </Group>\n  );\n}\n"},{"fileName":"FacebookIcon.tsx","language":"tsx","code":"export function FacebookIcon(props: React.ComponentProps<'svg'>) {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-prefix=\"fab\"\n      data-icon=\"facebook\"\n      className=\"svg-inline--fa fa-facebook\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      style={{ width: '0.9rem', height: '0.9rem' }}\n      {...props}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M504 256C504 119 393 8 256 8S8 119 8 256c0 123.8 90.69 226.4 209.3 245V327.7h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.3 482.4 504 379.8 504 256z\"\n      />\n    </svg>\n  );\n}\n"},{"fileName":"GoogleIcon.tsx","language":"tsx","code":"export function GoogleIcon(props: React.ComponentPropsWithoutRef<'svg'>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMidYMid\"\n      viewBox=\"0 0 256 262\"\n      style={{ width: '0.9rem', height: '0.9rem' }}\n      {...props}\n    >\n      <path\n        fill=\"#4285F4\"\n        d=\"M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027\"\n      />\n      <path\n        fill=\"#34A853\"\n        d=\"M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1\"\n      />\n      <path\n        fill=\"#FBBC05\"\n        d=\"M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782\"\n      />\n      <path\n        fill=\"#EB4335\"\n        d=\"M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251\"\n      />\n    </svg>\n  );\n}\n"},{"fileName":"SocialButtons.module.css","language":"css","code":".facebookButton {\n  background-color: #4267b2;\n  color: #fff;\n\n  @mixin hover {\n    background-color: #3a5a9b;\n  }\n}\n\n.discordButton {\n  background-color: #5865f2;\n  color: #fff;\n\n  @mixin hover {\n    background-color: #525ee0;\n  }\n}\n\n/* backgroundColor: theme.colors.dark[theme.colorScheme === 'dark' ? 9 : 6],\n        color: '#fff',\n        '&:hover': {\n          backgroundColor: theme.colors.dark[theme.colorScheme === 'dark' ? 9 : 6],\n        }, */\n\n.githubButton {\n  background-color: light-dark(var(--mantine-color-dark-6), var(--mantine-color-dark-9));\n  color: #fff;\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-dark-6), var(--mantine-color-dark-9));\n  }\n}\n"}],"attributes":{"title":"Social buttons","category":"buttons","canvas":{"center":true}}},{"component":"SplitButton","slug":"split-button","code":[{"fileName":"SplitButton.tsx","language":"tsx","code":"import { Button, Menu, Group, ActionIcon, rem, useMantineTheme } from '@mantine/core';\nimport { IconTrash, IconBookmark, IconCalendar, IconChevronDown } from '@tabler/icons-react';\nimport classes from './SplitButton.module.css';\n\nexport function SplitButton() {\n  const theme = useMantineTheme();\n\n  return (\n    <Group wrap=\"nowrap\" gap={0}>\n      <Button className={classes.button}>Send</Button>\n      <Menu transitionProps={{ transition: 'pop' }} position=\"bottom-end\" withinPortal>\n        <Menu.Target>\n          <ActionIcon\n            variant=\"filled\"\n            color={theme.primaryColor}\n            size={36}\n            className={classes.menuControl}\n          >\n            <IconChevronDown style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n          </ActionIcon>\n        </Menu.Target>\n        <Menu.Dropdown>\n          <Menu.Item\n            leftSection={\n              <IconCalendar\n                style={{ width: rem(16), height: rem(16) }}\n                stroke={1.5}\n                color={theme.colors.blue[5]}\n              />\n            }\n          >\n            Schedule for later\n          </Menu.Item>\n          <Menu.Item\n            leftSection={\n              <IconBookmark\n                style={{ width: rem(16), height: rem(16) }}\n                stroke={1.5}\n                color={theme.colors.blue[5]}\n              />\n            }\n          >\n            Save draft\n          </Menu.Item>\n          <Menu.Item\n            leftSection={\n              <IconTrash\n                style={{ width: rem(16), height: rem(16) }}\n                stroke={1.5}\n                color={theme.colors.blue[5]}\n              />\n            }\n          >\n            Delete\n          </Menu.Item>\n        </Menu.Dropdown>\n      </Menu>\n    </Group>\n  );\n}\n"},{"fileName":"SplitButton.module.css","language":"css","code":".button {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.menuControl {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  border: 0;\n  border-left: rem(1px) solid var(--mantine-color-body);\n}\n"}],"attributes":{"title":"Split button","category":"buttons","canvas":{"center":true,"maxWidth":120}}},{"component":"StatsCard","slug":"stats-card","code":[{"fileName":"StatsCard.tsx","language":"tsx","code":"import { ThemeIcon, Progress, Text, Group, Badge, Paper, rem } from '@mantine/core';\nimport { IconSwimming } from '@tabler/icons-react';\nimport classes from './StatsCard.module.css';\n\nexport function StatsCard() {\n  return (\n    <Paper radius=\"md\" withBorder className={classes.card} mt={20}>\n      <ThemeIcon className={classes.icon} size={60} radius={60}>\n        <IconSwimming style={{ width: rem(32), height: rem(32) }} stroke={1.5} />\n      </ThemeIcon>\n\n      <Text ta=\"center\" fw={700} className={classes.title}>\n        Swimming challenge\n      </Text>\n      <Text c=\"dimmed\" ta=\"center\" fz=\"sm\">\n        32 km / week\n      </Text>\n\n      <Group justify=\"space-between\" mt=\"xs\">\n        <Text fz=\"sm\" c=\"dimmed\">\n          Progress\n        </Text>\n        <Text fz=\"sm\" c=\"dimmed\">\n          62%\n        </Text>\n      </Group>\n\n      <Progress value={62} mt={5} />\n\n      <Group justify=\"space-between\" mt=\"md\">\n        <Text fz=\"sm\">20 / 36 km</Text>\n        <Badge size=\"sm\">4 days left</Badge>\n      </Group>\n    </Paper>\n  );\n}\n"},{"fileName":"StatsCard.module.css","language":"css","code":".card {\n  position: relative;\n  overflow: visible;\n  padding: var(--mantine-spacing-xl);\n  padding-top: calc(var(--mantine-spacing-xl) * 1.5 + rem(20px));\n}\n\n.icon {\n  position: absolute;\n  top: rem(-20px);\n  left: calc(50% - rem(30px));\n}\n\n.title {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  line-height: 1;\n}\n"}],"attributes":{"title":"Card with progress","category":"stats","dimmed":true,"canvas":{"center":true,"maxWidth":320}}},{"component":"StatsControls","slug":"stats-controls","code":[{"fileName":"StatsControls.tsx","language":"tsx","code":"import { useState } from 'react';\nimport dayjs from 'dayjs';\nimport { UnstyledButton, Text, Paper, Group, rem } from '@mantine/core';\nimport {\n  IconSwimming,\n  IconBike,\n  IconRun,\n  IconChevronDown,\n  IconChevronUp,\n} from '@tabler/icons-react';\nimport classes from './StatsControls.module.css';\n\nconst data = [\n  { icon: IconRun, label: 'Running' },\n  { icon: IconSwimming, label: 'Swimming' },\n  { icon: IconBike, label: 'Bike' },\n];\n\nexport function StatsControls() {\n  const [date, setDate] = useState(new Date(2021, 9, 24));\n\n  const stats = data.map((stat) => (\n    <Paper className={classes.stat} radius=\"md\" shadow=\"md\" p=\"xs\" key={stat.label}>\n      <stat.icon\n        style={{ width: rem(32), height: rem(32) }}\n        className={classes.icon}\n        stroke={1.5}\n      />\n      <div>\n        <Text className={classes.label}>{stat.label}</Text>\n        <Text fz=\"xs\" className={classes.count}>\n          <span className={classes.value}>{Math.floor(Math.random() * 6 + 4)}km</span> / 10km\n        </Text>\n      </div>\n    </Paper>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.controls}>\n        <UnstyledButton\n          className={classes.control}\n          onClick={() => setDate((current) => dayjs(current).add(1, 'day').toDate())}\n        >\n          <IconChevronUp\n            style={{ width: rem(16), height: rem(16) }}\n            className={classes.controlIcon}\n            stroke={1.5}\n          />\n        </UnstyledButton>\n\n        <div className={classes.date}>\n          <Text className={classes.day}>{dayjs(date).format('DD')}</Text>\n          <Text className={classes.month}>{dayjs(date).format('MMMM')}</Text>\n        </div>\n\n        <UnstyledButton\n          className={classes.control}\n          onClick={() => setDate((current) => dayjs(current).subtract(1, 'day').toDate())}\n        >\n          <IconChevronDown\n            style={{ width: rem(16), height: rem(16) }}\n            className={classes.controlIcon}\n            stroke={1.5}\n          />\n        </UnstyledButton>\n      </div>\n      <Group style={{ flex: 1 }}>{stats}</Group>\n    </div>\n  );\n}\n"},{"fileName":"StatsControls.module.css","language":"css","code":".root {\n  background-image: linear-gradient(\n    -60deg,\n    var(--mantine-color-blue-4) 0%,\n    var(--mantine-color-blue-7) 100%\n  );\n  padding: var(--mantine-spacing-xl);\n  border-radius: var(--mantine-radius-md);\n  display: flex;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column;\n  }\n}\n\n.icon {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: var(--mantine-spacing-lg);\n  color: var(--mantine-color-blue-6);\n}\n\n.stat {\n  min-width: rem(98px);\n  padding-top: var(--mantine-spacing-xl);\n  min-height: rem(140px);\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: var(--mantine-color-white);\n}\n\n.label {\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: var(--mantine-font-size-xs);\n  font-family: Greycliff CF, var(--mantine-font-family);\n  color: var(--mantine-color-gray-6);\n  line-height: 1.2;\n}\n\n.value {\n  font-size: var(--mantine-font-size-sm);\n  font-weight: 700;\n  color: var(--mantine-color-black);\n}\n\n.count {\n  color: var(--mantine-color-gray-6);\n}\n\n.day {\n  font-size: rem(44px);\n  font-weight: 700;\n  color: var(--mantine-color-white);\n  line-height: 1;\n  text-align: center;\n  margin-bottom: rem(5px);\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n\n.month {\n  font-size: var(--mantine-font-size-sm);\n  color: var(--mantine-color-white);\n  line-height: 1;\n  text-align: center;\n}\n\n.controls {\n  display: flex;\n  flex-direction: column;\n  margin-right: calc(var(--mantine-spacing-xl) * 2);\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: row;\n    align-items: center;\n    margin-right: 0;\n    margin-bottom: var(--mantine-spacing-xl);\n  }\n}\n\n.date {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.control {\n  height: rem(28px);\n  width: 100%;\n  color: var(--mantine-color-blue-2);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: var(--mantine-radius-md);\n  transition: background-color 50ms ease;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    height: rem(34px);\n    width: rem(34px);\n  }\n\n  @mixin hover {\n    background-color: var(--mantine-color-blue-5);\n    color: var(--mantine-color-white);\n  }\n}\n\n.controlIcon {\n  @media (max-width: $mantine-breakpoint-xs) {\n    transform: rotate(-90deg);\n  }\n}\n"}],"attributes":{"title":"Stats with controls","category":"stats","responsive":true,"canvas":{"center":true,"maxWidth":500}}},{"component":"StatsGrid","slug":"stats-grid","code":[{"fileName":"StatsGrid.tsx","language":"tsx","code":"import { Group, Paper, SimpleGrid, Text } from '@mantine/core';\nimport {\n  IconUserPlus,\n  IconDiscount2,\n  IconReceipt2,\n  IconCoin,\n  IconArrowUpRight,\n  IconArrowDownRight,\n} from '@tabler/icons-react';\nimport classes from './StatsGrid.module.css';\n\nconst icons = {\n  user: IconUserPlus,\n  discount: IconDiscount2,\n  receipt: IconReceipt2,\n  coin: IconCoin,\n};\n\nconst data = [\n  { title: 'Revenue', icon: 'receipt', value: '13,456', diff: 34 },\n  { title: 'Profit', icon: 'coin', value: '4,145', diff: -13 },\n  { title: 'Coupons usage', icon: 'discount', value: '745', diff: 18 },\n  { title: 'New customers', icon: 'user', value: '188', diff: -30 },\n] as const;\n\nexport function StatsGrid() {\n  const stats = data.map((stat) => {\n    const Icon = icons[stat.icon];\n    const DiffIcon = stat.diff > 0 ? IconArrowUpRight : IconArrowDownRight;\n\n    return (\n      <Paper withBorder p=\"md\" radius=\"md\" key={stat.title}>\n        <Group justify=\"space-between\">\n          <Text size=\"xs\" c=\"dimmed\" className={classes.title}>\n            {stat.title}\n          </Text>\n          <Icon className={classes.icon} size=\"1.4rem\" stroke={1.5} />\n        </Group>\n\n        <Group align=\"flex-end\" gap=\"xs\" mt={25}>\n          <Text className={classes.value}>{stat.value}</Text>\n          <Text c={stat.diff > 0 ? 'teal' : 'red'} fz=\"sm\" fw={500} className={classes.diff}>\n            <span>{stat.diff}%</span>\n            <DiffIcon size=\"1rem\" stroke={1.5} />\n          </Text>\n        </Group>\n\n        <Text fz=\"xs\" c=\"dimmed\" mt={7}>\n          Compared to previous month\n        </Text>\n      </Paper>\n    );\n  });\n  return (\n    <div className={classes.root}>\n      <SimpleGrid cols={{ base: 1, xs: 2, md: 4 }}>{stats}</SimpleGrid>\n    </div>\n  );\n}\n"},{"fileName":"StatsGrid.module.css","language":"css","code":".root {\n  padding: calc(var(--mantine-spacing-xl) * 1.5);\n}\n\n.value {\n  font-size: rem(24px);\n  font-weight: 700;\n  line-height: 1;\n}\n\n.diff {\n  line-height: 1;\n  display: flex;\n  align-items: center;\n}\n\n.icon {\n  color: light-dark(var(--mantine-color-gray-4), var(--mantine-color-dark-3));\n}\n\n.title {\n  font-weight: 700;\n  text-transform: uppercase;\n}\n"}],"attributes":{"title":"Stats grid","category":"stats","responsive":true,"dimmed":true,"canvas":{"center":false}}},{"component":"StatsGridIcons","slug":"stats-grid-icons","code":[{"fileName":"StatsGridIcons.tsx","language":"tsx","code":"import { Group, Paper, Text, ThemeIcon, SimpleGrid } from '@mantine/core';\nimport { IconArrowUpRight, IconArrowDownRight } from '@tabler/icons-react';\nimport classes from './StatsGridIcons.module.css';\n\nconst data = [\n  { title: 'Revenue', value: '$13,456', diff: 34 },\n  { title: 'Profit', value: '$4,145', diff: -13 },\n  { title: 'Coupons usage', value: '745', diff: 18 },\n];\n\nexport function StatsGridIcons() {\n  const stats = data.map((stat) => {\n    const DiffIcon = stat.diff > 0 ? IconArrowUpRight : IconArrowDownRight;\n\n    return (\n      <Paper withBorder p=\"md\" radius=\"md\" key={stat.title}>\n        <Group justify=\"apart\">\n          <div>\n            <Text c=\"dimmed\" tt=\"uppercase\" fw={700} fz=\"xs\" className={classes.label}>\n              {stat.title}\n            </Text>\n            <Text fw={700} fz=\"xl\">\n              {stat.value}\n            </Text>\n          </div>\n          <ThemeIcon\n            color=\"gray\"\n            variant=\"light\"\n            style={{\n              color: stat.diff > 0 ? 'var(--mantine-color-teal-6)' : 'var(--mantine-color-red-6)',\n            }}\n            size={38}\n            radius=\"md\"\n          >\n            <DiffIcon size=\"1.8rem\" stroke={1.5} />\n          </ThemeIcon>\n        </Group>\n        <Text c=\"dimmed\" fz=\"sm\" mt=\"md\">\n          <Text component=\"span\" c={stat.diff > 0 ? 'teal' : 'red'} fw={700}>\n            {stat.diff}%\n          </Text>{' '}\n          {stat.diff > 0 ? 'increase' : 'decrease'} compared to last month\n        </Text>\n      </Paper>\n    );\n  });\n\n  return (\n    <div className={classes.root}>\n      <SimpleGrid cols={{ base: 1, sm: 3 }}>{stats}</SimpleGrid>\n    </div>\n  );\n}\n"},{"fileName":"StatsGridIcons.module.css","language":"css","code":".root {\n  padding: calc(var(--mantine-spacing-xl) * 1.5);\n}\n\n.label {\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n"}],"attributes":{"title":"Stats grid with diff icons","category":"stats","responsive":true,"dimmed":true,"canvas":{"center":false}}},{"component":"StatsGroup","slug":"stats-group","code":[{"fileName":"StatsGroup.tsx","language":"tsx","code":"import { Text } from '@mantine/core';\nimport classes from './StatsGroup.module.css';\n\nconst data = [\n  {\n    title: 'Page views',\n    stats: '456,133',\n    description: '24% more than in the same month last year, 33% more that two years ago',\n  },\n  {\n    title: 'New users',\n    stats: '2,175',\n    description: '13% less compared to last month, new user engagement up by 6%',\n  },\n  {\n    title: 'Completed orders',\n    stats: '1,994',\n    description: '1994 orders were completed this month, 97% satisfaction rate',\n  },\n];\n\nexport function StatsGroup() {\n  const stats = data.map((stat) => (\n    <div key={stat.title} className={classes.stat}>\n      <Text className={classes.count}>{stat.stats}</Text>\n      <Text className={classes.title}>{stat.title}</Text>\n      <Text className={classes.description}>{stat.description}</Text>\n    </div>\n  ));\n  return <div className={classes.root}>{stats}</div>;\n}\n"},{"fileName":"StatsGroup.module.css","language":"css","code":".root {\n  display: flex;\n  background-image: linear-gradient(\n    -60deg,\n    var(--mantine-color-blue-4) 0%,\n    var(--mantine-color-blue-7) 100%\n  );\n  padding: calc(var(--mantine-spacing-xl) * 1.5);\n  border-radius: var(--mantine-radius-md);\n\n  @media (max-width: $mantine-breakpoint-sm) {\n    flex-direction: column;\n  }\n}\n\n.title {\n  color: var(--mantine-color-white);\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: var(--mantine-font-size-sm);\n}\n\n.count {\n  color: var(--mantine-color-white);\n  font-size: rem(32px);\n  line-height: 1;\n  font-weight: 700;\n  margin-bottom: var(--mantine-spacing-md);\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n\n.description {\n  color: var(--mantine-color-blue-0);\n  font-size: var(--mantine-font-size-sm);\n  margin-top: rem(5px);\n}\n\n.stat {\n  flex: 1;\n\n  & + & {\n    padding-left: var(--mantine-spacing-xl);\n    margin-left: var(--mantine-spacing-xl);\n    border-left: rem(1px) solid var(--mantine-color-blue-3);\n\n    @media (max-width: $mantine-breakpoint-sm) {\n      padding-left: 0;\n      margin-left: 0;\n      border-left: 0;\n      padding-top: var(--mantine-spacing-xl);\n      margin-top: var(--mantine-spacing-xl);\n      border-top: rem(1px) solid var(--mantine-color-blue-3);\n    }\n  }\n}\n"}],"attributes":{"title":"Grouped stats","category":"stats","responsive":true,"canvas":{"center":true,"maxWidth":920}}},{"component":"StatsRing","slug":"stats-ring","code":[{"fileName":"StatsRing.tsx","language":"tsx","code":"import { RingProgress, Text, SimpleGrid, Paper, Center, Group, rem } from '@mantine/core';\nimport { IconArrowUpRight, IconArrowDownRight } from '@tabler/icons-react';\n\nconst icons = {\n  up: IconArrowUpRight,\n  down: IconArrowDownRight,\n};\n\nconst data = [\n  { label: 'Page views', stats: '456,578', progress: 65, color: 'teal', icon: 'up' },\n  { label: 'New users', stats: '2,550', progress: 72, color: 'blue', icon: 'up' },\n  {\n    label: 'Orders',\n    stats: '4,735',\n    progress: 52,\n    color: 'red',\n    icon: 'down',\n  },\n] as const;\n\nexport function StatsRing() {\n  const stats = data.map((stat) => {\n    const Icon = icons[stat.icon];\n    return (\n      <Paper withBorder radius=\"md\" p=\"xs\" key={stat.label}>\n        <Group>\n          <RingProgress\n            size={80}\n            roundCaps\n            thickness={8}\n            sections={[{ value: stat.progress, color: stat.color }]}\n            label={\n              <Center>\n                <Icon style={{ width: rem(20), height: rem(20) }} stroke={1.5} />\n              </Center>\n            }\n          />\n\n          <div>\n            <Text c=\"dimmed\" size=\"xs\" tt=\"uppercase\" fw={700}>\n              {stat.label}\n            </Text>\n            <Text fw={700} size=\"xl\">\n              {stat.stats}\n            </Text>\n          </div>\n        </Group>\n      </Paper>\n    );\n  });\n\n  return <SimpleGrid cols={{ base: 1, sm: 3 }}>{stats}</SimpleGrid>;\n}\n"}],"attributes":{"title":"Stats with ring progress","category":"stats","responsive":true,"dimmed":true,"canvas":{"center":true,"maxWidth":840}}},{"component":"StatsRingCard","slug":"stats-ring-card","code":[{"fileName":"StatsRingCard.tsx","language":"tsx","code":"import { Text, Card, RingProgress, Group, useMantineTheme } from '@mantine/core';\nimport classes from './StatsRingCard.module.css';\n\nconst stats = [\n  { value: 447, label: 'Remaining' },\n  { value: 76, label: 'In progress' },\n];\n\nexport function StatsRingCard() {\n  const theme = useMantineTheme();\n  const completed = 1887;\n  const total = 2334;\n  const items = stats.map((stat) => (\n    <div key={stat.label}>\n      <Text className={classes.label}>{stat.value}</Text>\n      <Text size=\"xs\" c=\"dimmed\">\n        {stat.label}\n      </Text>\n    </div>\n  ));\n\n  return (\n    <Card withBorder p=\"xl\" radius=\"md\" className={classes.card}>\n      <div className={classes.inner}>\n        <div>\n          <Text fz=\"xl\" className={classes.label}>\n            Project tasks\n          </Text>\n          <div>\n            <Text className={classes.lead} mt={30}>\n              1887\n            </Text>\n            <Text fz=\"xs\" c=\"dimmed\">\n              Completed\n            </Text>\n          </div>\n          <Group mt=\"lg\">{items}</Group>\n        </div>\n\n        <div className={classes.ring}>\n          <RingProgress\n            roundCaps\n            thickness={6}\n            size={150}\n            sections={[{ value: (completed / total) * 100, color: theme.primaryColor }]}\n            label={\n              <div>\n                <Text ta=\"center\" fz=\"lg\" className={classes.label}>\n                  {((completed / total) * 100).toFixed(0)}%\n                </Text>\n                <Text ta=\"center\" fz=\"xs\" c=\"dimmed\">\n                  Completed\n                </Text>\n              </div>\n            }\n          />\n        </div>\n      </div>\n    </Card>\n  );\n}\n"},{"fileName":"StatsRingCard.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.label {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 700;\n  line-height: 1;\n}\n\n.lead {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  font-weight: 700;\n  font-size: rem(22px);\n  line-height: 1;\n}\n\n.inner {\n  display: flex;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    flex-direction: column;\n  }\n}\n\n.ring {\n  flex: 1;\n  display: flex;\n  justify-content: flex-end;\n\n  @media (max-width: $mantine-breakpoint-xs) {\n    justify-content: center;\n    margin-top: var(--mantine-spacing-md);\n  }\n}\n"}],"attributes":{"title":"Stats card with progress","category":"app-cards","withColor":true,"responsive":true,"dimmed":true,"canvas":{"center":true,"maxWidth":420}}},{"component":"StatsSegments","slug":"stats-segments","code":[{"fileName":"StatsSegments.tsx","language":"tsx","code":"import { Progress, Box, Text, Group, Paper, SimpleGrid, rem } from '@mantine/core';\nimport { IconArrowUpRight, IconDeviceAnalytics } from '@tabler/icons-react';\nimport classes from './StatsSegments.module.css';\n\nconst data = [\n  { label: 'Mobile', count: '204,001', part: 59, color: '#47d6ab' },\n  { label: 'Desktop', count: '121,017', part: 35, color: '#03141a' },\n  { label: 'Tablet', count: '31,118', part: 6, color: '#4fcdf7' },\n];\n\nexport function StatsSegments() {\n  const segments = data.map((segment) => (\n    <Progress.Section value={segment.part} color={segment.color} key={segment.color}>\n      {segment.part > 10 && <Progress.Label>{segment.part}%</Progress.Label>}\n    </Progress.Section>\n  ));\n\n  const descriptions = data.map((stat) => (\n    <Box key={stat.label} style={{ borderBottomColor: stat.color }} className={classes.stat}>\n      <Text tt=\"uppercase\" fz=\"xs\" c=\"dimmed\" fw={700}>\n        {stat.label}\n      </Text>\n\n      <Group justify=\"space-between\" align=\"flex-end\" gap={0}>\n        <Text fw={700}>{stat.count}</Text>\n        <Text c={stat.color} fw={700} size=\"sm\" className={classes.statCount}>\n          {stat.part}%\n        </Text>\n      </Group>\n    </Box>\n  ));\n\n  return (\n    <Paper withBorder p=\"md\" radius=\"md\">\n      <Group justify=\"space-between\">\n        <Group align=\"flex-end\" gap=\"xs\">\n          <Text fz=\"xl\" fw={700}>\n            345,765\n          </Text>\n          <Text c=\"teal\" className={classes.diff} fz=\"sm\" fw={700}>\n            <span>18%</span>\n            <IconArrowUpRight size=\"1rem\" style={{ marginBottom: rem(4) }} stroke={1.5} />\n          </Text>\n        </Group>\n        <IconDeviceAnalytics size=\"1.4rem\" className={classes.icon} stroke={1.5} />\n      </Group>\n\n      <Text c=\"dimmed\" fz=\"sm\">\n        Page views compared to previous month\n      </Text>\n\n      <Progress.Root size={34} classNames={{ label: classes.progressLabel }} mt={40}>\n        {segments}\n      </Progress.Root>\n      <SimpleGrid cols={{ base: 1, xs: 3 }} mt=\"xl\">\n        {descriptions}\n      </SimpleGrid>\n    </Paper>\n  );\n}\n"},{"fileName":"statsSegments.module.css","language":"css","code":".progressLabel {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  line-height: 1;\n  font-size: var(--mantine-font-size-sm);\n}\n\n.stat {\n  border-bottom: rem(3px) solid;\n  padding-bottom: rem(5px);\n}\n\n.statCount {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  line-height: 1.3;\n}\n\n.diff {\n  font-family: Greycliff CF, var(--mantine-font-family);\n  display: flex;\n  align-items: center;\n}\n\n.icon {\n  color: light-dark(var(--mantine-color-gray-4), var(--mantine-color-dark-3));\n}\n"}],"attributes":{"title":"Stats with segments","category":"stats","responsive":true,"dimmed":true,"canvas":{"center":true,"maxWidth":440}}},{"component":"Subgrid","slug":"subgrid","code":[{"fileName":"Subgrid.tsx","language":"tsx","code":"import { SimpleGrid, Skeleton, Container, Stack, useMantineTheme, px } from '@mantine/core';\n\nconst getChild = (height: number) => <Skeleton height={height} radius=\"md\" animate={false} />;\nconst BASE_HEIGHT = 360;\nconst getSubHeight = (children: number, spacing: number) =>\n  BASE_HEIGHT / children - spacing * ((children - 1) / children);\n\nexport function Subgrid() {\n  const theme = useMantineTheme();\n  return (\n    <Container my=\"md\">\n      <SimpleGrid cols={{ base: 1, xs: 4 }}>\n        {getChild(BASE_HEIGHT)}\n        <Stack>\n          {getChild(getSubHeight(2, px(theme.spacing.md) as number))}\n          {getChild(getSubHeight(2, px(theme.spacing.md) as number))}\n        </Stack>\n        <Stack>\n          {getChild(getSubHeight(3, px(theme.spacing.md) as number))}\n          {getChild(getSubHeight(3, px(theme.spacing.md) as number))}\n          {getChild(getSubHeight(3, px(theme.spacing.md) as number))}\n        </Stack>\n        {getChild(BASE_HEIGHT)}\n      </SimpleGrid>\n    </Container>\n  );\n}\n"}],"attributes":{"title":"Grid with vertical items","category":"grids","responsive":true,"canvas":{"center":false}}},{"component":"SwitchesCard","slug":"switches-card","code":[{"fileName":"SwitchesCard.tsx","language":"tsx","code":"import { Card, Group, Switch, Text } from '@mantine/core';\nimport classes from './SwitchesCard.module.css';\n\nconst data = [\n  { title: 'Messages', description: 'Direct messages you have received from other users' },\n  { title: 'Review requests', description: 'Code review requests from your team members' },\n  { title: 'Comments', description: 'Daily digest with comments on your posts' },\n  {\n    title: 'Recommendations',\n    description: 'Digest with best community posts from previous week',\n  },\n];\n\nexport function SwitchesCard() {\n  const items = data.map((item) => (\n    <Group justify=\"space-between\" className={classes.item} wrap=\"nowrap\" gap=\"xl\" key={item.title}>\n      <div>\n        <Text>{item.title}</Text>\n        <Text size=\"xs\" c=\"dimmed\">\n          {item.description}\n        </Text>\n      </div>\n      <Switch onLabel=\"ON\" offLabel=\"OFF\" className={classes.switch} size=\"lg\" />\n    </Group>\n  ));\n\n  return (\n    <Card withBorder radius=\"md\" p=\"xl\" className={classes.card}>\n      <Text fz=\"lg\" className={classes.title} fw={500}>\n        Configure notifications\n      </Text>\n      <Text fz=\"xs\" c=\"dimmed\" mt={3} mb=\"xl\">\n        Choose what notifications you want to receive\n      </Text>\n      {items}\n    </Card>\n  );\n}\n"},{"fileName":"SwitchesCard.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.item {\n  & + & {\n    padding-top: var(--mantine-spacing-sm);\n    margin-top: var(--mantine-spacing-sm);\n    border-top: rem(1px) solid light-dark(var(--mantine-color-gray-2) var(--mantine-color-dark-4));\n  }\n}\n\n.switch {\n  & * {\n    cursor: pointer;\n  }\n}\n\n.title {\n  line-height: 1;\n}\n"}],"attributes":{"title":"Card with switches","category":"app-cards","withColor":true,"responsive":true,"dimmed":true,"canvas":{"center":true,"maxWidth":540}}},{"component":"TableOfContents","slug":"table-of-contents","code":[{"fileName":"TableOfContents.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { Box, Text, Group, rem } from '@mantine/core';\nimport { IconListSearch } from '@tabler/icons-react';\nimport classes from './TableOfContents.module.css';\n\nconst links = [\n  { label: 'Usage', link: '#usage', order: 1 },\n  { label: 'Position and placement', link: '#position', order: 1 },\n  { label: 'With other overlays', link: '#overlays', order: 1 },\n  { label: 'Manage focus', link: '#focus', order: 1 },\n  { label: 'Examples', link: '#1', order: 1 },\n  { label: 'Show on focus', link: '#2', order: 2 },\n  { label: 'Show on hover', link: '#3', order: 2 },\n  { label: 'With form', link: '#4', order: 2 },\n];\n\nconst active = '#overlays';\n\nexport function TableOfContents() {\n  const items = links.map((item) => (\n    <Box<'a'>\n      component=\"a\"\n      href={item.link}\n      onClick={(event) => event.preventDefault()}\n      key={item.label}\n      className={cx(classes.link, { [classes.linkActive]: active === item.link })}\n      style={{ paddingLeft: `calc(${item.order} * var(--mantine-spacing-md))` }}\n    >\n      {item.label}\n    </Box>\n  ));\n\n  return (\n    <div>\n      <Group mb=\"md\">\n        <IconListSearch style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n        <Text>Table of contents</Text>\n      </Group>\n      {items}\n    </div>\n  );\n}\n"},{"fileName":"TableOfContents.module.css","language":"css","code":".link {\n  display: block;\n  text-decoration: none;\n  color: var(--mantine-color-text);\n  line-height: 1.2;\n  font-size: var(--mantine-font-size-sm);\n  padding: var(--mantine-spacing-xs);\n  border-top-right-radius: var(--mantine-radius-sm);\n  border-bottom-right-radius: var(--mantine-radius-sm);\n  border-left: rem(1px) solid light-dark(var(--mantine-color-gray-3), var(--mantine-color-dark-4));\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.linkActive {\n  font-weight: 500;\n  border-left-color: light-dark(var(--mantine-color-blue-6), var(--mantine-color-blue-4));\n  color: light-dark(var(--mantine-color-blue-6), var(--mantine-color-blue-4));\n\n  &,\n  &:hover {\n    background-color: var(--mantine-color-blue-light) !important;\n  }\n}\n"}],"attributes":{"title":"Table of contents","category":"toc","canvas":{"center":true,"maxWidth":280}}},{"component":"TableOfContentsFloating","slug":"table-of-contents-floating","code":[{"fileName":"TableOfContentsFloating.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { useState } from 'react';\nimport { Box, Text, Group, rem } from '@mantine/core';\nimport { IconListSearch } from '@tabler/icons-react';\nimport classes from './TableOfContentsFloating.module.css';\n\nconst links = [\n  { label: 'Usage', link: '#usage', order: 1 },\n  { label: 'Position and placement', link: '#position', order: 1 },\n  { label: 'With other overlays', link: '#overlays', order: 1 },\n  { label: 'Manage focus', link: '#focus', order: 1 },\n  { label: 'Examples', link: '#1', order: 1 },\n  { label: 'Show on focus', link: '#2', order: 2 },\n  { label: 'Show on hover', link: '#3', order: 2 },\n  { label: 'With form', link: '#4', order: 2 },\n];\n\nexport function TableOfContentsFloating() {\n  const [active, setActive] = useState(2);\n\n  const items = links.map((item, index) => (\n    <Box<'a'>\n      component=\"a\"\n      href={item.link}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(index);\n      }}\n      key={item.label}\n      className={cx(classes.link, { [classes.linkActive]: active === index })}\n      style={{ paddingLeft: `calc(${item.order} * var(--mantine-spacing-md))` }}\n    >\n      {item.label}\n    </Box>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <Group mb=\"md\">\n        <IconListSearch style={{ width: rem(18), height: rem(18) }} stroke={1.5} />\n        <Text>Table of contents</Text>\n      </Group>\n      <div className={classes.links}>\n        <div\n          className={classes.indicator}\n          style={{\n            transform: `translateY(calc(${active} * var(--link-height) + var(--indicator-offset)))`,\n          }}\n        />\n        {items}\n      </div>\n    </div>\n  );\n}\n"},{"fileName":"TableOfContentsFloating.module.css","language":"css","code":".root {\n  --link-height: rem(38px);\n  --indicator-size: rem(10px);\n  --indicator-offset: calc((var(--link-height) - var(--indicator-size)) / 2);\n  position: relative;\n}\n\n.link {\n  display: block;\n  text-decoration: none;\n  color: var(--mantine-color-text);\n  line-height: var(--link-height);\n  font-size: var(--mantine-font-size-sm);\n  height: var(--link-height);\n  border-top-right-radius: var(--mantine-radius-sm);\n  border-bottom-right-radius: var(--mantine-radius-sm);\n  border-left: rem(2px) solid light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-4));\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.linkActive {\n  font-weight: 500;\n  color: light-dark(var(--mantine-color-blue-7), var(--mantine-color-blue-4));\n}\n\n.indicator {\n  transition: transform 150ms ease;\n  border: rem(2px) solid light-dark(var(--mantine-color-blue-7), var(--mantine-color-blue-4));\n  background-color: light-dark(var(--mantine-color-white), var(--mantine-color-dark-7));\n  height: var(--indicator-size);\n  width: var(--indicator-size);\n  border-radius: var(--indicator-size);\n  position: absolute;\n  left: calc(var(--indicator-size) / -2 + rem(1));\n}\n"}],"attributes":{"title":"Table of contents indicator","category":"toc","canvas":{"center":true,"maxWidth":280}}},{"component":"TableReviews","slug":"table-reviews","code":[{"fileName":"TableReviews.tsx","language":"tsx","code":"import { Table, Progress, Anchor, Text, Group } from '@mantine/core';\nimport classes from './TableReviews.module.css';\n\nconst data = [\n  {\n    title: 'Foundation',\n    author: 'Isaac Asimov',\n    year: 1951,\n    reviews: { positive: 2223, negative: 259 },\n  },\n  {\n    title: 'Frankenstein',\n    author: 'Mary Shelley',\n    year: 1818,\n    reviews: { positive: 5677, negative: 1265 },\n  },\n  {\n    title: 'Solaris',\n    author: 'Stanislaw Lem',\n    year: 1961,\n    reviews: { positive: 3487, negative: 1845 },\n  },\n  {\n    title: 'Dune',\n    author: 'Frank Herbert',\n    year: 1965,\n    reviews: { positive: 8576, negative: 663 },\n  },\n  {\n    title: 'The Left Hand of Darkness',\n    author: 'Ursula K. Le Guin',\n    year: 1969,\n    reviews: { positive: 6631, negative: 993 },\n  },\n  {\n    title: 'A Scanner Darkly',\n    author: 'Philip K Dick',\n    year: 1977,\n    reviews: { positive: 8124, negative: 1847 },\n  },\n];\n\nexport function TableReviews() {\n  const rows = data.map((row) => {\n    const totalReviews = row.reviews.negative + row.reviews.positive;\n    const positiveReviews = (row.reviews.positive / totalReviews) * 100;\n    const negativeReviews = (row.reviews.negative / totalReviews) * 100;\n\n    return (\n      <Table.Tr key={row.title}>\n        <Table.Td>\n          <Anchor component=\"button\" fz=\"sm\">\n            {row.title}\n          </Anchor>\n        </Table.Td>\n        <Table.Td>{row.year}</Table.Td>\n        <Table.Td>\n          <Anchor component=\"button\" fz=\"sm\">\n            {row.author}\n          </Anchor>\n        </Table.Td>\n        <Table.Td>{Intl.NumberFormat().format(totalReviews)}</Table.Td>\n        <Table.Td>\n          <Group justify=\"space-between\">\n            <Text fz=\"xs\" c=\"teal\" fw={700}>\n              {positiveReviews.toFixed(0)}%\n            </Text>\n            <Text fz=\"xs\" c=\"red\" fw={700}>\n              {negativeReviews.toFixed(0)}%\n            </Text>\n          </Group>\n          <Progress.Root>\n            <Progress.Section\n              className={classes.progressSection}\n              value={positiveReviews}\n              color=\"teal\"\n            />\n\n            <Progress.Section\n              className={classes.progressSection}\n              value={negativeReviews}\n              color=\"red\"\n            />\n          </Progress.Root>\n        </Table.Td>\n      </Table.Tr>\n    );\n  });\n\n  return (\n    <Table.ScrollContainer minWidth={800}>\n      <Table verticalSpacing=\"xs\">\n        <Table.Thead>\n          <Table.Tr>\n            <Table.Th>Book title</Table.Th>\n            <Table.Th>Year</Table.Th>\n            <Table.Th>AuTable.Thor</Table.Th>\n            <Table.Th>Reviews</Table.Th>\n            <Table.Th>Reviews distribution</Table.Th>\n          </Table.Tr>\n        </Table.Thead>\n        <Table.Tbody>{rows}</Table.Tbody>\n      </Table>\n    </Table.ScrollContainer>\n  );\n}\n"},{"fileName":"TableReviews.module.css","language":"css","code":".progressSection {\n  &:not(:first-of-type) {\n    border-left: rem(3px) solid light-dark(var(--mantine-color-white), var(--mantine-color-dark-7));\n  }\n}\n"}],"attributes":{"title":"Table with progress","category":"tables","canvas":{"center":true,"maxWidth":920}}},{"component":"TableScrollArea","slug":"table-scroll-area","code":[{"fileName":"TableScrollArea.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { useState } from 'react';\nimport { Table, ScrollArea } from '@mantine/core';\nimport classes from './TableScrollArea.module.css';\n\nconst data = [\n  {\n    name: 'Athena Weissnat',\n    company: 'Little - Rippin',\n    email: 'Elouise.Prohaska@yahoo.com',\n  },\n  {\n    name: 'Deangelo Runolfsson',\n    company: 'Greenfelder - Krajcik',\n    email: 'Kadin_Trantow87@yahoo.com',\n  },\n  {\n    name: 'Danny Carter',\n    company: 'Kohler and Sons',\n    email: 'Marina3@hotmail.com',\n  },\n  {\n    name: 'Trace Tremblay PhD',\n    company: 'Crona, Aufderhar and Senger',\n    email: 'Antonina.Pouros@yahoo.com',\n  },\n  {\n    name: 'Derek Dibbert',\n    company: 'Gottlieb LLC',\n    email: 'Abagail29@hotmail.com',\n  },\n  {\n    name: 'Viola Bernhard',\n    company: 'Funk, Rohan and Kreiger',\n    email: 'Jamie23@hotmail.com',\n  },\n  {\n    name: 'Austin Jacobi',\n    company: 'Botsford - Corwin',\n    email: 'Genesis42@yahoo.com',\n  },\n  {\n    name: 'Hershel Mosciski',\n    company: 'Okuneva, Farrell and Kilback',\n    email: 'Idella.Stehr28@yahoo.com',\n  },\n  {\n    name: 'Mylene Ebert',\n    company: 'Kirlin and Sons',\n    email: 'Hildegard17@hotmail.com',\n  },\n  {\n    name: 'Lou Trantow',\n    company: 'Parisian - Lemke',\n    email: 'Hillard.Barrows1@hotmail.com',\n  },\n  {\n    name: 'Dariana Weimann',\n    company: 'Schowalter - Donnelly',\n    email: 'Colleen80@gmail.com',\n  },\n  {\n    name: 'Dr. Christy Herman',\n    company: 'VonRueden - Labadie',\n    email: 'Lilyan98@gmail.com',\n  },\n  {\n    name: 'Katelin Schuster',\n    company: 'Jacobson - Smitham',\n    email: 'Erich_Brekke76@gmail.com',\n  },\n  {\n    name: 'Melyna Macejkovic',\n    company: 'Schuster LLC',\n    email: 'Kylee4@yahoo.com',\n  },\n  {\n    name: 'Pinkie Rice',\n    company: 'Wolf, Trantow and Zulauf',\n    email: 'Fiona.Kutch@hotmail.com',\n  },\n  {\n    name: 'Brain Kreiger',\n    company: 'Lueilwitz Group',\n    email: 'Rico98@hotmail.com',\n  },\n  {\n    name: 'Myrtice McGlynn',\n    company: 'Feest, Beahan and Johnston',\n    email: 'Julius_Tremblay29@hotmail.com',\n  },\n  {\n    name: 'Chester Carter PhD',\n    company: 'Gaylord - Labadie',\n    email: 'Jensen_McKenzie@hotmail.com',\n  },\n  {\n    name: 'Mrs. Ericka Bahringer',\n    company: 'Conn and Sons',\n    email: 'Lisandro56@hotmail.com',\n  },\n  {\n    name: 'Korbin Buckridge Sr.',\n    company: 'Mraz, Rolfson and Predovic',\n    email: 'Leatha9@yahoo.com',\n  },\n  {\n    name: 'Dr. Daisy Becker',\n    company: 'Carter - Mueller',\n    email: 'Keaton_Sanford27@gmail.com',\n  },\n  {\n    name: 'Derrick Buckridge Sr.',\n    company: \"O'Reilly LLC\",\n    email: 'Kay83@yahoo.com',\n  },\n  {\n    name: 'Ernie Hickle',\n    company: \"Terry, O'Reilly and Farrell\",\n    email: 'Americo.Leffler89@gmail.com',\n  },\n  {\n    name: 'Jewell Littel',\n    company: \"O'Connell Group\",\n    email: 'Hester.Hettinger9@hotmail.com',\n  },\n  {\n    name: 'Cyrus Howell',\n    company: 'Windler, Yost and Fadel',\n    email: 'Rick0@gmail.com',\n  },\n  {\n    name: 'Dr. Orie Jast',\n    company: 'Hilll - Pacocha',\n    email: 'Anna56@hotmail.com',\n  },\n  {\n    name: 'Luisa Murphy',\n    company: 'Turner and Sons',\n    email: 'Christine32@yahoo.com',\n  },\n  {\n    name: 'Lea Witting',\n    company: 'Hodkiewicz Inc',\n    email: 'Ford_Kovacek4@yahoo.com',\n  },\n  {\n    name: 'Kelli Runolfsson',\n    company: \"Feest - O'Hara\",\n    email: 'Dimitri87@yahoo.com',\n  },\n  {\n    name: 'Brook Gaylord',\n    company: 'Conn, Huel and Nader',\n    email: 'Immanuel77@gmail.com',\n  },\n];\n\nexport function TableScrollArea() {\n  const [scrolled, setScrolled] = useState(false);\n\n  const rows = data.map((row) => (\n    <Table.Tr key={row.name}>\n      <Table.Td>{row.name}</Table.Td>\n      <Table.Td>{row.email}</Table.Td>\n      <Table.Td>{row.company}</Table.Td>\n    </Table.Tr>\n  ));\n\n  return (\n    <ScrollArea h={300} onScrollPositionChange={({ y }) => setScrolled(y !== 0)}>\n      <Table miw={700}>\n        <Table.Thead className={cx(classes.header, { [classes.scrolled]: scrolled })}>\n          <Table.Tr>\n            <Table.Th>Name</Table.Th>\n            <Table.Th>Email</Table.Th>\n            <Table.Th>Company</Table.Th>\n          </Table.Tr>\n        </Table.Thead>\n        <Table.Tbody>{rows}</Table.Tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n"},{"fileName":"TableScrollArea.module.css","language":"css","code":".header {\n  position: sticky;\n  top: 0;\n  background-color: var(--mantine-color-body);\n  transition: box-shadow 150ms ease;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-bottom: rem(1px) solid\n      light-dark(var(--mantine-color-gray-2), var(--mantine-color-dark-3));\n  }\n}\n\n.scrolled {\n  box-shadow: var(--mantine-shadow-sm);\n}\n"}],"attributes":{"title":"Table with sticky header","category":"tables","canvas":{"center":true,"maxWidth":920}}},{"component":"TableSelection","slug":"table-selection","code":[{"fileName":"TableSelection.tsx","language":"tsx","code":"import cx from 'clsx';\nimport { useState } from 'react';\nimport { Table, Checkbox, ScrollArea, Group, Avatar, Text, rem } from '@mantine/core';\nimport classes from './TableSelection.module.css';\n\nconst data = [\n  {\n    id: '1',\n    avatar:\n      'https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Robert Wolfkisser',\n    job: 'Engineer',\n    email: 'rob_wolf@gmail.com',\n  },\n  {\n    id: '2',\n    avatar:\n      'https://images.unsplash.com/photo-1586297135537-94bc9ba060aa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jill Jailbreaker',\n    job: 'Engineer',\n    email: 'jj@breaker.com',\n  },\n  {\n    id: '3',\n    avatar:\n      'https://images.unsplash.com/photo-1632922267756-9b71242b1592?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Henry Silkeater',\n    job: 'Designer',\n    email: 'henry@silkeater.io',\n  },\n  {\n    id: '4',\n    avatar:\n      'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Bill Horsefighter',\n    job: 'Designer',\n    email: 'bhorsefighter@gmail.com',\n  },\n  {\n    id: '5',\n    avatar:\n      'https://images.unsplash.com/photo-1630841539293-bd20634c5d72?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jeremy Footviewer',\n    job: 'Manager',\n    email: 'jeremy@foot.dev',\n  },\n];\n\nexport function TableSelection() {\n  const [selection, setSelection] = useState(['1']);\n  const toggleRow = (id: string) =>\n    setSelection((current) =>\n      current.includes(id) ? current.filter((item) => item !== id) : [...current, id]\n    );\n  const toggleAll = () =>\n    setSelection((current) => (current.length === data.length ? [] : data.map((item) => item.id)));\n\n  const rows = data.map((item) => {\n    const selected = selection.includes(item.id);\n    return (\n      <Table.Tr key={item.id} className={cx({ [classes.rowSelected]: selected })}>\n        <Table.Td>\n          <Checkbox checked={selection.includes(item.id)} onChange={() => toggleRow(item.id)} />\n        </Table.Td>\n        <Table.Td>\n          <Group gap=\"sm\">\n            <Avatar size={26} src={item.avatar} radius={26} />\n            <Text size=\"sm\" fw={500}>\n              {item.name}\n            </Text>\n          </Group>\n        </Table.Td>\n        <Table.Td>{item.email}</Table.Td>\n        <Table.Td>{item.job}</Table.Td>\n      </Table.Tr>\n    );\n  });\n\n  return (\n    <ScrollArea>\n      <Table miw={800} verticalSpacing=\"sm\">\n        <Table.Thead>\n          <Table.Tr>\n            <Table.Th style={{ width: rem(40) }}>\n              <Checkbox\n                onChange={toggleAll}\n                checked={selection.length === data.length}\n                indeterminate={selection.length > 0 && selection.length !== data.length}\n              />\n            </Table.Th>\n            <Table.Th>User</Table.Th>\n            <Table.Th>Email</Table.Th>\n            <Table.Th>Job</Table.Th>\n          </Table.Tr>\n        </Table.Thead>\n        <Table.Tbody>{rows}</Table.Tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n"},{"fileName":"TableSelection.module.css","language":"css","code":".rowSelected {\n  background-color: var(--mantine-color-blue-light);\n}\n"}],"attributes":{"title":"Table with selection","category":"tables","withColor":true,"canvas":{"center":true,"maxWidth":800}}},{"component":"TableSort","slug":"table-sort","code":[{"fileName":"TableSort.tsx","language":"tsx","code":"import { useState } from 'react';\nimport {\n  Table,\n  ScrollArea,\n  UnstyledButton,\n  Group,\n  Text,\n  Center,\n  TextInput,\n  rem,\n  keys,\n} from '@mantine/core';\nimport { IconSelector, IconChevronDown, IconChevronUp, IconSearch } from '@tabler/icons-react';\nimport classes from './TableSort.module.css';\n\ninterface RowData {\n  name: string;\n  email: string;\n  company: string;\n}\n\ninterface ThProps {\n  children: React.ReactNode;\n  reversed: boolean;\n  sorted: boolean;\n  onSort(): void;\n}\n\nfunction Th({ children, reversed, sorted, onSort }: ThProps) {\n  const Icon = sorted ? (reversed ? IconChevronUp : IconChevronDown) : IconSelector;\n  return (\n    <Table.Th className={classes.th}>\n      <UnstyledButton onClick={onSort} className={classes.control}>\n        <Group justify=\"space-between\">\n          <Text fw={500} fz=\"sm\">\n            {children}\n          </Text>\n          <Center className={classes.icon}>\n            <Icon style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n          </Center>\n        </Group>\n      </UnstyledButton>\n    </Table.Th>\n  );\n}\n\nfunction filterData(data: RowData[], search: string) {\n  const query = search.toLowerCase().trim();\n  return data.filter((item) =>\n    keys(data[0]).some((key) => item[key].toLowerCase().includes(query))\n  );\n}\n\nfunction sortData(\n  data: RowData[],\n  payload: { sortBy: keyof RowData | null; reversed: boolean; search: string }\n) {\n  const { sortBy } = payload;\n\n  if (!sortBy) {\n    return filterData(data, payload.search);\n  }\n\n  return filterData(\n    [...data].sort((a, b) => {\n      if (payload.reversed) {\n        return b[sortBy].localeCompare(a[sortBy]);\n      }\n\n      return a[sortBy].localeCompare(b[sortBy]);\n    }),\n    payload.search\n  );\n}\n\nconst data = [\n  {\n    name: 'Athena Weissnat',\n    company: 'Little - Rippin',\n    email: 'Elouise.Prohaska@yahoo.com',\n  },\n  {\n    name: 'Deangelo Runolfsson',\n    company: 'Greenfelder - Krajcik',\n    email: 'Kadin_Trantow87@yahoo.com',\n  },\n  {\n    name: 'Danny Carter',\n    company: 'Kohler and Sons',\n    email: 'Marina3@hotmail.com',\n  },\n  {\n    name: 'Trace Tremblay PhD',\n    company: 'Crona, Aufderhar and Senger',\n    email: 'Antonina.Pouros@yahoo.com',\n  },\n  {\n    name: 'Derek Dibbert',\n    company: 'Gottlieb LLC',\n    email: 'Abagail29@hotmail.com',\n  },\n  {\n    name: 'Viola Bernhard',\n    company: 'Funk, Rohan and Kreiger',\n    email: 'Jamie23@hotmail.com',\n  },\n  {\n    name: 'Austin Jacobi',\n    company: 'Botsford - Corwin',\n    email: 'Genesis42@yahoo.com',\n  },\n  {\n    name: 'Hershel Mosciski',\n    company: 'Okuneva, Farrell and Kilback',\n    email: 'Idella.Stehr28@yahoo.com',\n  },\n  {\n    name: 'Mylene Ebert',\n    company: 'Kirlin and Sons',\n    email: 'Hildegard17@hotmail.com',\n  },\n  {\n    name: 'Lou Trantow',\n    company: 'Parisian - Lemke',\n    email: 'Hillard.Barrows1@hotmail.com',\n  },\n  {\n    name: 'Dariana Weimann',\n    company: 'Schowalter - Donnelly',\n    email: 'Colleen80@gmail.com',\n  },\n  {\n    name: 'Dr. Christy Herman',\n    company: 'VonRueden - Labadie',\n    email: 'Lilyan98@gmail.com',\n  },\n  {\n    name: 'Katelin Schuster',\n    company: 'Jacobson - Smitham',\n    email: 'Erich_Brekke76@gmail.com',\n  },\n  {\n    name: 'Melyna Macejkovic',\n    company: 'Schuster LLC',\n    email: 'Kylee4@yahoo.com',\n  },\n  {\n    name: 'Pinkie Rice',\n    company: 'Wolf, Trantow and Zulauf',\n    email: 'Fiona.Kutch@hotmail.com',\n  },\n  {\n    name: 'Brain Kreiger',\n    company: 'Lueilwitz Group',\n    email: 'Rico98@hotmail.com',\n  },\n];\n\nexport function TableSort() {\n  const [search, setSearch] = useState('');\n  const [sortedData, setSortedData] = useState(data);\n  const [sortBy, setSortBy] = useState<keyof RowData | null>(null);\n  const [reverseSortDirection, setReverseSortDirection] = useState(false);\n\n  const setSorting = (field: keyof RowData) => {\n    const reversed = field === sortBy ? !reverseSortDirection : false;\n    setReverseSortDirection(reversed);\n    setSortBy(field);\n    setSortedData(sortData(data, { sortBy: field, reversed, search }));\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    setSearch(value);\n    setSortedData(sortData(data, { sortBy, reversed: reverseSortDirection, search: value }));\n  };\n\n  const rows = sortedData.map((row) => (\n    <Table.Tr key={row.name}>\n      <Table.Td>{row.name}</Table.Td>\n      <Table.Td>{row.email}</Table.Td>\n      <Table.Td>{row.company}</Table.Td>\n    </Table.Tr>\n  ));\n\n  return (\n    <ScrollArea>\n      <TextInput\n        placeholder=\"Search by any field\"\n        mb=\"md\"\n        leftSection={<IconSearch style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n        value={search}\n        onChange={handleSearchChange}\n      />\n      <Table horizontalSpacing=\"md\" verticalSpacing=\"xs\" miw={700} layout=\"fixed\">\n        <Table.Tbody>\n          <Table.Tr>\n            <Th\n              sorted={sortBy === 'name'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('name')}\n            >\n              Name\n            </Th>\n            <Th\n              sorted={sortBy === 'email'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('email')}\n            >\n              Email\n            </Th>\n            <Th\n              sorted={sortBy === 'company'}\n              reversed={reverseSortDirection}\n              onSort={() => setSorting('company')}\n            >\n              Company\n            </Th>\n          </Table.Tr>\n        </Table.Tbody>\n        <Table.Tbody>\n          {rows.length > 0 ? (\n            rows\n          ) : (\n            <Table.Tr>\n              <Table.Td colSpan={Object.keys(data[0]).length}>\n                <Text fw={500} ta=\"center\">\n                  Nothing found\n                </Text>\n              </Table.Td>\n            </Table.Tr>\n          )}\n        </Table.Tbody>\n      </Table>\n    </ScrollArea>\n  );\n}\n"},{"fileName":"TableSort.module.css","language":"css","code":".th {\n  padding: 0;\n}\n\n.control {\n  width: 100%;\n  padding: var(--mantine-spacing-xs) var(--mantine-spacing-md);\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-6));\n  }\n}\n\n.icon {\n  width: rem(21px);\n  height: rem(21px);\n  border-radius: rem(21px);\n}\n"}],"attributes":{"title":"Table with search and sort","category":"tables","canvas":{"center":true,"maxWidth":920}}},{"component":"TaskCard","slug":"task-card","code":[{"fileName":"TaskCard.tsx","language":"tsx","code":"import { Card, Avatar, Text, Progress, Badge, Group, ActionIcon } from '@mantine/core';\nimport { MantineLogo } from '@mantine/ds';\nimport { IconUpload } from '@tabler/icons-react';\n\nconst avatars = [\n  'https://avatars.githubusercontent.com/u/10353856?s=460&u=88394dfd67727327c1f7670a1764dc38a8a24831&v=4',\n  'https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=250&q=80',\n  'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80',\n];\n\nexport function TaskCard() {\n  return (\n    <Card withBorder padding=\"lg\" radius=\"md\">\n      <Group justify=\"space-between\">\n        <MantineLogo type=\"mark\" size=\"2rem\" />\n        <Badge>12 days left</Badge>\n      </Group>\n\n      <Text fz=\"lg\" fw={500} mt=\"md\">\n        5.3 minor release (September 2022)\n      </Text>\n      <Text fz=\"sm\" c=\"dimmed\" mt={5}>\n        Form context management, Switch, Grid and Indicator components improvements, new hook and\n        10+ other changes\n      </Text>\n\n      <Text c=\"dimmed\" fz=\"sm\" mt=\"md\">\n        Tasks completed:{' '}\n        <Text span fw={500} c=\"bright\">\n          23/36\n        </Text>\n      </Text>\n\n      <Progress value={(23 / 36) * 100} mt={5} />\n\n      <Group justify=\"space-between\" mt=\"md\">\n        <Avatar.Group spacing=\"sm\">\n          <Avatar src={avatars[0]} radius=\"xl\" />\n          <Avatar src={avatars[1]} radius=\"xl\" />\n          <Avatar src={avatars[2]} radius=\"xl\" />\n          <Avatar radius=\"xl\">+5</Avatar>\n        </Avatar.Group>\n        <ActionIcon variant=\"default\" size=\"lg\" radius=\"md\">\n          <IconUpload size=\"1.1rem\" />\n        </ActionIcon>\n      </Group>\n    </Card>\n  );\n}\n"}],"attributes":{"title":"Tasks card","category":"app-cards","dimmed":true,"changelog":"september-2022","withColor":true,"canvas":{"center":true,"maxWidth":360}}},{"component":"UserButton","slug":"user-button","code":[{"fileName":"UserButton.tsx","language":"tsx","code":"import { UnstyledButton, Group, Avatar, Text, rem } from '@mantine/core';\nimport { IconChevronRight } from '@tabler/icons-react';\nimport classes from './UserButton.module.css';\n\nexport function UserButton() {\n  return (\n    <UnstyledButton className={classes.user}>\n      <Group>\n        <Avatar\n          src=\"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n          radius=\"xl\"\n        />\n\n        <div style={{ flex: 1 }}>\n          <Text size=\"sm\" fw={500}>\n            Harriette Spoonlicker\n          </Text>\n\n          <Text c=\"dimmed\" size=\"xs\">\n            hspoonlicker@outlook.com\n          </Text>\n        </div>\n\n        <IconChevronRight style={{ width: rem(14), height: rem(14) }} stroke={1.5} />\n      </Group>\n    </UnstyledButton>\n  );\n}\n"},{"fileName":"UserButton.module.css","language":"css","code":".user {\n  display: block;\n  width: 100%;\n  padding: var(--mantine-spacing-md);\n  color: light-dark(var(--mantine-color-black), var(--mantine-color-dark-0));\n\n  @mixin hover {\n    background-color: light-dark(var(--mantine-color-gray-0), var(--mantine-color-dark-8));\n  }\n}\n"}],"attributes":{"title":"User button","category":"users","canvas":{"center":true,"maxWidth":320}}},{"component":"UserCardImage","slug":"user-card-image","code":[{"fileName":"UserCardImage.tsx","language":"tsx","code":"import { Card, Avatar, Text, Group, Button } from '@mantine/core';\nimport classes from './UserCardImage.module.css';\n\nconst stats = [\n  { value: '34K', label: 'Followers' },\n  { value: '187', label: 'Follows' },\n  { value: '1.6K', label: 'Posts' },\n];\n\nexport function UserCardImage() {\n  const items = stats.map((stat) => (\n    <div key={stat.label}>\n      <Text ta=\"center\" fz=\"lg\" fw={500}>\n        {stat.value}\n      </Text>\n      <Text ta=\"center\" fz=\"sm\" c=\"dimmed\" lh={1}>\n        {stat.label}\n      </Text>\n    </div>\n  ));\n\n  return (\n    <Card withBorder padding=\"xl\" radius=\"md\" className={classes.card}>\n      <Card.Section\n        h={140}\n        style={{\n          backgroundImage:\n            'url(https://images.unsplash.com/photo-1488590528505-98d2b5aba04b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=500&q=80)',\n        }}\n      />\n      <Avatar\n        src=\"https://images.unsplash.com/photo-1623582854588-d60de57fa33f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80\"\n        size={80}\n        radius={80}\n        mx=\"auto\"\n        mt={-30}\n        className={classes.avatar}\n      />\n      <Text ta=\"center\" fz=\"lg\" fw={500} mt=\"sm\">\n        Bill Headbanger\n      </Text>\n      <Text ta=\"center\" fz=\"sm\" c=\"dimmed\">\n        Fullstack engineer\n      </Text>\n      <Group mt=\"md\" justify=\"center\" gap={30}>\n        {items}\n      </Group>\n      <Button fullWidth radius=\"md\" mt=\"xl\" size=\"md\" variant=\"default\">\n        Follow\n      </Button>\n    </Card>\n  );\n}\n"},{"fileName":"UserCardImage.module.css","language":"css","code":".card {\n  background-color: var(--mantine-color-body);\n}\n\n.avatar {\n  border: rem(2px) solid var(--mantine-color-body);\n}\n"}],"attributes":{"title":"User card with image","category":"users","dimmed":true,"canvas":{"center":true,"maxWidth":300}}},{"component":"UserInfoAction","slug":"user-info-action","code":[{"fileName":"UserInfoAction.tsx","language":"tsx","code":"import { Avatar, Text, Button, Paper } from '@mantine/core';\n\nexport function UserInfoAction() {\n  return (\n    <Paper radius=\"md\" withBorder p=\"lg\" bg=\"var(--mantine-color-body)\">\n      <Avatar\n        src=\"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n        size={120}\n        radius={120}\n        mx=\"auto\"\n      />\n      <Text ta=\"center\" fz=\"lg\" fw={500} mt=\"md\">\n        Jane Fingerlicker\n      </Text>\n      <Text ta=\"center\" c=\"dimmed\" fz=\"sm\">\n        jfingerlicker@me.io • Art director\n      </Text>\n\n      <Button variant=\"default\" fullWidth mt=\"md\">\n        Send message\n      </Button>\n    </Paper>\n  );\n}\n"}],"attributes":{"title":"User card with action","category":"users","dimmed":true,"canvas":{"center":true,"maxWidth":320}}},{"component":"UserInfoIcons","slug":"user-info-icons","code":[{"fileName":"UserInfoIcons.tsx","language":"tsx","code":"import { Avatar, Text, Group } from '@mantine/core';\nimport { IconPhoneCall, IconAt } from '@tabler/icons-react';\nimport classes from './UserInfoIcons.module.css';\n\nexport function UserInfoIcons() {\n  return (\n    <div>\n      <Group wrap=\"nowrap\">\n        <Avatar\n          src=\"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80\"\n          size={94}\n          radius=\"md\"\n        />\n        <div>\n          <Text fz=\"xs\" tt=\"uppercase\" fw={700} c=\"dimmed\">\n            Software engineer\n          </Text>\n\n          <Text fz=\"lg\" fw={500} className={classes.name}>\n            Robert Glassbreaker\n          </Text>\n\n          <Group wrap=\"nowrap\" gap={10} mt={3}>\n            <IconAt stroke={1.5} size=\"1rem\" className={classes.icon} />\n            <Text fz=\"xs\" c=\"dimmed\">\n              robert@glassbreaker.io\n            </Text>\n          </Group>\n\n          <Group wrap=\"nowrap\" gap={10} mt={5}>\n            <IconPhoneCall stroke={1.5} size=\"1rem\" className={classes.icon} />\n            <Text fz=\"xs\" c=\"dimmed\">\n              +11 (876) 890 56 23\n            </Text>\n          </Group>\n        </div>\n      </Group>\n    </div>\n  );\n}\n"},{"fileName":"UserInfoIcons.module.css","language":"css","code":".icon {\n  color: light-dark(var(--mantine-color-gray-5), var(--mantine-color-dark-3));\n}\n\n.name {\n  font-family: Greycliff CF, var(--mantine-font-family);\n}\n"}],"attributes":{"title":"User info with icons","category":"users","canvas":{"center":true,"maxWidth":320}}},{"component":"UserMenu","slug":"user-menu","code":[{"fileName":"UserMenu.tsx","language":"tsx","code":"import { Menu, Group, Text, Avatar, useMantineTheme, ActionIcon, rem } from '@mantine/core';\nimport {\n  IconLogout,\n  IconHeart,\n  IconStar,\n  IconMessage,\n  IconSettings,\n  IconPlayerPause,\n  IconTrash,\n  IconSwitchHorizontal,\n  IconChevronRight,\n  IconDots,\n} from '@tabler/icons-react';\n\nexport function UserMenu() {\n  const theme = useMantineTheme();\n  return (\n    <Group justify=\"center\">\n      <Menu\n        withArrow\n        width={300}\n        position=\"bottom\"\n        transitionProps={{ transition: 'pop' }}\n        withinPortal\n      >\n        <Menu.Target>\n          <ActionIcon variant=\"default\">\n            <IconDots style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n          </ActionIcon>\n        </Menu.Target>\n        <Menu.Dropdown>\n          <Menu.Item\n            rightSection={\n              <IconChevronRight style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n            }\n          >\n            <Group>\n              <Avatar\n                radius=\"xl\"\n                src=\"https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=255&q=80\"\n              />\n\n              <div>\n                <Text fw={500}>Nancy Eggshacker</Text>\n                <Text size=\"xs\" c=\"dimmed\">\n                  neggshaker@mantine.dev\n                </Text>\n              </div>\n            </Group>\n          </Menu.Item>\n\n          <Menu.Divider />\n\n          <Menu.Item\n            leftSection={\n              <IconHeart\n                style={{ width: rem(16), height: rem(16) }}\n                stroke={1.5}\n                color={theme.colors.red[6]}\n              />\n            }\n          >\n            Liked posts\n          </Menu.Item>\n          <Menu.Item\n            leftSection={\n              <IconStar\n                style={{ width: rem(16), height: rem(16) }}\n                stroke={1.5}\n                color={theme.colors.yellow[6]}\n              />\n            }\n          >\n            Saved posts\n          </Menu.Item>\n          <Menu.Item\n            leftSection={\n              <IconMessage\n                style={{ width: rem(16), height: rem(16) }}\n                stroke={1.5}\n                color={theme.colors.blue[6]}\n              />\n            }\n          >\n            Your comments\n          </Menu.Item>\n\n          <Menu.Label>Settings</Menu.Label>\n          <Menu.Item\n            leftSection={<IconSettings style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n          >\n            Account settings\n          </Menu.Item>\n          <Menu.Item\n            leftSection={\n              <IconSwitchHorizontal style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n            }\n          >\n            Change account\n          </Menu.Item>\n          <Menu.Item\n            leftSection={<IconLogout style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n          >\n            Logout\n          </Menu.Item>\n\n          <Menu.Divider />\n\n          <Menu.Label>Danger zone</Menu.Label>\n          <Menu.Item\n            leftSection={\n              <IconPlayerPause style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n            }\n          >\n            Pause subscription\n          </Menu.Item>\n          <Menu.Item\n            color=\"red\"\n            leftSection={<IconTrash style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n          >\n            Delete account\n          </Menu.Item>\n        </Menu.Dropdown>\n      </Menu>\n    </Group>\n  );\n}\n"}],"attributes":{"title":"User menu","category":"users","canvas":{"center":false}}},{"component":"UsersRolesTable","slug":"users-roles-table","code":[{"fileName":"UsersRolesTable.tsx","language":"tsx","code":"import { Avatar, Badge, Table, Group, Text, Select } from '@mantine/core';\n\nconst data = [\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Robert Wolfkisser',\n    job: 'Engineer',\n    email: 'rob_wolf@gmail.com',\n    role: 'Collaborator',\n    lastActive: '2 days ago',\n    active: true,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1586297135537-94bc9ba060aa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jill Jailbreaker',\n    job: 'Engineer',\n    email: 'jj@breaker.com',\n    role: 'Collaborator',\n    lastActive: '6 days ago',\n    active: true,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1632922267756-9b71242b1592?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Henry Silkeater',\n    job: 'Designer',\n    email: 'henry@silkeater.io',\n    role: 'Contractor',\n    lastActive: '2 days ago',\n    active: false,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Bill Horsefighter',\n    job: 'Designer',\n    email: 'bhorsefighter@gmail.com',\n    role: 'Contractor',\n    lastActive: '5 days ago',\n    active: true,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1630841539293-bd20634c5d72?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jeremy Footviewer',\n    job: 'Manager',\n    email: 'jeremy@foot.dev',\n    role: 'Manager',\n    lastActive: '3 days ago',\n    active: false,\n  },\n];\n\nconst rolesData = ['Manager', 'Collaborator', 'Contractor'];\n\nexport function UsersRolesTable() {\n  const rows = data.map((item) => (\n    <Table.Tr key={item.name}>\n      <Table.Td>\n        <Group gap=\"sm\">\n          <Avatar size={40} src={item.avatar} radius={40} />\n          <div>\n            <Text fz=\"sm\" fw={500}>\n              {item.name}\n            </Text>\n            <Text fz=\"xs\" c=\"dimmed\">\n              {item.email}\n            </Text>\n          </div>\n        </Group>\n      </Table.Td>\n\n      <Table.Td>\n        <Select\n          data={rolesData}\n          defaultValue={item.role}\n          variant=\"unstyled\"\n          allowDeselect={false}\n        />\n      </Table.Td>\n      <Table.Td>{item.lastActive}</Table.Td>\n      <Table.Td>\n        {item.active ? (\n          <Badge fullWidth variant=\"light\">\n            Active\n          </Badge>\n        ) : (\n          <Badge color=\"gray\" fullWidth variant=\"light\">\n            Disabled\n          </Badge>\n        )}\n      </Table.Td>\n    </Table.Tr>\n  ));\n\n  return (\n    <Table.ScrollContainer minWidth={800}>\n      <Table verticalSpacing=\"sm\">\n        <Table.Thead>\n          <Table.Tr>\n            <Table.Th>Employee</Table.Th>\n            <Table.Th>Role</Table.Th>\n            <Table.Th>Last active</Table.Th>\n            <Table.Th>Status</Table.Th>\n          </Table.Tr>\n        </Table.Thead>\n        <Table.Tbody>{rows}</Table.Tbody>\n      </Table>\n    </Table.ScrollContainer>\n  );\n}\n"}],"attributes":{"title":"Table with roles select","category":"users","canvas":{"center":true,"maxWidth":800}}},{"component":"UsersStack","slug":"users-stack","code":[{"fileName":"UsersStack.tsx","language":"tsx","code":"import { Avatar, Table, Group, Text, ActionIcon, Menu, rem } from '@mantine/core';\nimport {\n  IconPencil,\n  IconMessages,\n  IconNote,\n  IconReportAnalytics,\n  IconTrash,\n  IconDots,\n} from '@tabler/icons-react';\n\nconst data = [\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Robert Wolfkisser',\n    job: 'Engineer',\n    email: 'rob_wolf@gmail.com',\n    rate: 22,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1586297135537-94bc9ba060aa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jill Jailbreaker',\n    job: 'Engineer',\n    email: 'jj@breaker.com',\n    rate: 45,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1632922267756-9b71242b1592?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Henry Silkeater',\n    job: 'Designer',\n    email: 'henry@silkeater.io',\n    rate: 76,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Bill Horsefighter',\n    job: 'Designer',\n    email: 'bhorsefighter@gmail.com',\n    rate: 15,\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1630841539293-bd20634c5d72?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jeremy Footviewer',\n    job: 'Manager',\n    email: 'jeremy@foot.dev',\n    rate: 98,\n  },\n];\n\nexport function UsersStack() {\n  const rows = data.map((item) => (\n    <Table.Tr key={item.name}>\n      <Table.Td>\n        <Group gap=\"sm\">\n          <Avatar size={40} src={item.avatar} radius={40} />\n          <div>\n            <Text fz=\"sm\" fw={500}>\n              {item.name}\n            </Text>\n            <Text c=\"dimmed\" fz=\"xs\">\n              {item.job}\n            </Text>\n          </div>\n        </Group>\n      </Table.Td>\n      <Table.Td>\n        <Text fz=\"sm\">{item.email}</Text>\n        <Text fz=\"xs\" c=\"dimmed\">\n          Email\n        </Text>\n      </Table.Td>\n      <Table.Td>\n        <Text fz=\"sm\">${item.rate.toFixed(1)} / hr</Text>\n        <Text fz=\"xs\" c=\"dimmed\">\n          Rate\n        </Text>\n      </Table.Td>\n      <Table.Td>\n        <Group gap={0} justify=\"flex-end\">\n          <ActionIcon variant=\"subtle\" color=\"gray\">\n            <IconPencil style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n          </ActionIcon>\n          <Menu\n            transitionProps={{ transition: 'pop' }}\n            withArrow\n            position=\"bottom-end\"\n            withinPortal\n          >\n            <Menu.Target>\n              <ActionIcon variant=\"subtle\" color=\"gray\">\n                <IconDots style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n              </ActionIcon>\n            </Menu.Target>\n            <Menu.Dropdown>\n              <Menu.Item\n                leftSection={\n                  <IconMessages style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n                }\n              >\n                Send message\n              </Menu.Item>\n              <Menu.Item\n                leftSection={<IconNote style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n              >\n                Add note\n              </Menu.Item>\n              <Menu.Item\n                leftSection={\n                  <IconReportAnalytics style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n                }\n              >\n                Analytics\n              </Menu.Item>\n              <Menu.Item\n                leftSection={<IconTrash style={{ width: rem(16), height: rem(16) }} stroke={1.5} />}\n                color=\"red\"\n              >\n                Terminate contract\n              </Menu.Item>\n            </Menu.Dropdown>\n          </Menu>\n        </Group>\n      </Table.Td>\n    </Table.Tr>\n  ));\n\n  return (\n    <Table.ScrollContainer minWidth={800}>\n      <Table verticalSpacing=\"md\">\n        <Table.Tbody>{rows}</Table.Tbody>\n      </Table>\n    </Table.ScrollContainer>\n  );\n}\n"}],"attributes":{"title":"Users stack","category":"users","canvas":{"center":true,"maxWidth":800}}},{"component":"UsersTable","slug":"users-table","code":[{"fileName":"UsersTable.tsx","language":"tsx","code":"import { Avatar, Badge, Table, Group, Text, ActionIcon, Anchor, rem } from '@mantine/core';\nimport { IconPencil, IconTrash } from '@tabler/icons-react';\n\nconst data = [\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1624298357597-fd92dfbec01d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Robert Wolfkisser',\n    job: 'Engineer',\n    email: 'rob_wolf@gmail.com',\n    phone: '+44 (452) 886 09 12',\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1586297135537-94bc9ba060aa?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jill Jailbreaker',\n    job: 'Engineer',\n    email: 'jj@breaker.com',\n    phone: '+44 (934) 777 12 76',\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1632922267756-9b71242b1592?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Henry Silkeater',\n    job: 'Designer',\n    email: 'henry@silkeater.io',\n    phone: '+44 (901) 384 88 34',\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Bill Horsefighter',\n    job: 'Designer',\n    email: 'bhorsefighter@gmail.com',\n    phone: '+44 (667) 341 45 22',\n  },\n  {\n    avatar:\n      'https://images.unsplash.com/photo-1630841539293-bd20634c5d72?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=250&q=80',\n    name: 'Jeremy Footviewer',\n    job: 'Manager',\n    email: 'jeremy@foot.dev',\n    phone: '+44 (881) 245 65 65',\n  },\n];\n\nconst jobColors: Record<string, string> = {\n  engineer: 'blue',\n  manager: 'cyan',\n  designer: 'pink',\n};\n\nexport function UsersTable() {\n  const rows = data.map((item) => (\n    <Table.Tr key={item.name}>\n      <Table.Td>\n        <Group gap=\"sm\">\n          <Avatar size={30} src={item.avatar} radius={30} />\n          <Text fz=\"sm\" fw={500}>\n            {item.name}\n          </Text>\n        </Group>\n      </Table.Td>\n\n      <Table.Td>\n        <Badge color={jobColors[item.job.toLowerCase()]} variant=\"light\">\n          {item.job}\n        </Badge>\n      </Table.Td>\n      <Table.Td>\n        <Anchor component=\"button\" size=\"sm\">\n          {item.email}\n        </Anchor>\n      </Table.Td>\n      <Table.Td>\n        <Text fz=\"sm\">{item.phone}</Text>\n      </Table.Td>\n      <Table.Td>\n        <Group gap={0} justify=\"flex-end\">\n          <ActionIcon variant=\"subtle\" color=\"gray\">\n            <IconPencil style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n          </ActionIcon>\n          <ActionIcon variant=\"subtle\" color=\"red\">\n            <IconTrash style={{ width: rem(16), height: rem(16) }} stroke={1.5} />\n          </ActionIcon>\n        </Group>\n      </Table.Td>\n    </Table.Tr>\n  ));\n\n  return (\n    <Table.ScrollContainer minWidth={800}>\n      <Table verticalSpacing=\"sm\">\n        <Table.Thead>\n          <Table.Tr>\n            <Table.Th>Employee</Table.Th>\n            <Table.Th>Job title</Table.Th>\n            <Table.Th>Email</Table.Th>\n            <Table.Th>Phone</Table.Th>\n            <Table.Th />\n          </Table.Tr>\n        </Table.Thead>\n        <Table.Tbody>{rows}</Table.Tbody>\n      </Table>\n    </Table.ScrollContainer>\n  );\n}\n"}],"attributes":{"title":"Table with users","category":"users","canvas":{"center":true,"maxWidth":800}}}]},"__N_SSG":true}